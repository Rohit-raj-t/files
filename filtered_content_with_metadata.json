[
    {
        "content": "My Collection",
        "section": "My Collection",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "My Collection",
        "type": "p"
    },
    {
        "content": "My Collection\u00a0is a space in Langflow where users can manage, organize, and access their flows and components. Flows and components are displayed as individual cards that provide relevant information.",
        "section": "My Collection",
        "type": "p"
    },
    {
        "content": "Folders: Users can organize their projects into folders. Default folders include \"My Projects\" and the ability to create new folders. Hover over a folder to access options to download or delete it.\nSearch Bar\u00a0Enables users to quickly search through their flows and components.\nSelect All: This feature allows users to select all projects displayed on the page for batch actions like moving, deleting, or exporting.",
        "section": "My Collection",
        "type": "ul"
    },
    {
        "content": "Folders: Users can organize their projects into folders. Default folders include \"My Projects\" and the ability to create new folders. Hover over a folder to access options to download or delete it.",
        "section": "My Collection",
        "type": "li"
    },
    {
        "content": "Search Bar\u00a0Enables users to quickly search through their flows and components.",
        "section": "My Collection",
        "type": "li"
    },
    {
        "content": "Select All: This feature allows users to select all projects displayed on the page for batch actions like moving, deleting, or exporting.",
        "section": "My Collection",
        "type": "li"
    },
    {
        "content": "Click on a flow card to open it in Langflow Workspace or use the\u00a0Playground Button\u00a0for direct access to execute and interact with the flow\u2019s chatbot interface.",
        "section": "My Collection",
        "type": "p"
    },
    {
        "content": "Folders",
        "section": "Folders",
        "type": "h2"
    },
    {
        "content": "Folders can help you keep your projects organized in Langflow. They help you manage and categorize your work efficiently, making it easier to find and access the resources you need.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Multiple projects can be stored in\u00a0folders.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Folders allow you to categorize flows and components into manageable groups. This makes it easier to find and access specific projects quickly.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "My Projects\u00a0is a default folder where all new projects and components are initially stored unless specified otherwise. Users can create custom folders to better organize their work according to specific needs.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Hovering over a folder in Langflow provides options to either remove or download the entire folder, allowing you to keep an offline copy or migrate projects between environments",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Create new folders with the\u00a0New folder\u00a0button. One folder can store multiple projects (as the default My Projects folder does).",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "You can download folders of projects as a single JSON file, and upload files and flows to your folder.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Click the\u00a0Trash\u00a0icon to delete a folder.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "How to Create Folders",
        "section": "How to Create Folders",
        "type": "h3"
    },
    {
        "content": "Navigate to the Home Screen:\n\nGo to your Langflow Home Page (outside of projects).",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Navigate to the Home Screen:",
        "section": "How to Create Folders",
        "type": "p"
    },
    {
        "content": "Go to your Langflow Home Page (outside of projects).",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Go to your Langflow Home Page (outside of projects).",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Create a New Folder:\n\nClick on the \"New Folder\" button\n\n\n\nDouble-click the new folder created to rename your folder appropriately to reflect its contents.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Create a New Folder:",
        "section": "How to Create Folders",
        "type": "p"
    },
    {
        "content": "Click on the \"New Folder\" button",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Click on the \"New Folder\" button",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Double-click the new folder created to rename your folder appropriately to reflect its contents.",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Double-click the new folder created to rename your folder appropriately to reflect its contents.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Move Files:\n\nDrag and drop files into the corresponding folders and subfolders to keep everything organized.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Move Files:",
        "section": "How to Create Folders",
        "type": "p"
    },
    {
        "content": "Drag and drop files into the corresponding folders and subfolders to keep everything organized.",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Drag and drop files into the corresponding folders and subfolders to keep everything organized.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Best Practices for Organizing Folders",
        "section": "Best Practices for Organizing Folders",
        "type": "h3"
    },
    {
        "content": "Categorize by Project: Create a main folder for each project, then add projects for different aspects such as research, drafts, and final documents.\nUse Descriptive Names: Use clear and descriptive names for your folders to easily identify their contents at a glance.",
        "section": "Best Practices for Organizing Folders",
        "type": "ul"
    },
    {
        "content": "Categorize by Project: Create a main folder for each project, then add projects for different aspects such as research, drafts, and final documents.",
        "section": "Best Practices for Organizing Folders",
        "type": "li"
    },
    {
        "content": "Use Descriptive Names: Use clear and descriptive names for your folders to easily identify their contents at a glance.",
        "section": "Best Practices for Organizing Folders",
        "type": "li"
    },
    {
        "content": "Example Structure",
        "section": "Example Structure",
        "type": "h3"
    },
    {
        "content": "Here's an example of how you might organize folders and subfolders for a Langflow project:",
        "section": "Example Structure",
        "type": "p"
    },
    {
        "content": "_10Langflow_10\u251c\u2500\u2500 Research_10\u2502   \u251c\u2500\u2500 Articles Project_10\u2502   \u251c\u2500\u2500 Data Project_10\u2502   \u2514\u2500\u2500 Notes Project_10\u2514\u2500\u2500 Documents_10    \u251c\u2500\u2500 RAG Project_10    \u2514\u2500\u2500 Advanced RAG Project",
        "section": "Example Structure",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Example Structure",
        "type": "p"
    },
    {
        "content": "Custom Components",
        "section": "Custom Components",
        "type": "h1"
    },
    {
        "content": "Custom components are created within Langflow and extend the platform's functionality with custom, resusable Python code.",
        "section": "Custom Components",
        "type": "p"
    },
    {
        "content": "Since Langflow operates with Python behind the scenes, you can implement any Python function within a Custom Component. This means you can leverage the power of libraries such as Pandas, Scikit-learn, Numpy, and thousands of other packages to create components that handle data processing in unlimited ways. You can use any type as long as the type is properly annotated in the output methods (e.g.,\u00a0> list[int]).",
        "section": "Custom Components",
        "type": "p"
    },
    {
        "content": "> list[int]",
        "section": "Custom Components",
        "type": "code"
    },
    {
        "content": "Custom Components create reusable and configurable components to enhance the capabilities of Langflow, making it a powerful tool for developing complex processing between user and AI messages.",
        "section": "Custom Components",
        "type": "p"
    },
    {
        "content": "How to Create Custom Components",
        "section": "How to Create Custom Components",
        "type": "h2"
    },
    {
        "content": "Creating custom components in Langflow involves creating a Python class that defines the component's functionality, inputs, and outputs.\nThe default code provides a working structure for your custom component.",
        "section": "How to Create Custom Components",
        "type": "p"
    },
    {
        "content": "_25# from langflow.field_typing import Data_25from langflow.custom import Component_25from langflow.io import MessageTextInput, Output_25from langflow.schema import Data_25_25_25class CustomComponent(Component):_25    display_name = \"Custom Component\"_25    description = \"Use as a template to create your own component.\"_25    documentation: str = \"http://docs.langflow.org/components/custom\"_25    icon = \"custom_components\"_25    name = \"CustomComponent\"_25_25    inputs = [_25        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),_25    ]_25_25    outputs = [_25        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),_25    ]_25_25    def build_output(self) -> Data:_25        data = Data(value=self.input_value)_25        self.status = data_25        return data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "You can create your class in your favorite text editor outside of Langflow and paste it in later, or just follow along in the code pane.",
        "section": "How to Create Custom Components",
        "type": "p"
    },
    {
        "content": "In Langflow, from under Helpers, drag a Custom Component into the workspace.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Open the component's code pane.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Import dependencies.\nYour custom component inherits from the langflow Component class so you need to include it.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Component",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10from langflow.custom import Component_10from langflow.io import MessageTextInput, Output_10from langflow.schema import Data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Define the Class: Start by defining a Python class that inherits from\u00a0Component. This class will encapsulate the functionality of your custom component.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Component",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10class CustomComponent(Component):_10    display_name = \"Custom Component\"_10    description = \"Use as a template to create your own component.\"_10    documentation: str = \"http://docs.langflow.org/components/custom\"_10    icon = \"custom_components\"_10    name = \"CustomComponent\"",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Specify Inputs and Outputs: Use Langflow's input and output classes to define the inputs and outputs of your component. They should be declared as class attributes.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "_10    inputs = [_10        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),_10    ]_10_10    outputs = [_10        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),_10    ]",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Implement Output Methods: Implement\u00a0methods for each output, which contains the logic of your component. These methods can access input values using\u00a0self.<input_name> , return processed values and define what to be displayed in the component with the\u00a0self.status\u00a0attribute.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "self.<input_name>",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "self.status",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10    def build_output(self) -> Data:_10        data = Data(value=self.input_value)_10        self.status = data_10        return data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Use Proper Annotations: Ensure that output methods are properly annotated with their types. Langflow uses these annotations to validate and handle data correctly. For example, this method is annotated to output Data.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10    def build_output(self) -> Data:",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Click Check & Save to confirm your component works.\nYou now have an operational custom component.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Add inputs and modify output methods",
        "section": "Add inputs and modify output methods",
        "type": "h2"
    },
    {
        "content": "This code defines a custom component that accepts 5 inputs and outputs a Message.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "Copy and paste it into the Custom Component code pane and click Check & Save.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "_55from langflow.custom import Component_55from langflow.inputs import StrInput, MultilineInput, SecretStrInput, IntInput, DropdownInput_55from langflow.template import Output, Input_55from langflow.schema.message import Message_55_55class MyCustomComponent(Component):_55    display_name = \"My Custom Component\"_55    description = \"An example of a custom component with various input types.\"_55_55    inputs = [_55        StrInput(_55            name=\"username\",_55            display_name=\"Username\",_55            info=\"Enter your username.\"_55        ),_55        SecretStrInput(_55            name=\"password\",_55            display_name=\"Password\",_55            info=\"Enter your password.\"_55        ),_55        MessageTextInput(_55            name=\"special_message\",_55            display_name=\"special_message\",_55            info=\"Enter a special message.\",_55        ),_55        IntInput(_55            name=\"age\",_55            display_name=\"Age\",_55            info=\"Enter your age.\"_55        ),_55        DropdownInput(_55            name=\"gender\",_55            display_name=\"Gender\",_55            options=[\"Male\", \"Female\", \"Other\"],_55            info=\"Select your gender.\"_55        )_55    ]_55_55    outputs = [_55        Output(display_name=\"Result\", name=\"result\", method=\"process_inputs\"),_55    ]_55_55    def process_inputs(self) -> Message:_55        \"\"\"_55        Process the user inputs and return a Message object._55_55        Returns:_55            Message: A Message object containing the processed information._55        \"\"\"_55        try:_55            processed_text = f\"User {self.username} (Age: {self.age}, Gender: {self.gender}) \" \\_55                             f\"sent the following special message: {self.special_message}\"_55            return Message(text=processed_text)_55        except AttributeError as e:_55            return Message(text=f\"Error processing inputs: {str(e)}\")",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Since the component outputs a Message, you can wire it into a chat and pass messages to yourself.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Your Custom Component accepts the Chat Input message through MessageTextInput, fills in the variables with the process_inputs method, and finally passes the message User Username (Age: 49, Gender: Male) sent the following special message: Hello! to Chat Output.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "MessageTextInput",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "process_inputs",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "User Username (Age: 49, Gender: Male) sent the following special message: Hello!",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "By defining inputs this way, Langflow can automatically handle the validation and display of these fields in the user interface, making it easier to create robust and user-friendly custom components.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "All of the types detailed above derive from a general class that can also be accessed through the generic\u00a0Input\u00a0class.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "Input",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Use MessageInput to get the entire Message object instead of just the text.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "MessageInput",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Input Types",
        "section": "Input Types",
        "type": "h2"
    },
    {
        "content": "Langflow provides several higher-level input types to simplify the creation of custom components. These input types standardize how inputs are defined, validated, and used. Here\u2019s a guide on how to use these inputs and their primary purposes:",
        "section": "Input Types",
        "type": "p"
    },
    {
        "content": "HandleInput",
        "section": "HandleInput",
        "type": "h3"
    },
    {
        "content": "Represents an input that has a handle to a specific type (e.g.,\u00a0BaseLanguageModel,\u00a0BaseRetriever, etc.).",
        "section": "HandleInput",
        "type": "p"
    },
    {
        "content": "BaseLanguageModel",
        "section": "HandleInput",
        "type": "code"
    },
    {
        "content": "BaseRetriever",
        "section": "HandleInput",
        "type": "code"
    },
    {
        "content": "Usage:\u00a0Useful for connecting to specific component types in a flow.",
        "section": "HandleInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Useful for connecting to specific component types in a flow.",
        "section": "HandleInput",
        "type": "li"
    },
    {
        "content": "DataInput",
        "section": "DataInput",
        "type": "h3"
    },
    {
        "content": "Represents an input that receives a\u00a0Data\u00a0object.",
        "section": "DataInput",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "DataInput",
        "type": "code"
    },
    {
        "content": "Usage:\u00a0Ideal for components that process or manipulate data objects.\nInput Types:\u00a0[\"Data\"]",
        "section": "DataInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Ideal for components that process or manipulate data objects.",
        "section": "DataInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Data\"]",
        "section": "DataInput",
        "type": "li"
    },
    {
        "content": "[\"Data\"]",
        "section": "DataInput",
        "type": "code"
    },
    {
        "content": "StrInput",
        "section": "StrInput",
        "type": "h3"
    },
    {
        "content": "Represents a standard string input field.",
        "section": "StrInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for any text input where the user needs to provide a string.\nInput Types:\u00a0[\"Text\"]",
        "section": "StrInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for any text input where the user needs to provide a string.",
        "section": "StrInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Text\"]",
        "section": "StrInput",
        "type": "li"
    },
    {
        "content": "[\"Text\"]",
        "section": "StrInput",
        "type": "code"
    },
    {
        "content": "MessageInput",
        "section": "MessageInput",
        "type": "h3"
    },
    {
        "content": "Represents an input field specifically for\u00a0Message\u00a0objects.",
        "section": "MessageInput",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "MessageInput",
        "type": "code"
    },
    {
        "content": "Usage:\u00a0Used in components that handle or process messages.\nInput Types:\u00a0[\"Message\"]",
        "section": "MessageInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used in components that handle or process messages.",
        "section": "MessageInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Message\"]",
        "section": "MessageInput",
        "type": "li"
    },
    {
        "content": "[\"Message\"]",
        "section": "MessageInput",
        "type": "code"
    },
    {
        "content": "MessageTextInput",
        "section": "MessageTextInput",
        "type": "h3"
    },
    {
        "content": "Represents a text input for messages.",
        "section": "MessageTextInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Suitable for components that need to extract text from message objects.\nInput Types:\u00a0[\"Message\"]",
        "section": "MessageTextInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Suitable for components that need to extract text from message objects.",
        "section": "MessageTextInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Message\"]",
        "section": "MessageTextInput",
        "type": "li"
    },
    {
        "content": "[\"Message\"]",
        "section": "MessageTextInput",
        "type": "code"
    },
    {
        "content": "MultilineInput",
        "section": "MultilineInput",
        "type": "h3"
    },
    {
        "content": "Represents a text field that supports multiple lines.",
        "section": "MultilineInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Ideal for longer text inputs where the user might need to write extended text.\nInput Types:\u00a0[\"Text\"]\nAttributes:\u00a0multiline=True",
        "section": "MultilineInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Ideal for longer text inputs where the user might need to write extended text.",
        "section": "MultilineInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Text\"]",
        "section": "MultilineInput",
        "type": "li"
    },
    {
        "content": "[\"Text\"]",
        "section": "MultilineInput",
        "type": "code"
    },
    {
        "content": "Attributes:\u00a0multiline=True",
        "section": "MultilineInput",
        "type": "li"
    },
    {
        "content": "multiline=True",
        "section": "MultilineInput",
        "type": "code"
    },
    {
        "content": "SecretStrInput",
        "section": "SecretStrInput",
        "type": "h3"
    },
    {
        "content": "Represents a password input field.",
        "section": "SecretStrInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for sensitive text inputs where the input should be hidden (e.g., passwords, API keys).\nAttributes:\u00a0password=True\nInput Types:\u00a0Does not accept input types, meaning it has no input handles for previous nodes/components to connect to it.",
        "section": "SecretStrInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for sensitive text inputs where the input should be hidden (e.g., passwords, API keys).",
        "section": "SecretStrInput",
        "type": "li"
    },
    {
        "content": "Attributes:\u00a0password=True",
        "section": "SecretStrInput",
        "type": "li"
    },
    {
        "content": "password=True",
        "section": "SecretStrInput",
        "type": "code"
    },
    {
        "content": "Input Types:\u00a0Does not accept input types, meaning it has no input handles for previous nodes/components to connect to it.",
        "section": "SecretStrInput",
        "type": "li"
    },
    {
        "content": "IntInput",
        "section": "IntInput",
        "type": "h3"
    },
    {
        "content": "Represents an integer input field.",
        "section": "IntInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be an integer.\nInput Types:\u00a0[\"Integer\"]",
        "section": "IntInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be an integer.",
        "section": "IntInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Integer\"]",
        "section": "IntInput",
        "type": "li"
    },
    {
        "content": "[\"Integer\"]",
        "section": "IntInput",
        "type": "code"
    },
    {
        "content": "FloatInput",
        "section": "FloatInput",
        "type": "h3"
    },
    {
        "content": "Represents a float input field.",
        "section": "FloatInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be a floating-point number.\nInput Types:\u00a0[\"Float\"]",
        "section": "FloatInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be a floating-point number.",
        "section": "FloatInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Float\"]",
        "section": "FloatInput",
        "type": "li"
    },
    {
        "content": "[\"Float\"]",
        "section": "FloatInput",
        "type": "code"
    },
    {
        "content": "BoolInput",
        "section": "BoolInput",
        "type": "h3"
    },
    {
        "content": "Represents a boolean input field.",
        "section": "BoolInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for true/false or yes/no type inputs.\nInput Types:\u00a0[\"Boolean\"]",
        "section": "BoolInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for true/false or yes/no type inputs.",
        "section": "BoolInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Boolean\"]",
        "section": "BoolInput",
        "type": "li"
    },
    {
        "content": "[\"Boolean\"]",
        "section": "BoolInput",
        "type": "code"
    },
    {
        "content": "NestedDictInput",
        "section": "NestedDictInput",
        "type": "h3"
    },
    {
        "content": "Represents an input field for nested dictionaries.",
        "section": "NestedDictInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for more complex data structures where the input needs to be a dictionary.\nInput Types:\u00a0[\"NestedDict\"]",
        "section": "NestedDictInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for more complex data structures where the input needs to be a dictionary.",
        "section": "NestedDictInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"NestedDict\"]",
        "section": "NestedDictInput",
        "type": "li"
    },
    {
        "content": "[\"NestedDict\"]",
        "section": "NestedDictInput",
        "type": "code"
    },
    {
        "content": "DictInput",
        "section": "DictInput",
        "type": "h3"
    },
    {
        "content": "Represents an input field for dictionaries.",
        "section": "DictInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Suitable for inputs that require a dictionary format.\nInput Types:\u00a0[\"Dict\"]",
        "section": "DictInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Suitable for inputs that require a dictionary format.",
        "section": "DictInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Dict\"]",
        "section": "DictInput",
        "type": "li"
    },
    {
        "content": "[\"Dict\"]",
        "section": "DictInput",
        "type": "code"
    },
    {
        "content": "DropdownInput",
        "section": "DropdownInput",
        "type": "h3"
    },
    {
        "content": "Represents a dropdown input field.",
        "section": "DropdownInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used where the user needs to select from a predefined list of options.\nAttributes:\u00a0options\u00a0to define the list of selectable options.\nInput Types:\u00a0[\"Text\"]",
        "section": "DropdownInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used where the user needs to select from a predefined list of options.",
        "section": "DropdownInput",
        "type": "li"
    },
    {
        "content": "Attributes:\u00a0options\u00a0to define the list of selectable options.",
        "section": "DropdownInput",
        "type": "li"
    },
    {
        "content": "options",
        "section": "DropdownInput",
        "type": "code"
    },
    {
        "content": "Input Types:\u00a0[\"Text\"]",
        "section": "DropdownInput",
        "type": "li"
    },
    {
        "content": "[\"Text\"]",
        "section": "DropdownInput",
        "type": "code"
    },
    {
        "content": "FileInput",
        "section": "FileInput",
        "type": "h3"
    },
    {
        "content": "Represents a file input field.",
        "section": "FileInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used to upload files.\nAttributes:\u00a0file_types\u00a0to specify the types of files that can be uploaded.\nInput Types:\u00a0[\"File\"]",
        "section": "FileInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used to upload files.",
        "section": "FileInput",
        "type": "li"
    },
    {
        "content": "Attributes:\u00a0file_types\u00a0to specify the types of files that can be uploaded.",
        "section": "FileInput",
        "type": "li"
    },
    {
        "content": "file_types",
        "section": "FileInput",
        "type": "code"
    },
    {
        "content": "Input Types:\u00a0[\"File\"]",
        "section": "FileInput",
        "type": "li"
    },
    {
        "content": "[\"File\"]",
        "section": "FileInput",
        "type": "code"
    },
    {
        "content": "Generic Input",
        "section": "Generic Input",
        "type": "h3"
    },
    {
        "content": "Langflow offers native input types, but you can use any type as long as they are properly annotated in the output methods (e.g.,\u00a0-> list[int]).",
        "section": "Generic Input",
        "type": "p"
    },
    {
        "content": "-> list[int]",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "The\u00a0Input\u00a0class is highly customizable, allowing you to specify a wide range of attributes for each input field. It has several attributes that can be customized:",
        "section": "Generic Input",
        "type": "p"
    },
    {
        "content": "Input",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "field_type: Specifies the type of field (e.g.,\u00a0str,\u00a0int). Default is\u00a0str.\nrequired: Boolean indicating if the field is required. Default is\u00a0False.\nplaceholder: Placeholder text for the input field. Default is an empty string.\nis_list: Boolean indicating if the field should accept a list of values. Default is\u00a0False.\nshow: Boolean indicating if the field should be shown. Default is\u00a0True.\nmultiline: Boolean indicating if the field should allow multi-line input. Default is\u00a0False.\nvalue: Default value for the input field. Default is\u00a0None.\nfile_types: List of accepted file types (for file inputs). Default is an empty list.\nfile_path: File path if the field is a file input. Default is\u00a0None.\npassword: Boolean indicating if the field is a password. Default is\u00a0False.\noptions: List of options for the field (for dropdowns). Default is\u00a0None.\nname: Name of the input field. Default is\u00a0None.\ndisplay_name: Display name for the input field. Default is\u00a0None.\nadvanced: Boolean indicating if the field is an advanced parameter. Default is\u00a0False.\ninput_types: List of accepted input types. Default is\u00a0None.\ndynamic: Boolean indicating if the field is dynamic. Default is\u00a0False.\ninfo: Additional information or tooltip for the input field. Default is an empty string.\nreal_time_refresh: Boolean indicating if the field should refresh in real-time. Default is\u00a0None.\nrefresh_button: Boolean indicating if the field should have a refresh button. Default is\u00a0None.\nrefresh_button_text: Text for the refresh button. Default is\u00a0None.\nrange_spec: Range specification for numeric fields. Default is\u00a0None.\nload_from_db: Boolean indicating if the field should load from the database. Default is\u00a0False.\ntitle_case: Boolean indicating if the display name should be in title case. Default is\u00a0True.",
        "section": "Generic Input",
        "type": "ul"
    },
    {
        "content": "field_type: Specifies the type of field (e.g.,\u00a0str,\u00a0int). Default is\u00a0str.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "field_type",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "str",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "int",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "str",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "required: Boolean indicating if the field is required. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "required",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "placeholder: Placeholder text for the input field. Default is an empty string.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "placeholder",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "is_list: Boolean indicating if the field should accept a list of values. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "is_list",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "show: Boolean indicating if the field should be shown. Default is\u00a0True.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "show",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "multiline: Boolean indicating if the field should allow multi-line input. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "multiline",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "value: Default value for the input field. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "value",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "file_types: List of accepted file types (for file inputs). Default is an empty list.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "file_types",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "file_path: File path if the field is a file input. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "file_path",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "password: Boolean indicating if the field is a password. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "password",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "options: List of options for the field (for dropdowns). Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "options",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "name: Name of the input field. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "name",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "display_name: Display name for the input field. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "display_name",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "advanced: Boolean indicating if the field is an advanced parameter. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "advanced",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "input_types: List of accepted input types. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "input_types",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "dynamic: Boolean indicating if the field is dynamic. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "dynamic",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "info: Additional information or tooltip for the input field. Default is an empty string.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "info",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "real_time_refresh: Boolean indicating if the field should refresh in real-time. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "real_time_refresh",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "refresh_button: Boolean indicating if the field should have a refresh button. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "refresh_button",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "refresh_button_text: Text for the refresh button. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "refresh_button_text",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "range_spec: Range specification for numeric fields. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "range_spec",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "load_from_db: Boolean indicating if the field should load from the database. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "load_from_db",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "title_case: Boolean indicating if the display name should be in title case. Default is\u00a0True.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "title_case",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "Create a Custom Component with Generic Input",
        "section": "Create a Custom Component with Generic Input",
        "type": "h2"
    },
    {
        "content": "Here is an example of how to define inputs for a component using the\u00a0Input\u00a0class.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "Input",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "Copy and paste it into the Custom Component code pane and click Check & Save.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "_76from langflow.template import Input, Output_76from langflow.custom import Component_76from langflow.field_typing import Text_76from langflow.schema.message import Message_76from typing import Dict, Any_76_76class TextAnalyzerComponent(Component):_76    display_name = \"Text Analyzer\"_76    description = \"Analyzes input text and provides basic statistics.\"_76_76    inputs = [_76        Input(_76            name=\"input_text\",_76            display_name=\"Input Text\",_76            field_type=\"Message\",_76            required=True,_76            placeholder=\"Enter text to analyze\",_76            multiline=True,_76            info=\"The text you want to analyze.\",_76            input_types=[\"Text\"]_76        ),_76        Input(_76            name=\"include_word_count\",_76            display_name=\"Include Word Count\",_76            field_type=\"bool\",_76            required=False,_76            info=\"Whether to include word count in the analysis.\",_76        ),_76        Input(_76            name=\"perform_sentiment_analysis\",_76            display_name=\"Perform Sentiment Analysis\",_76            field_type=\"bool\",_76            required=False,_76            info=\"Whether to perform basic sentiment analysis.\",_76        ),_76    ]_76_76    outputs = [_76        Output(display_name=\"Analysis Results\", name=\"results\", method=\"analyze_text\"),_76    ]_76_76    def analyze_text(self) -> Message:_76        # Extract text from the Message object_76        if isinstance(self.input_text, Message):_76            text = self.input_text.text_76        else:_76            text = str(self.input_text)_76_76        results = {_76            \"character_count\": len(text),_76            \"sentence_count\": text.count('.') + text.count('!') + text.count('?')_76        }_76_76        if self.include_word_count:_76            results[\"word_count\"] = len(text.split())_76_76        if self.perform_sentiment_analysis:_76            # Basic sentiment analysis_76            text_lower = text.lower()_76            if \"happy\" in text_lower or \"good\" in text_lower:_76                sentiment = \"positive\"_76            elif \"sad\" in text_lower or \"bad\" in text_lower:_76                sentiment = \"negative\"_76            else:_76                sentiment = \"neutral\"_76_76            results[\"sentiment\"] = sentiment_76_76        # Convert the results dictionary to a formatted string_76        formatted_results = \"\\n\".join([f\"{key}: {value}\" for key, value in results.items()])_76_76        # Return a Message object_76        return Message(text=formatted_results)_76_76# Define how to use the inputs and outputs_76component = TextAnalyzerComponent()",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "In this custom component:",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "The input_text input is a required multi-line text field that accepts a Message object or a string. It's used to provide the text for analysis.\n\n\nThe include_word_count input is an optional boolean field. When set to True, it adds a word count to the analysis results.\n\n\nThe perform_sentiment_analysis input is an optional boolean field. When set to True, it triggers a basic sentiment analysis of the input text.",
        "section": "Create a Custom Component with Generic Input",
        "type": "ul"
    },
    {
        "content": "The input_text input is a required multi-line text field that accepts a Message object or a string. It's used to provide the text for analysis.",
        "section": "Create a Custom Component with Generic Input",
        "type": "li"
    },
    {
        "content": "The input_text input is a required multi-line text field that accepts a Message object or a string. It's used to provide the text for analysis.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "input_text",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "The include_word_count input is an optional boolean field. When set to True, it adds a word count to the analysis results.",
        "section": "Create a Custom Component with Generic Input",
        "type": "li"
    },
    {
        "content": "The include_word_count input is an optional boolean field. When set to True, it adds a word count to the analysis results.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "include_word_count",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "The perform_sentiment_analysis input is an optional boolean field. When set to True, it triggers a basic sentiment analysis of the input text.",
        "section": "Create a Custom Component with Generic Input",
        "type": "li"
    },
    {
        "content": "The perform_sentiment_analysis input is an optional boolean field. When set to True, it triggers a basic sentiment analysis of the input text.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "perform_sentiment_analysis",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "The component performs basic text analysis, including character count and sentence count (based on punctuation marks). If word count is enabled, it splits the text and counts the words. If sentiment analysis is enabled, it performs a simple keyword-based sentiment classification (positive, negative, or neutral).",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "Since the component inputs and outputs a Message, you can wire the component into a chat and see how the basic custom component logic interacts with your input.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "Create a Custom Component with Multiple Outputs",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "h2"
    },
    {
        "content": "In Langflow, custom components can have multiple outputs. Each output can be associated with a specific method in the component, allowing you to define distinct behaviors for each output path. This feature is particularly useful when you want to route data based on certain conditions or process it in multiple ways.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "Definition of Outputs: Each output is defined in the\u00a0outputs\u00a0list of the component. Each output is associated with a display name, an internal name, and a method that gets called to generate the output.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "outputs",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "Output Methods: The methods associated with outputs are responsible for generating the data for that particular output. These methods are called when the component is executed, and each method can independently produce its result.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "This example component has two outputs:",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "process_data: Processes the input text (e.g., converts it to uppercase) and returns it.\nget_processing_function: Returns the\u00a0process_data\u00a0method itself to be reused in composition.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "ul"
    },
    {
        "content": "process_data: Processes the input text (e.g., converts it to uppercase) and returns it.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "process_data",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "get_processing_function: Returns the\u00a0process_data\u00a0method itself to be reused in composition.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "get_processing_function",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "process_data",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "_33from typing import Callable_33from langflow.custom import Component_33from langflow.inputs import StrInput_33from langflow.template import Output_33from langflow.field_typing import Text_33_33class DualOutputComponent(Component):_33    display_name = \"Dual Output\"_33    description = \"Processes input text and returns both the result and the processing function.\"_33    icon = \"double-arrow\"_33_33    inputs = [_33        StrInput(_33            name=\"input_text\",_33            display_name=\"Input Text\",_33            info=\"The text input to be processed.\",_33        ),_33    ]_33_33    outputs = [_33        Output(display_name=\"Processed Data\", name=\"processed_data\", method=\"process_data\"),_33        Output(display_name=\"Processing Function\", name=\"processing_function\", method=\"get_processing_function\"),_33    ]_33_33    def process_data(self) -> Text:_33        # Process the input text (e.g., convert to uppercase)_33        processed = self.input_text.upper()_33        self.status = processed_33        return processed_33_33    def get_processing_function(self) -> Callable[[], Text]:_33        # Return the processing function itself_33        return self.process_data",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "This example shows how to define multiple outputs in a custom component. The first output returns the processed data, while the second output returns the processing function itself.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "The\u00a0processing_function\u00a0output can be used in scenarios where the function itself is needed for further processing or dynamic flow control. Notice how both outputs are properly annotated with their respective types, ensuring clarity and type safety.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "processing_function",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "Special Operations",
        "section": "Special Operations",
        "type": "h2"
    },
    {
        "content": "Advanced methods and attributes offer additional control and functionality. Understanding how to leverage these can enhance your custom components' capabilities.",
        "section": "Special Operations",
        "type": "p"
    },
    {
        "content": "self.inputs: Access all defined inputs. Useful when an output method needs to interact with multiple inputs.\nself.outputs: Access all defined outputs. This is particularly useful if an output function needs to trigger another output function.\nself.status: Use this to update the component's status or intermediate results. It helps track the component's internal state or store temporary data.\nself.graph.flow_id: Retrieve the flow ID, useful for maintaining context or debugging.\nself.stop(\"output_name\"): Use this method within an output function to prevent data from being sent through other components. This method stops next component execution and is particularly useful for specific operations where a component should stop from running based on specific conditions.",
        "section": "Special Operations",
        "type": "ul"
    },
    {
        "content": "self.inputs: Access all defined inputs. Useful when an output method needs to interact with multiple inputs.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.inputs",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.outputs: Access all defined outputs. This is particularly useful if an output function needs to trigger another output function.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.outputs",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.status: Use this to update the component's status or intermediate results. It helps track the component's internal state or store temporary data.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.status",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.graph.flow_id: Retrieve the flow ID, useful for maintaining context or debugging.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.graph.flow_id",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.stop(\"output_name\"): Use this method within an output function to prevent data from being sent through other components. This method stops next component execution and is particularly useful for specific operations where a component should stop from running based on specific conditions.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.stop(\"output_name\")",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "Contribute Custom Components to Langflow",
        "section": "Contribute Custom Components to Langflow",
        "type": "h2"
    },
    {
        "content": "See  to contribute your custom component to Langflow.",
        "section": "Contribute Custom Components to Langflow",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Contribute Custom Components to Langflow",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Data",
        "type": "h1"
    },
    {
        "content": "API Request",
        "section": "API Request",
        "type": "h2"
    },
    {
        "content": "This component sends HTTP requests to the specified URLs.",
        "section": "API Request",
        "type": "p"
    },
    {
        "content": "Use this component to interact with external APIs or services and retrieve data. Ensure that the URLs are valid and that you configure the method, headers, body, and timeout correctly.",
        "section": "API Request",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Directory",
        "section": "Directory",
        "type": "h2"
    },
    {
        "content": "This component recursively loads files from a directory, with options for file types, depth, and concurrency.",
        "section": "Directory",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "File",
        "section": "File",
        "type": "h2"
    },
    {
        "content": "The FileComponent is a class that loads and parses text files of various supported formats, converting the content into a Data object. It supports multiple file types and provides an option for silent error handling.",
        "section": "File",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "URL",
        "section": "URL",
        "type": "h2"
    },
    {
        "content": "The URLComponent is a class that fetches content from one or more URLs, processes the content, and returns it as a list of Data objects. It ensures that the provided URLs are valid and uses WebBaseLoader to fetch the content.",
        "section": "URL",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Gmail Loader",
        "section": "Gmail Loader",
        "type": "h2"
    },
    {
        "content": "This component loads emails from Gmail using provided credentials and filters.",
        "section": "Gmail Loader",
        "type": "p"
    },
    {
        "content": "For more on creating a service account JSON, see .",
        "section": "Gmail Loader",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Google Drive Loader",
        "section": "Google Drive Loader",
        "type": "h2"
    },
    {
        "content": "This component loads documents from Google Drive using provided credentials and a single document ID.",
        "section": "Google Drive Loader",
        "type": "p"
    },
    {
        "content": "For more on creating a service account JSON, see .",
        "section": "Google Drive Loader",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Google Drive Search",
        "section": "Google Drive Search",
        "type": "h2"
    },
    {
        "content": "This component searches Google Drive files using provided credentials and query parameters.",
        "section": "Google Drive Search",
        "type": "p"
    },
    {
        "content": "For more on creating a service account JSON, see .",
        "section": "Google Drive Search",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Webhook Input",
        "section": "Webhook Input",
        "type": "h2"
    },
    {
        "content": "This component defines a webhook input for the flow. The flow can be triggered by an external HTTP POST request (webhook) sending a JSON payload.",
        "section": "Webhook Input",
        "type": "p"
    },
    {
        "content": "If the input is not valid JSON, the component will wrap it in a \"payload\" field. The component's status will reflect any errors or the processed data.",
        "section": "Webhook Input",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Embedding Models",
        "section": "Embedding Models",
        "type": "h1"
    },
    {
        "content": "Embeddings models are used to convert text into numerical vectors. These vectors can be used for various tasks such as similarity search, clustering, and classification.",
        "section": "Embedding Models",
        "type": "p"
    },
    {
        "content": "AI/ML",
        "section": "AI/ML",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using the .",
        "section": "AI/ML",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Amazon Bedrock Embeddings",
        "section": "Amazon Bedrock Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is used to load embedding models from .",
        "section": "Amazon Bedrock Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "amazon.titan-embed-text-v1",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "modelId",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "list-foundation-models",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "us-west-2",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "AWS_DEFAULT_REGION",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Astra DB vectorize",
        "section": "Astra DB vectorize",
        "type": "h2"
    },
    {
        "content": "Connect this component to the Embeddings port of the  to generate embeddings.",
        "section": "Astra DB vectorize",
        "type": "p"
    },
    {
        "content": "This component requires that your Astra DB database has a collection that uses a vectorize embedding provider integration.\nFor more information and instructions, see .",
        "section": "Astra DB vectorize",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "authentication",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Azure OpenAI Embeddings",
        "section": "Azure OpenAI Embeddings",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using Azure OpenAI models.",
        "section": "Azure OpenAI Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "text-embedding-3-small",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "https://example-resource.azure.openai.com/",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Cohere Embeddings",
        "section": "Cohere Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is used to load embedding models from .",
        "section": "Cohere Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "embed-english-v2.0",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Embedding similarity",
        "section": "Embedding similarity",
        "type": "h2"
    },
    {
        "content": "This component computes selected forms of similarity between two embedding vectors.",
        "section": "Embedding similarity",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Google generative AI embeddings",
        "section": "Google generative AI embeddings",
        "type": "h2"
    },
    {
        "content": "This component connects to Google's generative AI embedding service using the GoogleGenerativeAIEmbeddings class from the langchain-google-genai package.",
        "section": "Google generative AI embeddings",
        "type": "p"
    },
    {
        "content": "langchain-google-genai",
        "section": "Google generative AI embeddings",
        "type": "code"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hugging Face Embeddings",
        "section": "Hugging Face Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is deprecated as of Langflow version 1.0.18.\nInstead, use the .",
        "section": "Hugging Face Embeddings",
        "type": "p"
    },
    {
        "content": "This component loads embedding models from HuggingFace.",
        "section": "Hugging Face Embeddings",
        "type": "p"
    },
    {
        "content": "Use this component to generate embeddings using locally downloaded Hugging Face models. Ensure you have sufficient computational resources to run the models.",
        "section": "Hugging Face Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hugging Face embeddings Inference API",
        "section": "Hugging Face embeddings Inference API",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using Hugging Face Inference API models.",
        "section": "Hugging Face embeddings Inference API",
        "type": "p"
    },
    {
        "content": "Use this component to create embeddings with Hugging Face's hosted models. Ensure you have a valid Hugging Face API key.",
        "section": "Hugging Face embeddings Inference API",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "MistralAI",
        "section": "MistralAI",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using MistralAI models.",
        "section": "MistralAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "NVIDIA",
        "section": "NVIDIA",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using NVIDIA models.",
        "section": "NVIDIA",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Ollama Embeddings",
        "section": "Ollama Embeddings",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using Ollama models.",
        "section": "Ollama Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "llama2",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "http://localhost:11434",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "OpenAI Embeddings",
        "section": "OpenAI Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is used to load embedding models from .",
        "section": "OpenAI Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "[]",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "[\"all\"]",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "1000",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "text-embedding-3-small",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "8191",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "6",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "text-embedding-3-small",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Text embedder",
        "section": "Text embedder",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings for a given message using a specified embedding model.",
        "section": "Text embedder",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "VertexAI Embeddings",
        "section": "VertexAI Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is a wrapper around  .",
        "section": "VertexAI Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "us-central1",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "128",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "text-bison",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "5",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "0",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "k",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "40",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "p",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "0.95",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "model_name",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Helpers",
        "section": "Helpers",
        "type": "h1"
    },
    {
        "content": "Helper components provide utility functions to help manage data, tasks, and other components in your flow.",
        "section": "Helpers",
        "type": "p"
    },
    {
        "content": "Chat Memory",
        "section": "Chat Memory",
        "type": "h2"
    },
    {
        "content": "This component retrieves and manages chat messages from Langflow tables or an external memory.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "{text}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "{sender}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Combine Text",
        "section": "Combine Text",
        "type": "h2"
    },
    {
        "content": "This component concatenates two text sources into a single text chunk using a specified delimiter.",
        "section": "Combine Text",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Create List",
        "section": "Create List",
        "type": "h2"
    },
    {
        "content": "This component dynamically creates a record with a specified number of fields.",
        "section": "Create List",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Custom Component",
        "section": "Custom Component",
        "type": "h2"
    },
    {
        "content": "Use this component as a template to create your custom component.",
        "section": "Custom Component",
        "type": "p"
    },
    {
        "content": "For more, see .",
        "section": "Custom Component",
        "type": "p"
    },
    {
        "content": "Filter Data",
        "section": "Filter Data",
        "type": "h2"
    },
    {
        "content": "This component filters a Data object based on a list of keys.",
        "section": "Filter Data",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hierarchical Task",
        "section": "Hierarchical Task",
        "type": "h2"
    },
    {
        "content": "This component creates and manages hierarchical tasks for CrewAI agents in a Playground environment.",
        "section": "Hierarchical Task",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Hierarchical Task",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "ID Generator",
        "section": "ID Generator",
        "type": "h2"
    },
    {
        "content": "This component generates a unique ID.",
        "section": "ID Generator",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Parse JSON",
        "section": "Parse JSON",
        "type": "h2"
    },
    {
        "content": "This component converts and extracts JSON fields using JQ queries.",
        "section": "Parse JSON",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Merge Data",
        "section": "Merge Data",
        "type": "h2"
    },
    {
        "content": "This component combines multiple data sources into a single unified Data object.",
        "section": "Merge Data",
        "type": "p"
    },
    {
        "content": "The component iterates through the input list of Data objects, merging them into a single Data object. If the input list is empty, it returns an empty Data object. If there's only one input Data object, it returns that object unchanged. The merging process uses the addition operator to combine Data objects.",
        "section": "Merge Data",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Parse Data",
        "section": "Parse Data",
        "type": "h2"
    },
    {
        "content": "The ParseData component converts Data objects into plain text using a specified template.\nThis component transforms structured data into human-readable text formats, allowing for customizable output through the use of templates.",
        "section": "Parse Data",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "{text}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "{data}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Sequential Task",
        "section": "Sequential Task",
        "type": "h2"
    },
    {
        "content": "This component creates and manage sequential tasks for CrewAI agents. It builds a SequentialTask object with the provided description, expected output, and agent, allowing for the specification of tools and asynchronous execution.",
        "section": "Sequential Task",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Sequential Task",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Split Text",
        "section": "Split Text",
        "type": "h2"
    },
    {
        "content": "This component splits text into chunks of a specified length.",
        "section": "Split Text",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Store Message",
        "section": "Store Message",
        "type": "h2"
    },
    {
        "content": "This component stores chat messages or text into Langflow tables or an external memory.",
        "section": "Store Message",
        "type": "p"
    },
    {
        "content": "It provides flexibility in managing message storage and retrieval within a chat system.",
        "section": "Store Message",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Inputs & Outputs",
        "section": "Inputs & Outputs",
        "type": "h1"
    },
    {
        "content": "This category of components defines where data enters and exits your flow. They dynamically alter the Playground and can be renamed to facilitate building and maintaining your flows.",
        "section": "Inputs & Outputs",
        "type": "p"
    },
    {
        "content": "Inputs",
        "section": "Inputs",
        "type": "h2"
    },
    {
        "content": "Inputs are components used to define where data enters your flow. They can receive data from various sources, such as users, databases, or any other source that can be converted to Text or Data.",
        "section": "Inputs",
        "type": "p"
    },
    {
        "content": "Chat Input",
        "section": "Chat Input",
        "type": "h3"
    },
    {
        "content": "This component collects user input from the chat.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "The difference between Chat Input and other Input components is the output format, the number of configurable fields, and the way they are displayed in the Playground.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "Chat Input components can output Text or Data. When you want to pass the sender name or sender to the next component, use the Data output. To pass only the message, use the Text output. Passing only the message is useful when saving the message to a database or a memory system like Zep.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "If \"As Data\" is true and the \"Message\" is a Data, the data will be updated with the Sender, Sender Name, and Session ID.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "Text Input",
        "section": "Text Input",
        "type": "h3"
    },
    {
        "content": "This component adds an Input field on the Playground, allowing parameter definition while running and testing your flow.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "The Data Template field specifies how a Data should be converted into Text. This is particularly useful when you want to extract specific information from a Data and pass it as text to the next component in the sequence.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "For example, if you have a Data with the following structure:",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "_10{ \"name\": \"John Doe\", \"age\": 30, \"email\": \"johndoe@email.com\"}",
        "section": "Text Input",
        "type": "code"
    },
    {
        "content": "A template with Name: {name}, Age: {age} will convert the Data into a text string of Name: John Doe, Age: 30.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "{name}, Age: {age}",
        "section": "Text Input",
        "type": "code"
    },
    {
        "content": "Name: John Doe, Age: 30",
        "section": "Text Input",
        "type": "code"
    },
    {
        "content": "If you pass more than one Data, the text will be concatenated with a new line separator.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "Outputs",
        "section": "Outputs",
        "type": "h2"
    },
    {
        "content": "Outputs define where data exits your flow. They can send data to the user, the Playground, or define how data will be displayed in the Playground.",
        "section": "Outputs",
        "type": "p"
    },
    {
        "content": "Chat Output",
        "section": "Chat Output",
        "type": "h3"
    },
    {
        "content": "This component sends a message to the chat.",
        "section": "Chat Output",
        "type": "p"
    },
    {
        "content": "If \"As Data\" is true and the \"Message\" is a Data, the data will be updated with the Sender, Sender Name, and Session ID.",
        "section": "Chat Output",
        "type": "p"
    },
    {
        "content": "Text Output",
        "section": "Text Output",
        "type": "h3"
    },
    {
        "content": "This component displays text data to the user without sending it to the chat. Defaults to an empty string.",
        "section": "Text Output",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Text Output",
        "type": "p"
    },
    {
        "content": "Loaders",
        "section": "Loaders",
        "type": "h1"
    },
    {
        "content": "Loaders are components used to load documents from various sources, such as databases, websites, and local files. They can be used to fetch data from external sources and convert it into a format that can be processed by other components.",
        "section": "Loaders",
        "type": "p"
    },
    {
        "content": "Confluence",
        "section": "Confluence",
        "type": "h2"
    },
    {
        "content": "The Confluence component integrates with the Confluence wiki collaboration platform to load and process documents. It utilizes the ConfluenceLoader from LangChain to fetch content from a specified Confluence space.",
        "section": "Confluence",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "GitLoader",
        "section": "GitLoader",
        "type": "h2"
    },
    {
        "content": "The GitLoader component uses the GitLoader from LangChain to fetch and load documents from a specified Git repository.",
        "section": "GitLoader",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Unstructured",
        "section": "Unstructured",
        "type": "h2"
    },
    {
        "content": "This component uses the  library to load and parse PDF, DOCX, and TXT files into structured data. This component works with both the open-source library and the Unstructured API.",
        "section": "Unstructured",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Models",
        "section": "Models",
        "type": "h1"
    },
    {
        "content": "Model components are used to generate text using language models. These components can be used to generate text for various tasks such as chatbots, content generation, and more.",
        "section": "Models",
        "type": "p"
    },
    {
        "content": "AI/ML API",
        "section": "AI/ML API",
        "type": "h2"
    },
    {
        "content": "This component creates a ChatOpenAI model instance using the AIML API.",
        "section": "AI/ML API",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "AI/ML API",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Amazon Bedrock",
        "section": "Amazon Bedrock",
        "type": "h2"
    },
    {
        "content": "This component generates text using Amazon Bedrock LLMs.",
        "section": "Amazon Bedrock",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Amazon Bedrock",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Anthropic",
        "section": "Anthropic",
        "type": "h2"
    },
    {
        "content": "This component allows the generation of text using Anthropic Chat and Language models.",
        "section": "Anthropic",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Anthropic",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Azure OpenAI",
        "section": "Azure OpenAI",
        "type": "h2"
    },
    {
        "content": "This component generates text using Azure OpenAI LLM.",
        "section": "Azure OpenAI",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Azure OpenAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "0.7",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "1000",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Cohere",
        "section": "Cohere",
        "type": "h2"
    },
    {
        "content": "This component generates text using Cohere's language models.",
        "section": "Cohere",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Cohere",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "256",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "0.75",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Google Generative AI",
        "section": "Google Generative AI",
        "type": "h2"
    },
    {
        "content": "This component generates text using Google's Generative AI models.",
        "section": "Google Generative AI",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Google Generative AI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "\"gemini-pro\"",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Groq",
        "section": "Groq",
        "type": "h2"
    },
    {
        "content": "This component generates text using Groq's language models.",
        "section": "Groq",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Groq",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hugging Face API",
        "section": "Hugging Face API",
        "type": "h2"
    },
    {
        "content": "This component generates text using Hugging Face's language models.",
        "section": "Hugging Face API",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Hugging Face API",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Maritalk",
        "section": "Maritalk",
        "type": "h2"
    },
    {
        "content": "This component generates text using Maritalk LLMs.",
        "section": "Maritalk",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Maritalk",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Mistral",
        "section": "Mistral",
        "type": "h2"
    },
    {
        "content": "This component generates text using MistralAI LLMs.",
        "section": "Mistral",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Mistral",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "NVIDIA",
        "section": "NVIDIA",
        "type": "h2"
    },
    {
        "content": "This component generates text using NVIDIA LLMs.",
        "section": "NVIDIA",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "NVIDIA",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Ollama",
        "section": "Ollama",
        "type": "h2"
    },
    {
        "content": "This component generates text using Ollama's language models.",
        "section": "Ollama",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Ollama",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "OpenAI",
        "section": "OpenAI",
        "type": "h2"
    },
    {
        "content": "This component generates text using OpenAI's language models.",
        "section": "OpenAI",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "OpenAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Qianfan",
        "section": "Qianfan",
        "type": "h2"
    },
    {
        "content": "This component generates text using Qianfan's language models.",
        "section": "Qianfan",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Qianfan",
        "type": "p"
    },
    {
        "content": "Perplexity",
        "section": "Perplexity",
        "type": "h2"
    },
    {
        "content": "This component generates text using Perplexity's language models.",
        "section": "Perplexity",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Perplexity",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "VertexAI",
        "section": "VertexAI",
        "type": "h2"
    },
    {
        "content": "This component generates text using Vertex AI LLMs.",
        "section": "VertexAI",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "VertexAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Prompts",
        "section": "Prompts",
        "type": "h1"
    },
    {
        "content": "A prompt serves as the input to a language model, comprising multiple components that can be parameterized using prompt templates.",
        "section": "Prompts",
        "type": "p"
    },
    {
        "content": "Prompt templates provide a systematic approach for generating prompts, allowing for reproducible customization through defined input variables.",
        "section": "Prompts",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "build_prompt",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Langchain Hub Prompt Template",
        "section": "Langchain Hub Prompt Template",
        "type": "h2"
    },
    {
        "content": "This component fetches prompts from the .",
        "section": "Langchain Hub Prompt Template",
        "type": "p"
    },
    {
        "content": "When a prompt is loaded, the component generates input fields for custom variables. For example, the default prompt \"efriis/my-first-prompt\" generates fields for profession and question.",
        "section": "Langchain Hub Prompt Template",
        "type": "p"
    },
    {
        "content": "profession",
        "section": "Langchain Hub Prompt Template",
        "type": "code"
    },
    {
        "content": "question",
        "section": "Langchain Hub Prompt Template",
        "type": "code"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "build_prompt",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "RAG",
        "section": "RAG",
        "type": "h1"
    },
    {
        "content": "RAG (Retrieval-Augmented Generation) components process a user query by retrieving relevant documents and generating a concise summary that addresses the user's question.",
        "section": "RAG",
        "type": "p"
    },
    {
        "content": "Vectara RAG",
        "section": "Vectara RAG",
        "type": "h2"
    },
    {
        "content": "This component leverages Vectara's Retrieval Augmented Generation (RAG) capabilities to search and summarize documents based on the provided input. For more information, see the .",
        "section": "Vectara RAG",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Vector Stores",
        "section": "Vector Stores",
        "type": "h1"
    },
    {
        "content": "Vector databases are used to store and search for vectors. They can be used to store embeddings, search for similar vectors, and perform other vector operations.",
        "section": "Vector Stores",
        "type": "p"
    },
    {
        "content": "Astra DB Vector Store",
        "section": "Astra DB Vector Store",
        "type": "h2"
    },
    {
        "content": "This component implements a Vector Store using Astra DB with search capabilities.",
        "section": "Astra DB Vector Store",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Astra DB Vector Store",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Cassandra",
        "section": "Cassandra",
        "type": "h2"
    },
    {
        "content": "This component creates a Cassandra Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Cassandra",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Cassandra Graph Vector Store",
        "section": "Cassandra Graph Vector Store",
        "type": "h2"
    },
    {
        "content": "This component implements a Cassandra Graph Vector Store with search capabilities.",
        "section": "Cassandra Graph Vector Store",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Chroma DB",
        "section": "Chroma DB",
        "type": "h2"
    },
    {
        "content": "This component creates a Chroma Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Chroma DB",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Clickhouse",
        "section": "Clickhouse",
        "type": "h2"
    },
    {
        "content": "This component implements a Clickhouse Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Clickhouse",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Couchbase",
        "section": "Couchbase",
        "type": "h2"
    },
    {
        "content": "This component creates a Couchbase Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Couchbase",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "FAISS",
        "section": "FAISS",
        "type": "h2"
    },
    {
        "content": "This component creates a FAISS Vector Store with search capabilities.\nFor more information, see the .",
        "section": "FAISS",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hyper-Converged Database (HCD) Vector Store",
        "section": "Hyper-Converged Database (HCD) Vector Store",
        "type": "h2"
    },
    {
        "content": "This component implements a Vector Store using HCD.",
        "section": "Hyper-Converged Database (HCD) Vector Store",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Milvus",
        "section": "Milvus",
        "type": "h2"
    },
    {
        "content": "This component creates a Milvus Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Milvus",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "MongoDB Atlas",
        "section": "MongoDB Atlas",
        "type": "h2"
    },
    {
        "content": "This component creates a MongoDB Atlas Vector Store with search capabilities.\nFor more information, see the .",
        "section": "MongoDB Atlas",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "PGVector",
        "section": "PGVector",
        "type": "h2"
    },
    {
        "content": "This component creates a PGVector Vector Store with search capabilities.\nFor more information, see the .",
        "section": "PGVector",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Pinecone",
        "section": "Pinecone",
        "type": "h2"
    },
    {
        "content": "This component creates a Pinecone Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Pinecone",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Qdrant",
        "section": "Qdrant",
        "type": "h2"
    },
    {
        "content": "This component creates a Qdrant Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Qdrant",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Redis",
        "section": "Redis",
        "type": "h2"
    },
    {
        "content": "This component creates a Redis Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Redis",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Supabase",
        "section": "Supabase",
        "type": "h2"
    },
    {
        "content": "This component creates a connection to a Supabase Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Supabase",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Upstash",
        "section": "Upstash",
        "type": "h2"
    },
    {
        "content": "This component creates an Upstash Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Upstash",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Vectara",
        "section": "Vectara",
        "type": "h2"
    },
    {
        "content": "This component creates a Vectara Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Vectara",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Vectara Search",
        "section": "Vectara Search",
        "type": "h2"
    },
    {
        "content": "This component searches a Vectara Vector Store for documents based on the provided input.\nFor more information, see the .",
        "section": "Vectara Search",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Weaviate",
        "section": "Weaviate",
        "type": "h2"
    },
    {
        "content": "This component facilitates a Weaviate Vector Store setup, optimizing text and document indexing and retrieval.\nFor more information, see the .",
        "section": "Weaviate",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Note: Ensure Weaviate instance is running and accessible. Verify API key, index name, text key, and attributes are set correctly.",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Weaviate Search",
        "section": "Weaviate Search",
        "type": "h2"
    },
    {
        "content": "This component searches a Weaviate Vector Store for documents similar to the input.\nFor more information, see the .",
        "section": "Weaviate Search",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Intro to Components",
        "section": "Intro to Components",
        "type": "h1"
    },
    {
        "content": "Component",
        "section": "Component",
        "type": "h2"
    },
    {
        "content": "A\u00a0component\u00a0is a single building block within a flow. It consists of inputs, outputs, and parameters that define their functionality. These elements provide a convenient and  straightforward way to compose LLM-based applications. Learn more about components and how they work below.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "During the flow creation process, you will notice handles (colored circles) attached to one or both sides of a component. These handles use distinct colors to indicate the types of inputs and outputs that can be interconnected. Hover over a handle to see connection details.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "On the top right corner of the component, you'll find the a play button to run a component. Once it runs, a status icon appears and you can hover over that to visualize success or error messages. Start interacting with your AI by clicking the\u00a0Playground\u00a0at the bottom right of the workspace.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "Component Menu",
        "section": "Component Menu",
        "type": "h3"
    },
    {
        "content": "Each component is unique, but they all have a menu bar at the top that looks something like this.",
        "section": "Component Menu",
        "type": "p"
    },
    {
        "content": "It consists of options such as:",
        "section": "Component Menu",
        "type": "p"
    },
    {
        "content": "Code\u00a0\u2014 displays the component's Python code. You can modify the code and save it.\nAdvanced\u00a0\u2014 See and adjust all parameters of a component.\nFreeze\u00a0\u2014 After a component runs, lock its previous output state to prevent it from re-running.",
        "section": "Component Menu",
        "type": "ul"
    },
    {
        "content": "Code\u00a0\u2014 displays the component's Python code. You can modify the code and save it.",
        "section": "Component Menu",
        "type": "li"
    },
    {
        "content": "Advanced\u00a0\u2014 See and adjust all parameters of a component.",
        "section": "Component Menu",
        "type": "li"
    },
    {
        "content": "Freeze\u00a0\u2014 After a component runs, lock its previous output state to prevent it from re-running.",
        "section": "Component Menu",
        "type": "li"
    },
    {
        "content": "Click\u00a0All\u00a0(the \"...\" button) to see all options.",
        "section": "Component Menu",
        "type": "p"
    },
    {
        "content": "Output Preview",
        "section": "Output Preview",
        "type": "h3"
    },
    {
        "content": "Langflow includes an output visualizer for components that opens a pop-up screen. This allows you to easily inspect and monitor transmissions between components, providing instant feedback on your workflows.",
        "section": "Output Preview",
        "type": "p"
    },
    {
        "content": "Advanced Settings",
        "section": "Advanced Settings",
        "type": "h3"
    },
    {
        "content": "Langflow components can be edited by clicking the\u00a0Advanced Settings\u00a0button.",
        "section": "Advanced Settings",
        "type": "p"
    },
    {
        "content": "Hide parameters with the\u00a0Show\u00a0button to reduce complexity and keep the workspace clean and intuitive for experimentation.",
        "section": "Advanced Settings",
        "type": "p"
    },
    {
        "content": "You can also double-click a component's name and description to modify those. Component descriptions accept markdown syntax.",
        "section": "Advanced Settings",
        "type": "p"
    },
    {
        "content": "Group Components",
        "section": "Group Components",
        "type": "h3"
    },
    {
        "content": "Multiple components can be grouped into a single component for reuse. This is useful when combining large flows into single components (like RAG with a vector database, for example) and saving space.",
        "section": "Group Components",
        "type": "p"
    },
    {
        "content": "Hold\u00a0Shift\u00a0and drag to select components.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "Select\u00a0Group.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "The components merge into a single component.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "Double-click the name and description to change them.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "Save your grouped component to in the sidebar for later use!",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "[group video here]",
        "section": "Group Components",
        "type": "p"
    },
    {
        "content": "Component Version",
        "section": "Component Version",
        "type": "h3"
    },
    {
        "content": "A component's state is stored in a database, while sidebar components are like starter templates. As soon as you drag a component from the sidebar to the workspace, the two components are no longer in parity.",
        "section": "Component Version",
        "type": "p"
    },
    {
        "content": "The component will keep the version number it was initialized to the workspace with. Click the\u00a0Update Component\u00a0icon (exclamation mark) to bring the component up to the\u00a0latest\u00a0version. This will change the code of the component in place so you can validate that the component was updated by checking its Python code before and after updating it.",
        "section": "Component Version",
        "type": "p"
    },
    {
        "content": "latest",
        "section": "Component Version",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Component Version",
        "type": "p"
    },
    {
        "content": "API Keys",
        "section": "API Keys",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "API Keys",
        "type": "p"
    },
    {
        "content": "Langflow provides an API key functionality that allows users to access their individual components and flows without traditional login authentication. The API key is a user-specific token that can be included in the request header or query parameter to authenticate API calls. This documentation outlines how to generate, use, and manage API keys in Langflow.",
        "section": "API Keys",
        "type": "p"
    },
    {
        "content": "The default user and password are set using the LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD environment variables. The default values are langflow and langflow, respectively.",
        "section": "API Keys",
        "type": "p"
    },
    {
        "content": "Generate an API key",
        "section": "Generate an API key",
        "type": "h2"
    },
    {
        "content": "Generate a user-specific token to use with Langflow.",
        "section": "Generate an API key",
        "type": "p"
    },
    {
        "content": "Generate an API key with the Langflow UI",
        "section": "Generate an API key with the Langflow UI",
        "type": "h3"
    },
    {
        "content": "Click on the \"API Key\" icon.",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Click on the \"API Key\" icon.",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Click on \"Create new secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Click on \"Create new secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Give it an optional name.",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Give it an optional name.",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Click on \"Create secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Click on \"Create secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Copy the API key and store it in a secure location.",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Copy the API key and store it in a secure location.",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Generate an API key with the Langflow CLI",
        "section": "Generate an API key with the Langflow CLI",
        "type": "h3"
    },
    {
        "content": "_13langflow api-key_13# or_13python -m langflow api-key_13\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e_13\u2502 API Key Created Successfully:                                       \u2502_13\u2502                                                                     \u2502_13\u2502 sk-O0elzoWID1izAH8RUKrnnvyyMwIzHi2Wk-uXWoNJ2Ro                      \u2502_13\u2502                                                                     \u2502_13\u2502 This is the only time the API key will be displayed.                \u2502_13\u2502 Make sure to store it in a secure location.                         \u2502_13\u2502                                                                     \u2502_13\u2502 The API key has been copied to your clipboard. Cmd + V to paste it. \u2502_13\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "section": "Generate an API key with the Langflow CLI",
        "type": "code"
    },
    {
        "content": "Use the Langflow API key",
        "section": "Use the Langflow API key",
        "type": "h2"
    },
    {
        "content": "Include your API key in API requests to authenticate requests to Langflow.",
        "section": "Use the Langflow API key",
        "type": "p"
    },
    {
        "content": "Use the x-api-key header",
        "section": "Use the x-api-key header",
        "type": "h3"
    },
    {
        "content": "x-api-key",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "Include the x-api-key in the HTTP header when making API requests:",
        "section": "Use the x-api-key header",
        "type": "p"
    },
    {
        "content": "x-api-key",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "_10curl -X POST \\\\_10  <http://localhost:3000/api/v1/run/><your_flow_id> \\\\_10  -H 'Content-Type: application/json'\\\\_10  -H 'x-api-key: <your api key>'\\\\_10  -d '{\"inputs\": {\"text\":\"\"}, \"tweaks\": {}}'",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "With Python using requests:",
        "section": "Use the x-api-key header",
        "type": "p"
    },
    {
        "content": "requests",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "_38import requests_38from typing import Optional_38_38BASE_API_URL = \"<http://localhost:3001/api/v1/process>\"_38FLOW_ID = \"4441b773-0724-434e-9cee-19d995d8f2df\"_38# You can tweak the flow by adding a tweaks dictionary_38# e.g {\"OpenAI-XXXXX\": {\"model_name\": \"gpt-4\"}}_38TWEAKS = {}_38_38def run_flow(inputs: dict,_38            flow_id: str,_38            tweaks: Optional[dict] = None,_38            apiKey: Optional[str] = None) -> dict:_38    \"\"\"_38    Run a flow with a given message and optional tweaks._38_38    :param message: The message to send to the flow_38    :param flow_id: The ID of the flow to run_38    :param tweaks: Optional tweaks to customize the flow_38    :return: The JSON response from the flow_38    \"\"\"_38    api_url = f\"{BASE_API_URL}/{flow_id}\"_38_38    payload = {\"inputs\": inputs}_38    headers = {}_38_38    if tweaks:_38        payload[\"tweaks\"] = tweaks_38    if apiKey:_38        headers = {\"x-api-key\": apiKey}_38_38    response = requests.post(api_url, json=payload, headers=headers)_38    return response.json()_38_38# Setup any tweaks you want to apply to the flow_38inputs = {\"text\":\"\"}_38api_key = \"<your api key>\"_38print(run_flow(inputs, flow_id=FLOW_ID, tweaks=TWEAKS, apiKey=api_key))",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "Use the query parameter",
        "section": "Use the query parameter",
        "type": "h3"
    },
    {
        "content": "Include the API key as a query parameter in the URL:",
        "section": "Use the query parameter",
        "type": "p"
    },
    {
        "content": "_10curl -X POST \\\\_10  <http://localhost:3000/api/v1/process/><your_flow_id>?x-api-key=<your_api_key> \\\\_10  -H 'Content-Type: application/json'\\\\_10  -d '{\"inputs\": {\"text\":\"\"}, \"tweaks\": {}}'",
        "section": "Use the query parameter",
        "type": "code"
    },
    {
        "content": "With Python using requests:",
        "section": "Use the query parameter",
        "type": "p"
    },
    {
        "content": "requests",
        "section": "Use the query parameter",
        "type": "code"
    },
    {
        "content": "_37import requests_37_37BASE_API_URL = \"<http://localhost:3001/api/v1/process>\"_37FLOW_ID = \"4441b773-0724-434e-9cee-19d995d8f2df\"_37# You can tweak the flow by adding a tweaks dictionary_37# e.g {\"OpenAI-XXXXX\": {\"model_name\": \"gpt-4\"}}_37TWEAKS = {}_37_37def run_flow(inputs: dict,_37            flow_id: str,_37            tweaks: Optional[dict] = None,_37            apiKey: Optional[str] = None) -> dict:_37    \"\"\"_37    Run a flow with a given message and optional tweaks._37_37    :param message: The message to send to the flow_37    :param flow_id: The ID of the flow to run_37    :param tweaks: Optional tweaks to customize the flow_37    :return: The JSON response from the flow_37    \"\"\"_37    api_url = f\"{BASE_API_URL}/{flow_id}\"_37_37    payload = {\"inputs\": inputs}_37    headers = {}_37_37    if tweaks:_37        payload[\"tweaks\"] = tweaks_37    if apiKey:_37        api_url += f\"?x-api-key={apiKey}\"_37_37    response = requests.post(api_url, json=payload, headers=headers)_37    return response.json()_37_37# Setup any tweaks you want to apply to the flow_37inputs = {\"text\":\"\"}_37api_key = \"<your api key>\"_37print(run_flow(inputs, flow_id=FLOW_ID, tweaks=TWEAKS, apiKey=api_key))",
        "section": "Use the query parameter",
        "type": "code"
    },
    {
        "content": "Security Considerations",
        "section": "Security Considerations",
        "type": "h2"
    },
    {
        "content": "Visibility: For security reasons, the API key cannot be retrieved again through the UI.\nScope: The key allows access only to the flows and components of the specific user to whom it was issued.",
        "section": "Security Considerations",
        "type": "ul"
    },
    {
        "content": "Visibility: For security reasons, the API key cannot be retrieved again through the UI.",
        "section": "Security Considerations",
        "type": "li"
    },
    {
        "content": "Scope: The key allows access only to the flows and components of the specific user to whom it was issued.",
        "section": "Security Considerations",
        "type": "li"
    },
    {
        "content": "Custom API endpoint",
        "section": "Custom API endpoint",
        "type": "h2"
    },
    {
        "content": "Under Project Settings > Endpoint Name, you can pick a custom name for the endpoint used to call your flow from the API.",
        "section": "Custom API endpoint",
        "type": "p"
    },
    {
        "content": "Revoke an API Key",
        "section": "Revoke an API Key",
        "type": "h2"
    },
    {
        "content": "To revoke an API key, delete it from the UI. This action immediately invalidates the key and prevents it from being used again.",
        "section": "Revoke an API Key",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Revoke an API Key",
        "type": "p"
    },
    {
        "content": "Authentication",
        "section": "Authentication",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Authentication",
        "type": "p"
    },
    {
        "content": "Sign Up and Sign In",
        "section": "Sign Up and Sign In",
        "type": "h2"
    },
    {
        "content": "The login functionality in Langflow serves to authenticate users and protect sensitive routes in the application. Starting from version 0.5, Langflow introduces an enhanced login mechanism that is governed by a few environment variables. This allows new secure features.",
        "section": "Sign Up and Sign In",
        "type": "p"
    },
    {
        "content": "Environment Variables",
        "section": "Environment Variables",
        "type": "h2"
    },
    {
        "content": "The following environment variables are crucial in configuring the login settings:",
        "section": "Environment Variables",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN: Determines whether Langflow should automatically log users in. Default is True.\nLANGFLOW_SUPERUSER: The username of the superuser.\nLANGFLOW_SUPERUSER_PASSWORD: The password for the superuser.\nLANGFLOW_SECRET_KEY: A key used for encrypting the superuser's password.\nLANGFLOW_NEW_USER_IS_ACTIVE: Determines whether new users are automatically activated. Default is False.",
        "section": "Environment Variables",
        "type": "ul"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN: Determines whether Langflow should automatically log users in. Default is True.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER: The username of the superuser.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_SUPERUSER",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER_PASSWORD: The password for the superuser.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_SUPERUSER_PASSWORD",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SECRET_KEY: A key used for encrypting the superuser's password.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_SECRET_KEY",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE: Determines whether new users are automatically activated. Default is False.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "All of these variables can be passed to the CLI command langflow run through the --env-file option. For example:",
        "section": "Environment Variables",
        "type": "p"
    },
    {
        "content": "langflow run",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "--env-file",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "_10langflow run --env-file .env",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "It is critical not to expose these environment variables in your code repository. Always set them securely in your deployment environment, for example, using Docker secrets, Kubernetes ConfigMaps/Secrets, or dedicated secure environment configuration systems like AWS Secrets Manager.",
        "section": "Environment Variables",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "By default, this variable is set to True. When enabled (True), Langflow operates as it did in versions prior to 0.5\u2014automatic login without requiring explicit user authentication.",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "p"
    },
    {
        "content": "True",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "True",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "To disable automatic login and enforce user authentication:",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "p"
    },
    {
        "content": "_10export LANGFLOW_AUTO_LOGIN=False",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_SUPERUSER",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER_PASSWORD",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "These environment variables are only relevant when LANGFLOW_AUTO_LOGIN is set to False. They specify the username and password for the superuser, which is essential for administrative tasks.",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "False",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "To create a superuser manually:",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "p"
    },
    {
        "content": "_10export LANGFLOW_SUPERUSER=admin_10export LANGFLOW_SUPERUSER_PASSWORD=securepassword",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "You can also use the CLI command langflow superuser to set up a superuser interactively.",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "p"
    },
    {
        "content": "langflow superuser",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SECRET_KEY",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_SECRET_KEY",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "code"
    },
    {
        "content": "This environment variable holds a secret key used for encrypting the superuser's password. Make sure to set this to a secure, randomly generated string.",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "p"
    },
    {
        "content": "_10export LANGFLOW_SECRET_KEY=randomly_generated_secure_key",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "code"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "code"
    },
    {
        "content": "By default, this variable is set to False. When enabled (True), new users are automatically activated and can log in without requiring explicit activation by the superuser.",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "p"
    },
    {
        "content": "False",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "code"
    },
    {
        "content": "True",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "code"
    },
    {
        "content": "Manage superusers with the CLI",
        "section": "Manage superusers with the CLI",
        "type": "h2"
    },
    {
        "content": "Langflow provides a command-line utility for managing superusers:",
        "section": "Manage superusers with the CLI",
        "type": "p"
    },
    {
        "content": "_10langflow superuser",
        "section": "Manage superusers with the CLI",
        "type": "code"
    },
    {
        "content": "This command prompts you to enter the username and password for the superuser, unless they are already set using environment variables.",
        "section": "Manage superusers with the CLI",
        "type": "p"
    },
    {
        "content": "Sign in",
        "section": "Sign in",
        "type": "h2"
    },
    {
        "content": "With LANGFLOW_AUTO_LOGIN set to False, Langflow requires users to sign up before they can log in. The sign-up page is the default landing page when a user visits Langflow for the first time.",
        "section": "Sign in",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "Sign in",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Sign in",
        "type": "code"
    },
    {
        "content": "Profile settings",
        "section": "Profile settings",
        "type": "h2"
    },
    {
        "content": "Once signed in, you can change your profile settings by clicking on the profile icon in the top right corner of the Langflow dashboard. This opens a dropdown menu with the following options:",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Admin Page: Opens the admin page, which is only accessible to the superuser.\n\n\nProfile Settings: Opens the profile settings page.\n\n\nSign Out: Logs the user out.",
        "section": "Profile settings",
        "type": "ul"
    },
    {
        "content": "Admin Page: Opens the admin page, which is only accessible to the superuser.",
        "section": "Profile settings",
        "type": "li"
    },
    {
        "content": "Admin Page: Opens the admin page, which is only accessible to the superuser.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Profile Settings: Opens the profile settings page.",
        "section": "Profile settings",
        "type": "li"
    },
    {
        "content": "Profile Settings: Opens the profile settings page.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Sign Out: Logs the user out.",
        "section": "Profile settings",
        "type": "li"
    },
    {
        "content": "Sign Out: Logs the user out.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Select Profile Settings to change your password and your profile picture.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Select Admin Page to manage users and groups as the superuser.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Auto-saving",
        "section": "Auto-saving",
        "type": "h1"
    },
    {
        "content": "Langflow currently supports both manual and auto-saving functionality.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "Auto-saving",
        "section": "Auto-saving",
        "type": "h2"
    },
    {
        "content": "When Langflow is in Auto-saving mode, all changes are saved automatically. Auto-save progress is indicated in the left side of the top bar: when a flow is being saved, a Loading icon indicates that the flow is being saved in the database.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "If you try to exit the flow page before auto-save completes, a dialog will appear to confirm you want to exit before the flow has saved.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "When the flow has successfully saved, you can click the 'Exit' button.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "Manual Saving",
        "section": "Manual Saving",
        "type": "h2"
    },
    {
        "content": "When auto-saving is disabled, you need to manually save your flow when making changes. You can still run the flow without saving, for testing purposes.",
        "section": "Manual Saving",
        "type": "p"
    },
    {
        "content": "If you make any changes and Langflow detects that the saved flow is different from the current flow, a Save button will be enabled and the last time saved will appear at the left side of the topbar. To save the flow, click the Save button, or hit Ctrl+S or Command+S.",
        "section": "Manual Saving",
        "type": "p"
    },
    {
        "content": "If you try to exit after making changes and not saving, a confirmation dialog will appear. You can choose to exit anyway or save and exit.",
        "section": "Manual Saving",
        "type": "p"
    },
    {
        "content": "Disable Auto Saving",
        "section": "Disable Auto Saving",
        "type": "h2"
    },
    {
        "content": "In Langflow, all changes made in the flows are saved automatically. However, you may prefer to disable this functionality, if you want a quick way to prototype and test changes before they are actually saved to the database.",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": "If you wish to disable this functionality, you can run Langflow with an environment variable to tell Langflow to use manual saving.",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": "_10langflow --no-auto-saving_10# or_10python -m langflow --no-auto-saving",
        "section": "Disable Auto Saving",
        "type": "code"
    },
    {
        "content": "If you installed the local version of Langflow, you can set an environment variable and load it automatically by inserting this line into the .env file inside the directory.",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": ".env",
        "section": "Disable Auto Saving",
        "type": "code"
    },
    {
        "content": "_10LANGFLOW_AUTO_SAVING=false",
        "section": "Disable Auto Saving",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": "Backend-Only",
        "section": "Backend-Only",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "You can run Langflow in --backend-only mode to expose your Langflow app as an API, without running the frontend UI.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "--backend-only",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "Start langflow in backend-only mode with python3 -m langflow run --backend-only.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "python3 -m langflow run --backend-only",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "The terminal prints Welcome to \u26d3 Langflow, and a blank window opens at http://127.0.0.1:7864/all.\nLangflow will now serve requests to its API without the frontend running.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "Welcome to \u26d3 Langflow",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "http://127.0.0.1:7864/all",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Download your flow's curl call",
        "section": "Download your flow's curl call",
        "type": "h2"
    },
    {
        "content": "Click API.",
        "section": "Download your flow's curl call",
        "type": "li"
    },
    {
        "content": "Click curl > Copy code and save the code to your local machine.\nIt will look something like this:",
        "section": "Download your flow's curl call",
        "type": "li"
    },
    {
        "content": "_12curl -X POST \\\\_12    \"<http://127.0.0.1:7864/api/v1/run/ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef?stream=false>\" \\\\_12    -H 'Content-Type: application/json'\\\\_12    -d '{\"input_value\": \"message\",_12    \"output_type\": \"chat\",_12    \"input_type\": \"chat\",_12    \"tweaks\": {_12  \"Prompt-kvo86\": {},_12  \"OpenAIModel-MilkD\": {},_12  \"ChatOutput-ktwdw\": {},_12  \"ChatInput-xXC4F\": {}_12}}'",
        "section": "Download your flow's curl call",
        "type": "code"
    },
    {
        "content": "Note the flow ID of ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef. You can find this ID in the UI as well to ensure you're querying the right flow.",
        "section": "Download your flow's curl call",
        "type": "p"
    },
    {
        "content": "ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef",
        "section": "Download your flow's curl call",
        "type": "code"
    },
    {
        "content": "Start Langflow in backend-only mode",
        "section": "Start Langflow in backend-only mode",
        "type": "h2"
    },
    {
        "content": "Stop Langflow with Ctrl+C.",
        "section": "Start Langflow in backend-only mode",
        "type": "li"
    },
    {
        "content": "Start langflow in backend-only mode with python3 -m langflow run --backend-only.\nThe terminal prints Welcome to \u26d3 Langflow, and a blank window opens at http://127.0.0.1:7864/all.\nLangflow will now serve requests to its API.",
        "section": "Start Langflow in backend-only mode",
        "type": "li"
    },
    {
        "content": "python3 -m langflow run --backend-only",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "Welcome to \u26d3 Langflow",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "http://127.0.0.1:7864/all",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "Run the curl code you copied from the UI.\nYou should get a result like this:",
        "section": "Start Langflow in backend-only mode",
        "type": "li"
    },
    {
        "content": "_10{\"session_id\":\"ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef:bf81d898868ac87e1b4edbd96c131c5dee801ea2971122cc91352d144a45b880\",\"outputs\":[{\"inputs\":{\"input_value\":\"hi, are you there?\"},\"outputs\":[{\"results\":{\"result\":\"Arrr, ahoy matey! Aye, I be here. What be ye needin', me hearty?\"},\"artifacts\":{\"message\":\"Arrr, ahoy matey! Aye, I be here. What be ye needin', me hearty?\",\"sender\":\"Machine\",\"sender_name\":\"AI\"},\"messages\":[{\"message\":\"Arrr, ahoy matey! Aye, I be here. What be ye needin', me hearty?\",\"sender\":\"Machine\",\"sender_name\":\"AI\",\"component_id\":\"ChatOutput-ktwdw\"}],\"component_display_name\":\"Chat Output\",\"component_id\":\"ChatOutput-ktwdw\",\"used_frozen_result\":false}]}]}%",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "Again, note that the flow ID matches.\nLangflow is receiving your POST request, running the flow, and returning the result, all without running the frontend. Cool!",
        "section": "Start Langflow in backend-only mode",
        "type": "p"
    },
    {
        "content": "Download your flow's Python API call",
        "section": "Download your flow's Python API call",
        "type": "h2"
    },
    {
        "content": "Instead of using curl, you can download your flow as a Python API call instead.",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "Click API.",
        "section": "Download your flow's Python API call",
        "type": "li"
    },
    {
        "content": "Click Python API > Copy code and save the code to your local machine.\nThe code will look something like this:",
        "section": "Download your flow's Python API call",
        "type": "li"
    },
    {
        "content": "_40import requests_40from typing import Optional_40_40BASE_API_URL = \"<http://127.0.0.1:7864/api/v1/run>\"_40FLOW_ID = \"ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef\"_40# You can tweak the flow by adding a tweaks dictionary_40# e.g {\"OpenAI-XXXXX\": {\"model_name\": \"gpt-4\"}}_40_40def run_flow(message: str,_40  flow_id: str,_40  output_type: str = \"chat\",_40  input_type: str = \"chat\",_40  tweaks: Optional[dict] = None,_40  api_key: Optional[str] = None) -> dict:_40    \"\"\"Run a flow with a given message and optional tweaks._40_40\t:param message: The message to send to the flow_40\t:param flow_id: The ID of the flow to run_40\t:param tweaks: Optional tweaks to customize the flow_40\t:return: The JSON response from the flow_40\t\"\"\"_40\tapi_url = f\"{BASE_API_URL}/{flow_id}\"_40\tpayload = {_40    \"input_value\": message,_40    \"output_type\": output_type,_40    \"input_type\": input_type,_40\t}_40\theaders = None_40\tif tweaks:_40\t    payload[\"tweaks\"] = tweaks_40\tif api_key:_40\t    headers = {\"x-api-key\": api_key}_40\tresponse = requests.post(api_url, json=payload, headers=headers)_40\treturn response.json()_40 _40\t# Setup any tweaks you want to apply to the flow_40 _40\tmessage = \"message\"_40 _40\tprint(run_flow(message=message, flow_id=FLOW_ID))",
        "section": "Download your flow's Python API call",
        "type": "code"
    },
    {
        "content": "Run your Python app:",
        "section": "Download your flow's Python API call",
        "type": "li"
    },
    {
        "content": "_10python3 app.py",
        "section": "Download your flow's Python API call",
        "type": "code"
    },
    {
        "content": "The result is similar to the curl call:",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "_10{'session_id': 'ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef:bf81d898868ac87e1b4edbd96c131c5dee801ea2971122cc91352d144a45b880', 'outputs': [{'inputs': {'input_value': 'message'}, 'outputs': [{'results': {'result': \"Arrr matey! What be yer message for this ol' pirate? Speak up or walk the plank!\"}, 'artifacts': {'message': \"Arrr matey! What be yer message for this ol' pirate? Speak up or walk the plank!\", 'sender': 'Machine', 'sender_name': 'AI'}, 'messages': [{'message': \"Arrr matey! What be yer message for this ol' pirate? Speak up or walk the plank!\", 'sender': 'Machine', 'sender_name': 'AI', 'component_id': 'ChatOutput-ktwdw'}], 'component_display_name': 'Chat Output', 'component_id': 'ChatOutput-ktwdw', 'used_frozen_result': False}]}]}",
        "section": "Download your flow's Python API call",
        "type": "code"
    },
    {
        "content": "Your Python app POSTs to your Langflow server, and the server runs the flow and returns the result.",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "See  for more ways to interact with your headless Langflow server.",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "Command Line Interface (CLI)",
        "section": "Command Line Interface (CLI)",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Command Line Interface (CLI)",
        "type": "p"
    },
    {
        "content": "Langflow's Command Line Interface (CLI) is a powerful tool that allows you to interact with the Langflow server from the command line. The CLI provides a wide range of commands to help you shape Langflow to your needs.",
        "section": "Command Line Interface (CLI)",
        "type": "p"
    },
    {
        "content": "The available commands are below. Navigate to their individual sections of this page to see the parameters.",
        "section": "Command Line Interface (CLI)",
        "type": "p"
    },
    {
        "content": "Overview",
        "section": "Overview",
        "type": "h2"
    },
    {
        "content": "Running the CLI without any arguments displays a list of available options and commands.",
        "section": "Overview",
        "type": "p"
    },
    {
        "content": "_10langflow_10# or_10langflow --help_10# or_10python -m langflow",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "api-key",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "copy-db",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "which langflow",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "migration",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "run",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "superuser",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--install-completion",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--show-completion",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "langflow api-key",
        "section": "langflow api-key",
        "type": "h2"
    },
    {
        "content": "Run the api-key command to create an API key for the default superuser if LANGFLOW_AUTO_LOGIN is set to True.",
        "section": "langflow api-key",
        "type": "p"
    },
    {
        "content": "api-key",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "True",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "_13langflow api-key_13# or_13python -m langflow api-key_13\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e_13\u2502 API Key Created Successfully:                                       \u2502_13\u2502                                                                     \u2502_13\u2502 sk-O0elzoWID1izAH8RUKrnnvyyMwIzHi2Wk-uXWoNJ2Ro                      \u2502_13\u2502                                                                     \u2502_13\u2502 This is the only time the API key will be displayed.                \u2502_13\u2502 Make sure to store it in a secure location.                         \u2502_13\u2502                                                                     \u2502_13\u2502 The API key has been copied to your clipboard. Cmd + V to paste it. \u2502_13\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "langflow copy-db",
        "section": "langflow copy-db",
        "type": "h2"
    },
    {
        "content": "Run the copy-db command to copy the cached langflow.db and langflow-pre.db database files to the current directory.",
        "section": "langflow copy-db",
        "type": "p"
    },
    {
        "content": "copy-db",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "langflow.db",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "langflow-pre.db",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "If the files exist in the cache directory, they will be copied to the same directory as __main__.py, which can be found with which langflow.",
        "section": "langflow copy-db",
        "type": "p"
    },
    {
        "content": "__main__.py",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "which langflow",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "None.",
        "section": "Options",
        "type": "p"
    },
    {
        "content": "langflow migration",
        "section": "langflow migration",
        "type": "h2"
    },
    {
        "content": "Run or test migrations with the Alembic database tool.",
        "section": "langflow migration",
        "type": "p"
    },
    {
        "content": "_10langflow migration_10# or_10python -m langflow migration",
        "section": "langflow migration",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--test, --no-test",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--fix, --no-fix",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "langflow run",
        "section": "langflow run",
        "type": "h2"
    },
    {
        "content": "Run Langflow.",
        "section": "langflow run",
        "type": "p"
    },
    {
        "content": "_10langflow run_10# or_10python -m langflow run",
        "section": "langflow run",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--host",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_HOST",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "127.0.0.1",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--workers",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_WORKERS",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "1",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--timeout",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "60",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--port",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_PORT",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "7860",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--env-file",
        "section": "Options",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--log-level",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_LOG_LEVEL",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "critical",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--components-path",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_COMPONENTS_PATH",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "langflow/components",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--log-file",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_LOG_FILE",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "logs/langflow.log",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--cache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "InMemoryCache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "SQLiteCache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_LANGCHAIN_CACHE",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "SQLiteCache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--dev",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-dev",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "no-dev",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--path",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_FRONTEND_PATH",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--open-browser",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-open-browser",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_OPEN_BROWSER",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "open-browser",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--remove-api-keys",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-remove-api-keys",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_REMOVE_API_KEYS",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "no-remove-api-keys",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--install-completion [bash|zsh|fish|powershell|pwsh]",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--show-completion [bash|zsh|fish|powershell|pwsh]",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--backend-only",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_BACKEND_ONLY",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--store",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-store",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_STORE",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--auto-saving",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-auto-saving",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_AUTO_SAVING",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "CLI environment variables",
        "section": "CLI environment variables",
        "type": "h3"
    },
    {
        "content": "You can configure many of the CLI options using environment variables. These can be exported in your operating system or added to a .env file and loaded using the --env-file option.",
        "section": "CLI environment variables",
        "type": "p"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": "--env-file",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": "A sample .env file named .env.example is included with the project. Copy this file to a new file named .env and replace the example values with your actual settings. If you're setting values in both your OS and the .env file, the .env settings will take precedence.",
        "section": "CLI environment variables",
        "type": "p"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env.example",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": "langflow superuser",
        "section": "langflow superuser",
        "type": "h2"
    },
    {
        "content": "Create a superuser for Langflow.",
        "section": "langflow superuser",
        "type": "p"
    },
    {
        "content": "_10langflow superuser_10# or_10python -m langflow superuser",
        "section": "langflow superuser",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--username",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--password",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--log-level",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Options",
        "type": "p"
    },
    {
        "content": "Community",
        "section": "Community",
        "type": "h1"
    },
    {
        "content": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "h2"
    },
    {
        "content": "Join us to ask questions and showcase your projects.",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "p"
    },
    {
        "content": "Let's bring together the building blocks of AI integration!",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "p"
    },
    {
        "content": "Langflow\u00a0\u00a0server.",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "p"
    },
    {
        "content": "\ud83d\udc26 Stay tuned for\u00a0Langflow\u00a0on Twitter",
        "section": "\ud83d\udc26 Stay tuned for\u00a0Langflow\u00a0on Twitter",
        "type": "h2"
    },
    {
        "content": "Follow\u00a0\u00a0on\u00a0Twitter\u00a0to get the latest news about\u00a0Langflow.",
        "section": "\ud83d\udc26 Stay tuned for\u00a0Langflow\u00a0on Twitter",
        "type": "p"
    },
    {
        "content": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "section": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "type": "h2"
    },
    {
        "content": "You can \"star\"\u00a0Langflow\u00a0in\u00a0.",
        "section": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "type": "p"
    },
    {
        "content": "By adding a star, other users will be able to find it more easily and see that it has been already useful for others.",
        "section": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "type": "p"
    },
    {
        "content": "\ud83d\udc40 Watch the GitHub repository for releases",
        "section": "\ud83d\udc40 Watch the GitHub repository for releases",
        "type": "h2"
    },
    {
        "content": "You can \"watch\"\u00a0Langflow\u00a0in\u00a0. If you select \"Watching\" instead of \"Releases only\" you will receive notifications when someone creates a new issue or question. You can also specify that you only want to be notified about new issues, discussions, PRs, etc. so you can try and help them solve those questions.",
        "section": "\ud83d\udc40 Watch the GitHub repository for releases",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\ud83d\udc40 Watch the GitHub repository for releases",
        "type": "p"
    },
    {
        "content": "GitHub Issues",
        "section": "GitHub Issues",
        "type": "h1"
    },
    {
        "content": "Our\u00a0\u00a0page is kept up to date with bugs, improvements, and feature requests. There is a taxonomy of labels to help with sorting and discovery of issues of interest.",
        "section": "GitHub Issues",
        "type": "p"
    },
    {
        "content": "If you're looking for help with your code, consider posting a question on the\u00a0. Please understand that we won't be able to provide individual support via email. We also believe that help is much more valuable if it's\u00a0shared publicly, so that more people can benefit from it.",
        "section": "GitHub Issues",
        "type": "p"
    },
    {
        "content": "Describing your issue:\u00a0Try to provide as many details as possible. What exactly goes wrong?\u00a0How\u00a0is it failing? Is there an error? \"XY doesn't work\" usually isn't that helpful for tracking down problems. Always remember to include the code you ran and if possible, extract only the relevant parts and don't just dump your entire script. This will make it easier for us to reproduce the error.\nSharing long blocks of code or logs:\u00a0If you need to include long code, logs or tracebacks, you can wrap them in\u00a0<details>\u00a0and\u00a0</details>. This\u00a0\u00a0so it only becomes visible on click, making the issue easier to read and follow.",
        "section": "GitHub Issues",
        "type": "ul"
    },
    {
        "content": "Describing your issue:\u00a0Try to provide as many details as possible. What exactly goes wrong?\u00a0How\u00a0is it failing? Is there an error? \"XY doesn't work\" usually isn't that helpful for tracking down problems. Always remember to include the code you ran and if possible, extract only the relevant parts and don't just dump your entire script. This will make it easier for us to reproduce the error.",
        "section": "GitHub Issues",
        "type": "li"
    },
    {
        "content": "Sharing long blocks of code or logs:\u00a0If you need to include long code, logs or tracebacks, you can wrap them in\u00a0<details>\u00a0and\u00a0</details>. This\u00a0\u00a0so it only becomes visible on click, making the issue easier to read and follow.",
        "section": "GitHub Issues",
        "type": "li"
    },
    {
        "content": "<details>",
        "section": "GitHub Issues",
        "type": "code"
    },
    {
        "content": "</details>",
        "section": "GitHub Issues",
        "type": "code"
    },
    {
        "content": "Issue labels",
        "section": "Issue labels",
        "type": "h2"
    },
    {
        "content": "for an overview of the system we use to tag our issues and pull requests.",
        "section": "Issue labels",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Issue labels",
        "type": "p"
    },
    {
        "content": "How to contribute?",
        "section": "How to contribute?",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "\ud83d\udc4b Hello there!",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "We welcome contributions from developers of all levels to our open-source project on\u00a0. If you'd like to contribute, please check our contributing guidelines and help make Langflow more accessible.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "As an open-source project in a rapidly developing field, we are extremely open to contributions, whether in the form of a new feature, improved infra, or better documentation.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "To contribute to this project, please follow a\u00a0\u00a0workflow. Please do not try to push directly to this repo unless you are a maintainer.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "Local Development",
        "section": "Local Development",
        "type": "h2"
    },
    {
        "content": "You can develop Langflow using docker compose, or locally.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "We provide a\u00a0.vscode/launch.json\u00a0file for debugging the backend in VSCode, which is a lot faster than using docker compose.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": ".vscode/launch.json",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "Setting up hooks:",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make init",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make init",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "This will install the pre-commit hooks, which will run\u00a0make format\u00a0on every commit.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make format",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "It is advised to run\u00a0make lint\u00a0before pushing to the repository.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make lint",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "Run Locally",
        "section": "Run Locally",
        "type": "h2"
    },
    {
        "content": "Langflow can run locally by cloning the repository and installing the dependencies. We recommend using a virtual environment to isolate the dependencies from your system.",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "Before you start, make sure you have the following installed:",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "Poetry (>=1.4)\nNode.js",
        "section": "Run Locally",
        "type": "ul"
    },
    {
        "content": "Poetry (>=1.4)",
        "section": "Run Locally",
        "type": "li"
    },
    {
        "content": "Node.js",
        "section": "Run Locally",
        "type": "li"
    },
    {
        "content": "Then, in the root folder, install the dependencies and start the development server for the backend:",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make backend",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make backend",
        "section": "Run Locally",
        "type": "code"
    },
    {
        "content": "And the frontend:",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make frontend",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make frontend",
        "section": "Run Locally",
        "type": "code"
    },
    {
        "content": "Docker Compose",
        "section": "Docker Compose",
        "type": "h2"
    },
    {
        "content": "The following snippet will run the backend and frontend in separate containers. The frontend will be available at\u00a0localhost:3000\u00a0and the backend at\u00a0localhost:7860.",
        "section": "Docker Compose",
        "type": "p"
    },
    {
        "content": "localhost:3000",
        "section": "Docker Compose",
        "type": "code"
    },
    {
        "content": "localhost:7860",
        "section": "Docker Compose",
        "type": "code"
    },
    {
        "content": "docker compose up --build# ormake dev build=1",
        "section": "Docker Compose",
        "type": "p"
    },
    {
        "content": "docker compose up --build# ormake dev build=1",
        "section": "Docker Compose",
        "type": "code"
    },
    {
        "content": "Documentation",
        "section": "Documentation",
        "type": "h2"
    },
    {
        "content": "The documentation is built using\u00a0. To run the documentation locally, run the following commands:",
        "section": "Documentation",
        "type": "p"
    },
    {
        "content": "cd docsnpm installnpm run start",
        "section": "Documentation",
        "type": "p"
    },
    {
        "content": "cd docsnpm installnpm run start",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "The documentation will be available at\u00a0localhost:3000\u00a0and all the files are located in the\u00a0docs/docs\u00a0folder. Once you are done with your changes, you can create a Pull Request to the\u00a0main\u00a0branch.",
        "section": "Documentation",
        "type": "p"
    },
    {
        "content": "localhost:3000",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "docs/docs",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "main",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "Submitting Components",
        "section": "Submitting Components",
        "type": "h2"
    },
    {
        "content": "New components are added as objects of the\u00a0\u00a0class and any dependencies are added to the\u00a0\u00a0file.",
        "section": "Submitting Components",
        "type": "p"
    },
    {
        "content": "Add an example component",
        "section": "Add an example component",
        "type": "h3"
    },
    {
        "content": "You have a new document loader called\u00a0MyCustomDocumentLoader\u00a0and it would look awesome in Langflow.",
        "section": "Add an example component",
        "type": "p"
    },
    {
        "content": "Write your loader as an object of the\u00a0\u00a0class. You'll create a new class,\u00a0MyCustomDocumentLoader, that will inherit from\u00a0CustomComponent\u00a0and override the base class's methods.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "MyCustomDocumentLoader",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "CustomComponent",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Define optional attributes like\u00a0display_name,\u00a0description, and\u00a0documentation\u00a0to provide information about your custom component.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "display_name",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "description",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "documentation",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Implement the\u00a0build_config\u00a0method to define the configuration options for your custom component.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "build_config",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Implement the\u00a0build\u00a0method to define the logic for taking input parameters specified in the\u00a0build_config\u00a0method and returning the desired output.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "build",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "build_config",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Add the code to the\u00a0\u00a0folder.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "Add the dependency to\u00a0\u00a0as\u00a0from .MyCustomDocumentLoader import MyCustomDocumentLoader.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "from .MyCustomDocumentLoader import MyCustomDocumentLoader",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Add any new dependencies to the outer\u00a0\u00a0file.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "Submit documentation for your component. For this example, you'd submit documentation to the\u00a0.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "Submit your changes as a pull request. The Langflow team will have a look, suggest changes, and add your component to Langflow.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "User Sharing",
        "section": "User Sharing",
        "type": "h2"
    },
    {
        "content": "You might want to share and test your custom component with others, but don't need it merged into the main source code.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "If so, you can share your component on the Langflow store.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": ".",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": ".",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Undergo pre-validation before receiving an API key.",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "Undergo pre-validation before receiving an API key.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "To deploy your amazing component directly to the Langflow store, without it being merged into the main source code, navigate to your flow, and then click\u00a0Share. The share window appears:",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "To deploy your amazing component directly to the Langflow store, without it being merged into the main source code, navigate to your flow, and then click\u00a0Share. The share window appears:",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Choose whether you want to flow to be public or private. You can also\u00a0Export\u00a0your flow as a JSON file from this window. When you're ready to share the flow, click\u00a0Share Flow. You should see a\u00a0Flow shared successfully\u00a0popup.",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "Choose whether you want to flow to be public or private. You can also\u00a0Export\u00a0your flow as a JSON file from this window. When you're ready to share the flow, click\u00a0Share Flow. You should see a\u00a0Flow shared successfully\u00a0popup.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "To confirm, navigate to the\u00a0Langflow Store\u00a0and filter results by\u00a0Created By Me. You should see your new flow on the\u00a0Langflow Store.",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "To confirm, navigate to the\u00a0Langflow Store\u00a0and filter results by\u00a0Created By Me. You should see your new flow on the\u00a0Langflow Store.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Telemetry",
        "section": "Telemetry",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "Our system uses anonymous telemetry to collect essential usage statistics to enhance functionality and user experience. This data helps us identify commonly used features and areas needing improvement, ensuring our development efforts align with what you need.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "We respect your privacy and are committed to protecting your data. We do not collect any personal information or sensitive data. All telemetry data is anonymized and used solely for improving Langflow.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "You can opt-out of telemetry by setting the\u00a0LANGFLOW_DO_NOT_TRACK\u00a0or\u00a0DO_NOT_TRACK\u00a0environment variable to\u00a0true\u00a0before running Langflow. This will disable telemetry data collection.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "LANGFLOW_DO_NOT_TRACK",
        "section": "Telemetry",
        "type": "code"
    },
    {
        "content": "DO_NOT_TRACK",
        "section": "Telemetry",
        "type": "code"
    },
    {
        "content": "true",
        "section": "Telemetry",
        "type": "code"
    },
    {
        "content": "Data Collected Includes",
        "section": "Data Collected Includes",
        "type": "h2"
    },
    {
        "content": "Run",
        "section": "Run",
        "type": "h3"
    },
    {
        "content": "IsWebhook: Indicates whether the operation was triggered via a webhook.\nSeconds: Duration in seconds for how long the operation lasted, providing insights into performance.\nSuccess: Boolean value indicating whether the operation was successful, helping identify potential errors or issues.\nErrorMessage: Provides error message details if the operation was unsuccessful, aiding in troubleshooting and enhancements.",
        "section": "Run",
        "type": "ul"
    },
    {
        "content": "IsWebhook: Indicates whether the operation was triggered via a webhook.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Seconds: Duration in seconds for how long the operation lasted, providing insights into performance.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Success: Boolean value indicating whether the operation was successful, helping identify potential errors or issues.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "ErrorMessage: Provides error message details if the operation was unsuccessful, aiding in troubleshooting and enhancements.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Shutdown",
        "section": "Shutdown",
        "type": "h3"
    },
    {
        "content": "Time Running: Total runtime before shutdown, useful for understanding application lifecycle and optimizing uptime.",
        "section": "Shutdown",
        "type": "ul"
    },
    {
        "content": "Time Running: Total runtime before shutdown, useful for understanding application lifecycle and optimizing uptime.",
        "section": "Shutdown",
        "type": "li"
    },
    {
        "content": "Version",
        "section": "Version",
        "type": "h3"
    },
    {
        "content": "Version: The specific version of Langflow used, which helps in tracking feature adoption and compatibility.\nPlatform: Operating system of the host machine, which aids in focusing our support for popular platforms like Windows, macOS, and Linux.\nPython: The version of Python used, assisting in maintaining compatibility and support for various Python versions.\nArch: Architecture of the system (e.g., x86, ARM), which helps optimize our software for different hardware.\nAutoLogin: Indicates whether the auto-login feature is enabled, reflecting user preference settings.\nCacheType: Type of caching mechanism used, which impacts performance and efficiency.\nBackendOnly: Boolean indicating whether you are running Langflow in a backend-only mode, useful for understanding deployment configurations.",
        "section": "Version",
        "type": "ul"
    },
    {
        "content": "Version: The specific version of Langflow used, which helps in tracking feature adoption and compatibility.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Platform: Operating system of the host machine, which aids in focusing our support for popular platforms like Windows, macOS, and Linux.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Python: The version of Python used, assisting in maintaining compatibility and support for various Python versions.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Arch: Architecture of the system (e.g., x86, ARM), which helps optimize our software for different hardware.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "AutoLogin: Indicates whether the auto-login feature is enabled, reflecting user preference settings.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "CacheType: Type of caching mechanism used, which impacts performance and efficiency.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "BackendOnly: Boolean indicating whether you are running Langflow in a backend-only mode, useful for understanding deployment configurations.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Playground",
        "section": "Playground",
        "type": "h3"
    },
    {
        "content": "Seconds: Duration in seconds for playground execution, offering insights into performance during testing or experimental stages.\nComponentCount: Number of components used in the playground, which helps understand complexity and usage patterns.\nSuccess: Success status of the playground operation, aiding in identifying the stability of experimental features.",
        "section": "Playground",
        "type": "ul"
    },
    {
        "content": "Seconds: Duration in seconds for playground execution, offering insights into performance during testing or experimental stages.",
        "section": "Playground",
        "type": "li"
    },
    {
        "content": "ComponentCount: Number of components used in the playground, which helps understand complexity and usage patterns.",
        "section": "Playground",
        "type": "li"
    },
    {
        "content": "Success: Success status of the playground operation, aiding in identifying the stability of experimental features.",
        "section": "Playground",
        "type": "li"
    },
    {
        "content": "Component",
        "section": "Component",
        "type": "h3"
    },
    {
        "content": "Name: Identifies the component, providing data on which components are most utilized or prone to issues.\nSeconds: Time taken by the component to execute, offering performance metrics.\nSuccess: Whether the component operated successfully, which helps in quality control.\nErrorMessage: Details of any errors encountered, crucial for debugging and improvement.",
        "section": "Component",
        "type": "ul"
    },
    {
        "content": "Name: Identifies the component, providing data on which components are most utilized or prone to issues.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "Seconds: Time taken by the component to execute, offering performance metrics.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "Success: Whether the component operated successfully, which helps in quality control.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "ErrorMessage: Details of any errors encountered, crucial for debugging and improvement.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "This telemetry data is crucial for enhancing Langflow and ensuring that our development efforts align with your needs. Your feedback and suggestions are invaluable in shaping the future of Langflow, and we appreciate your support in making Langflow better for everyone.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "Docker",
        "section": "Docker",
        "type": "h1"
    },
    {
        "content": "This guide will help you get LangFlow up and running using Docker and Docker Compose.",
        "section": "Docker",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Docker\nDocker Compose",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "Docker",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Docker Compose",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Docker",
        "section": "Docker",
        "type": "h2"
    },
    {
        "content": "Clone repo and build Docker container",
        "section": "Clone repo and build Docker container",
        "type": "h3"
    },
    {
        "content": "Clone the LangFlow repository:\ngit clone https://github.com/langflow-ai/langflow.git",
        "section": "Clone repo and build Docker container",
        "type": "li"
    },
    {
        "content": "Clone the LangFlow repository:",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "git clone https://github.com/langflow-ai/langflow.git",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "git clone https://github.com/langflow-ai/langflow.git",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "Navigate to the\u00a0docker_example\u00a0directory:\ncd langflow/docker_example",
        "section": "Clone repo and build Docker container",
        "type": "li"
    },
    {
        "content": "Navigate to the\u00a0docker_example\u00a0directory:",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "docker_example",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "cd langflow/docker_example",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "cd langflow/docker_example",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "Run the Docker Compose file:\ndocker compose up",
        "section": "Clone repo and build Docker container",
        "type": "li"
    },
    {
        "content": "Run the Docker Compose file:",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "docker compose up",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "docker compose up",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "LangFlow will now be accessible at\u00a0.",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "Docker Compose configuration",
        "section": "Docker Compose configuration",
        "type": "h3"
    },
    {
        "content": "The Docker Compose configuration spins up two services:\u00a0langflow\u00a0and\u00a0postgres.",
        "section": "Docker Compose configuration",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "Docker Compose configuration",
        "type": "code"
    },
    {
        "content": "postgres",
        "section": "Docker Compose configuration",
        "type": "code"
    },
    {
        "content": "LangFlow service",
        "section": "LangFlow service",
        "type": "h3"
    },
    {
        "content": "The\u00a0langflow\u00a0service uses the\u00a0langflowai/langflow:latest\u00a0Docker image and exposes port 7860. It depends on the\u00a0postgres\u00a0service.",
        "section": "LangFlow service",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "langflowai/langflow:latest",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "postgres",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "Environment variables:",
        "section": "LangFlow service",
        "type": "p"
    },
    {
        "content": "LANGFLOW_DATABASE_URL: The connection string for the PostgreSQL database.\nLANGFLOW_CONFIG_DIR: The directory where LangFlow stores logs, file storage, monitor data, and secret keys.",
        "section": "LangFlow service",
        "type": "ul"
    },
    {
        "content": "LANGFLOW_DATABASE_URL: The connection string for the PostgreSQL database.",
        "section": "LangFlow service",
        "type": "li"
    },
    {
        "content": "LANGFLOW_DATABASE_URL",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "LANGFLOW_CONFIG_DIR: The directory where LangFlow stores logs, file storage, monitor data, and secret keys.",
        "section": "LangFlow service",
        "type": "li"
    },
    {
        "content": "LANGFLOW_CONFIG_DIR",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "Volumes:",
        "section": "LangFlow service",
        "type": "p"
    },
    {
        "content": "langflow-data: This volume is mapped to\u00a0/var/lib/langflow\u00a0in the container.",
        "section": "LangFlow service",
        "type": "ul"
    },
    {
        "content": "langflow-data: This volume is mapped to\u00a0/var/lib/langflow\u00a0in the container.",
        "section": "LangFlow service",
        "type": "li"
    },
    {
        "content": "langflow-data",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "/var/lib/langflow",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "PostgreSQL service",
        "section": "PostgreSQL service",
        "type": "h3"
    },
    {
        "content": "The\u00a0postgres\u00a0service uses the\u00a0postgres:16\u00a0Docker image and exposes port 5432.",
        "section": "PostgreSQL service",
        "type": "p"
    },
    {
        "content": "postgres",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "postgres:16",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "Environment variables:",
        "section": "PostgreSQL service",
        "type": "p"
    },
    {
        "content": "POSTGRES_USER: The username for the PostgreSQL database.\nPOSTGRES_PASSWORD: The password for the PostgreSQL database.\nPOSTGRES_DB: The name of the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "ul"
    },
    {
        "content": "POSTGRES_USER: The username for the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "POSTGRES_USER",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "POSTGRES_PASSWORD: The password for the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "POSTGRES_PASSWORD",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "POSTGRES_DB: The name of the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "POSTGRES_DB",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "Volumes:",
        "section": "PostgreSQL service",
        "type": "p"
    },
    {
        "content": "langflow-postgres: This volume is mapped to\u00a0/var/lib/postgresql/data\u00a0in the container.",
        "section": "PostgreSQL service",
        "type": "ul"
    },
    {
        "content": "langflow-postgres: This volume is mapped to\u00a0/var/lib/postgresql/data\u00a0in the container.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "langflow-postgres",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "/var/lib/postgresql/data",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "Switch to a specific LangFlow version",
        "section": "Switch to a specific LangFlow version",
        "type": "h3"
    },
    {
        "content": "If you want to use a specific version of LangFlow, you can modify the\u00a0image\u00a0field under the\u00a0langflow\u00a0service in the Docker Compose file. For example, to use version 1.0-alpha, change\u00a0langflowai/langflow:latest\u00a0to\u00a0langflowai/langflow:1.0-alpha.",
        "section": "Switch to a specific LangFlow version",
        "type": "p"
    },
    {
        "content": "image",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "langflow",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "langflowai/langflow:latest",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "langflowai/langflow:1.0-alpha",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Switch to a specific LangFlow version",
        "type": "p"
    },
    {
        "content": "GCP",
        "section": "GCP",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "GCP",
        "type": "p"
    },
    {
        "content": "Deploy on Google Cloud Platform",
        "section": "Deploy on Google Cloud Platform",
        "type": "h2"
    },
    {
        "content": "Run Langflow from a New Google Cloud Project",
        "section": "Run Langflow from a New Google Cloud Project",
        "type": "h3"
    },
    {
        "content": "This guide will help you set up a Langflow development VM in a Google Cloud Platform project using Google Cloud Shell.",
        "section": "Run Langflow from a New Google Cloud Project",
        "type": "p"
    },
    {
        "content": "When Cloud Shell opens, be sure to select Trust repo. Some gcloud commands might not run in an ephemeral Cloud Shell environment.",
        "section": "Run Langflow from a New Google Cloud Project",
        "type": "p"
    },
    {
        "content": "Standard VM",
        "section": "Standard VM",
        "type": "h3"
    },
    {
        "content": "This script sets up a Debian-based VM with the Langflow package, Nginx, and the necessary configurations to run the Langflow Dev environment.",
        "section": "Standard VM",
        "type": "p"
    },
    {
        "content": "Spot/Preemptible Instance",
        "section": "Spot/Preemptible Instance",
        "type": "h2"
    },
    {
        "content": "When running as a , the code and VM will behave the same way as in a regular instance, executing the startup script to configure the environment, install necessary dependencies, and run the Langflow application. However, due to the nature of spot instances, the VM may be terminated at any time if Google Cloud needs to reclaim the resources. This makes spot instances suitable for fault-tolerant, stateless, or interruptible workloads that can handle unexpected terminations and restarts.",
        "section": "Spot/Preemptible Instance",
        "type": "p"
    },
    {
        "content": "Pricing (approximate)",
        "section": "Pricing (approximate)",
        "type": "h2"
    },
    {
        "content": "For a more accurate breakdown of costs, please use the GCP Pricing Calculator",
        "section": "Pricing (approximate)",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Pricing (approximate)",
        "type": "p"
    },
    {
        "content": "\ud83e\udd17\u00a0Spaces",
        "section": "\ud83e\udd17\u00a0Spaces",
        "type": "h1"
    },
    {
        "content": "HuggingFace Spaces",
        "section": "HuggingFace Spaces",
        "type": "h2"
    },
    {
        "content": "HuggingFace provides a great alternative for running Langflow in their Spaces environment. This means you can run Langflow in the cloud without any local installation required. Here's how you can get Langflow up and running on HuggingFace Spaces:",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Access Langflow Space: Open a Chromium-based browser and navigate to the\u00a0. This link directs you to a pre-configured environment for Langflow.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Access Langflow Space: Open a Chromium-based browser and navigate to the\u00a0. This link directs you to a pre-configured environment for Langflow.",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Duplicate the Space: You'll encounter an option to duplicate the Langflow space. This step involves a few simple decisions:\n\nNaming Your Space: Assign a unique name to your new Space.\nVisibility Settings: Choose between Public or Private visibility for your Space.\nAfter setting these parameters, click on\u00a0Duplicate Space\u00a0to initiate the setup.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Duplicate the Space: You'll encounter an option to duplicate the Langflow space. This step involves a few simple decisions:",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Naming Your Space: Assign a unique name to your new Space.\nVisibility Settings: Choose between Public or Private visibility for your Space.\nAfter setting these parameters, click on\u00a0Duplicate Space\u00a0to initiate the setup.",
        "section": "HuggingFace Spaces",
        "type": "ul"
    },
    {
        "content": "Naming Your Space: Assign a unique name to your new Space.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Visibility Settings: Choose between Public or Private visibility for your Space.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "After setting these parameters, click on\u00a0Duplicate Space\u00a0to initiate the setup.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Complete Installation: The duplication and setup process begins immediately after you click\u00a0Duplicate Space. Once completed, you will be automatically redirected to the main page of your new Space.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Complete Installation: The duplication and setup process begins immediately after you click\u00a0Duplicate Space. Once completed, you will be automatically redirected to the main page of your new Space.",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Start Exploring Langflow: With the setup complete, Langflow is now ready for use in your Space and you can start exploring its features and capabilities right away!",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Start Exploring Langflow: With the setup complete, Langflow is now ready for use in your Space and you can start exploring its features and capabilities right away!",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Kubernetes",
        "section": "Kubernetes",
        "type": "h1"
    },
    {
        "content": "This guide will help you get LangFlow up and running in Kubernetes cluster, including the following steps:",
        "section": "Kubernetes",
        "type": "p"
    },
    {
        "content": "Install  in a Kubernetes cluster (for development)\nInstall  in a Kubernetes cluster (for production runtime workloads)",
        "section": "Kubernetes",
        "type": "ul"
    },
    {
        "content": "Install  in a Kubernetes cluster (for development)",
        "section": "Kubernetes",
        "type": "li"
    },
    {
        "content": "Install  in a Kubernetes cluster (for production runtime workloads)",
        "section": "Kubernetes",
        "type": "li"
    },
    {
        "content": "LangFlow (IDE)",
        "section": "LangFlow (IDE)",
        "type": "h2"
    },
    {
        "content": "This solution is designed to provide a complete environment for developers to create, test, and debug their flows. It includes both the API and the UI.",
        "section": "LangFlow (IDE)",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h3"
    },
    {
        "content": "Kubernetes server\nkubectl\nHelm",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "Kubernetes server",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "kubectl",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Helm",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Step 0. Prepare a Kubernetes cluster",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "h3"
    },
    {
        "content": "We use  for this example, but you can use any Kubernetes cluster.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "Create a Kubernetes cluster on Minikube.\n_10minikube start",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "li"
    },
    {
        "content": "Create a Kubernetes cluster on Minikube.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "_10minikube start",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "code"
    },
    {
        "content": "Set kubectl to use Minikube.\n_10kubectl config use-context minikube",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "li"
    },
    {
        "content": "Set kubectl to use Minikube.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "kubectl",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "code"
    },
    {
        "content": "_10kubectl config use-context minikube",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "code"
    },
    {
        "content": "Step 1. Install the LangFlow Helm chart",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "h3"
    },
    {
        "content": "Add the repository to Helm.\n_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "li"
    },
    {
        "content": "Add the repository to Helm.",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "p"
    },
    {
        "content": "_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "Install LangFlow with the default options in the langflow namespace.\n_10helm install langflow-ide langflow/langflow-ide -n langflow --create-namespace",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "li"
    },
    {
        "content": "Install LangFlow with the default options in the langflow namespace.",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "_10helm install langflow-ide langflow/langflow-ide -n langflow --create-namespace",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "Check the status of the pods\n_10kubectl get pods -n langflow\n_10NAME                                 READY   STATUS    RESTARTS       AGE_10langflow-0                           1/1     Running   0              33s_10langflow-frontend-5d9c558dbb-g7tc9   1/1     Running   0              38s",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "li"
    },
    {
        "content": "Check the status of the pods",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "p"
    },
    {
        "content": "_10kubectl get pods -n langflow",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "_10NAME                                 READY   STATUS    RESTARTS       AGE_10langflow-0                           1/1     Running   0              33s_10langflow-frontend-5d9c558dbb-g7tc9   1/1     Running   0              38s",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "Step 2. Access LangFlow",
        "section": "Step 2. Access LangFlow",
        "type": "h3"
    },
    {
        "content": "Enable local port forwarding to access LangFlow from your local machine.",
        "section": "Step 2. Access LangFlow",
        "type": "p"
    },
    {
        "content": "_10kubectl port-forward -n langflow svc/langflow-langflow-runtime 7860:7860",
        "section": "Step 2. Access LangFlow",
        "type": "code"
    },
    {
        "content": "Now you can access LangFlow at .",
        "section": "Step 2. Access LangFlow",
        "type": "p"
    },
    {
        "content": "LangFlow version",
        "section": "LangFlow version",
        "type": "h3"
    },
    {
        "content": "To specify a different LangFlow version, you can set the langflow.backend.image.tag and langflow.frontend.image.tag values in the values.yaml file.",
        "section": "LangFlow version",
        "type": "p"
    },
    {
        "content": "langflow.backend.image.tag",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "langflow.frontend.image.tag",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "_10langflow:_10  backend:_10    image:_10      tag: \"1.0.0a59\"_10  frontend:_10    image:_10      tag: \"1.0.0a59\"",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "Storage",
        "section": "Storage",
        "type": "h3"
    },
    {
        "content": "By default, the chart will use a SQLLite database stored in a local persistent disk.\nIf you want to use an external PostgreSQL database, you can set the langflow.database values in the values.yaml file.",
        "section": "Storage",
        "type": "p"
    },
    {
        "content": "langflow.database",
        "section": "Storage",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Storage",
        "type": "code"
    },
    {
        "content": "_30# Deploy postgresql. You can skip this section if you have an existing postgresql database._30postgresql:_30  enabled: true_30  fullnameOverride: \"langflow-ide-postgresql-service\"_30  auth:_30    username: \"langflow\"_30    password: \"langflow-postgres\"_30    database: \"langflow-db\"_30_30langflow:_30  backend:_30    externalDatabase:_30      enabled: true_30      driver:_30        value: \"postgresql\"_30      host:_30        value: \"langflow-ide-postgresql-service\"_30      port:_30        value: \"5432\"_30      database:_30        value: \"langflow-db\"_30      user:_30        value: \"langflow\"_30      password:_30        valueFrom:_30          secretKeyRef:_30            key: \"password\"_30            name: \"langflow-ide-postgresql-service\"_30    sqlite:_30      enabled: false",
        "section": "Storage",
        "type": "code"
    },
    {
        "content": "Scaling",
        "section": "Scaling",
        "type": "h3"
    },
    {
        "content": "You can scale the number of replicas for the LangFlow backend and frontend services by changing the replicaCount value in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "replicaCount",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_10langflow:_10  backend:_10    replicaCount: 3_10  frontend:_10    replicaCount: 3",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "You can scale frontend and backend services independently.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "To scale vertically (increase the resources for the pods), you can set the resources values in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "resources",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_11langflow:_11  backend:_11    resources:_11      requests:_11        memory: \"2Gi\"_11        cpu: \"1000m\"_11  frontend:_11    resources:_11      requests:_11        memory: \"1Gi\"_11        cpu: \"1000m\"",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "Deploy on AWS EKS, Google GKE, or Azure AKS and other examples",
        "section": "Deploy on AWS EKS, Google GKE, or Azure AKS and other examples",
        "type": "h3"
    },
    {
        "content": "Visit the  for more information.",
        "section": "Deploy on AWS EKS, Google GKE, or Azure AKS and other examples",
        "type": "p"
    },
    {
        "content": "LangFlow (Runtime)",
        "section": "LangFlow (Runtime)",
        "type": "h2"
    },
    {
        "content": "The runtime chart is tailored for deploying applications in a production environment. It is focused on stability, performance, isolation, and security to ensure that applications run reliably and efficiently.",
        "section": "LangFlow (Runtime)",
        "type": "p"
    },
    {
        "content": "Using a dedicated deployment for a set of flows is fundamental in production environments to have granular resource control.",
        "section": "LangFlow (Runtime)",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h3"
    },
    {
        "content": "Kubernetes server\nkubectl\nHelm",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "Kubernetes server",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "kubectl",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Helm",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Step 0. Prepare a Kubernetes cluster",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "h3"
    },
    {
        "content": "Follow the same steps as for the LangFlow IDE.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "Step 1. Install the LangFlow runtime Helm chart",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "h3"
    },
    {
        "content": "Add the repository to Helm.\n_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "li"
    },
    {
        "content": "Add the repository to Helm.",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "p"
    },
    {
        "content": "_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "Install the LangFlow app with the default options in the langflow namespace.\nIf you bundled the flow in a docker image, you can specify the image name in the values.yaml file or with the -set flag:\nIf you want to download the flow from a remote location, you can specify the URL in the values.yaml file or with the -set flag:\n_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set image.repository=myuser/langflow-just-chat --set image.tag=1.0.0\n_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set downloadFlows.flows[0].url=https://raw.githubusercontent.com/langflow-ai/langflow/dev/src/backend/base/langflow/initial_setup/starter_projects/Basic%20Prompting%20(Hello%2C%20world!).json",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "li"
    },
    {
        "content": "Install the LangFlow app with the default options in the langflow namespace.\nIf you bundled the flow in a docker image, you can specify the image name in the values.yaml file or with the -set flag:\nIf you want to download the flow from a remote location, you can specify the URL in the values.yaml file or with the -set flag:",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "-set",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "-set",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set image.repository=myuser/langflow-just-chat --set image.tag=1.0.0",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set downloadFlows.flows[0].url=https://raw.githubusercontent.com/langflow-ai/langflow/dev/src/backend/base/langflow/initial_setup/starter_projects/Basic%20Prompting%20(Hello%2C%20world!).json",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "Check the status of the pods.\n_10kubectl get pods -n langflow",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "li"
    },
    {
        "content": "Check the status of the pods.",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "p"
    },
    {
        "content": "_10kubectl get pods -n langflow",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "Step 2. Access the LangFlow app API",
        "section": "Step 2. Access the LangFlow app API",
        "type": "h3"
    },
    {
        "content": "Enable local port forwarding to access LangFlow from your local machine.",
        "section": "Step 2. Access the LangFlow app API",
        "type": "p"
    },
    {
        "content": "_10kubectl port-forward -n langflow svc/langflow-my-langflow-app 7860:7860",
        "section": "Step 2. Access the LangFlow app API",
        "type": "code"
    },
    {
        "content": "Now you can access the API at  and execute the flow:",
        "section": "Step 2. Access the LangFlow app API",
        "type": "p"
    },
    {
        "content": "_10id=$(curl -s <http://localhost:7860/api/v1/flows> | jq -r '.flows[0].id')_10curl -X POST \\\\_10    \"<http://localhost:7860/api/v1/run/$id?stream=false>\" \\\\_10    -H 'Content-Type: application/json'\\\\_10    -d '{_10      \"input_value\": \"Hello!\",_10      \"output_type\": \"chat\",_10      \"input_type\": \"chat\"_10    }'",
        "section": "Step 2. Access the LangFlow app API",
        "type": "code"
    },
    {
        "content": "Storage",
        "section": "Storage",
        "type": "h3"
    },
    {
        "content": "In this case, storage is not needed as our deployment is stateless.",
        "section": "Storage",
        "type": "p"
    },
    {
        "content": "Log level and LangFlow configurations",
        "section": "Log level and LangFlow configurations",
        "type": "h3"
    },
    {
        "content": "You can set the log level and other LangFlow configurations in the values.yaml file.",
        "section": "Log level and LangFlow configurations",
        "type": "p"
    },
    {
        "content": "values.yaml",
        "section": "Log level and LangFlow configurations",
        "type": "code"
    },
    {
        "content": "_10env:_10  - name: LANGFLOW_LOG_LEVEL_10    value: \"INFO\"",
        "section": "Log level and LangFlow configurations",
        "type": "code"
    },
    {
        "content": "Configure secrets and variables",
        "section": "Configure secrets and variables",
        "type": "h3"
    },
    {
        "content": "To inject secrets and LangFlow global variables, you can use the secrets and env sections in the values.yaml file.",
        "section": "Configure secrets and variables",
        "type": "p"
    },
    {
        "content": "secrets",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "env",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "Let's say your flow uses a global variable which is a secret; when you export the flow as JSON, it's recommended to not include it.\nWhen importing the flow in the LangFlow runtime, you can set the global variable using the env section in the values.yaml file.\nAssuming you have a global variable called openai_key_var, you can read it directly from a secret:",
        "section": "Configure secrets and variables",
        "type": "p"
    },
    {
        "content": "env",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "openai_key_var",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "_10env:_10  - name: openai_key_var_10    valueFrom:_10      secretKeyRef:_10        name: openai-key_10        key: openai-key",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "or directly from the values file (not recommended for secret values!):",
        "section": "Configure secrets and variables",
        "type": "p"
    },
    {
        "content": "_10env:_10  - name: openai_key_var_10    value: \"sk-....\"",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "Scaling",
        "section": "Scaling",
        "type": "h3"
    },
    {
        "content": "You can scale the number of replicas for the LangFlow app by changing the replicaCount value in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "replicaCount",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_10replicaCount: 3",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "To scale vertically (increase the resources for the pods), you can set the resources values in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "resources",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_10resources:_10  requests:_10    memory: \"2Gi\"_10    cpu: \"1000m\"",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "Other Examples",
        "section": "Other Examples",
        "type": "h2"
    },
    {
        "content": "Visit the LangFlow Helm Charts repository for more examples and configurations. Use the default values file as reference for all the options available.",
        "section": "Other Examples",
        "type": "p"
    },
    {
        "content": "Visit the examples directory to learn more about different deployment options.",
        "section": "Other Examples",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Other Examples",
        "type": "p"
    },
    {
        "content": "Railway",
        "section": "Railway",
        "type": "h1"
    },
    {
        "content": "Deploy on Railway",
        "section": "Deploy on Railway",
        "type": "h2"
    },
    {
        "content": "Railway is a cloud infrastructure platform that enables developers to deploy and manage applications effortlessly. It provides an intuitive interface, seamless integrations, and powerful features like auto-deploy from GitHub, managed databases, and automatic scaling.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Deploying Langflow to Railway involves a few simple steps:",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Railway platform.",
        "section": "Deploy on Railway",
        "type": "li"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Railway platform.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Deploy: Proceed to deploy your Langflow instance. Click Deploy Now to deploy the instance. Railway will handle the rest, including setting up the infrastructure, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Railway",
        "type": "li"
    },
    {
        "content": "Deploy: Proceed to deploy your Langflow instance. Click Deploy Now to deploy the instance. Railway will handle the rest, including setting up the infrastructure, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "By following these steps, your Langflow instance will be successfully deployed on Railway.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Render",
        "section": "Render",
        "type": "h1"
    },
    {
        "content": "Deploy on Render",
        "section": "Deploy on Render",
        "type": "h2"
    },
    {
        "content": "is a unified cloud platform designed to make deploying web applications, APIs, and static sites easy. It provides a streamlined experience with powerful features like automatic SSL, managed databases, and auto-deploy from Git, making it a popular choice for developers looking to simplify their deployment workflows.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Deploying Langflow to Render is a straightforward process that can be completed in just a few steps:",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Render platform.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Render platform.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Select the Blueprint Configuration: Once on the Render platform, you will be prompted to provide a blueprint name and to select the branch for your render.yaml file in Langflow. This configuration file includes all the necessary settings and resources to deploy Langflow in Render. The default is main.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "Select the Blueprint Configuration: Once on the Render platform, you will be prompted to provide a blueprint name and to select the branch for your render.yaml file in Langflow. This configuration file includes all the necessary settings and resources to deploy Langflow in Render. The default is main.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "render.yaml",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "main",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "The render.yaml file specifies a standard Render instance, because Langflow requires at least 2 GB of RAM to run. This may require a credit card to sign up. Review the pricing details on the Render platform to understand any costs involved before proceeding. If you need to change your plan later, from the Render dashboard, go to Settings > Instance Type.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "The render.yaml file specifies a standard Render instance, because Langflow requires at least 2 GB of RAM to run. This may require a credit card to sign up. Review the pricing details on the Render platform to understand any costs involved before proceeding. If you need to change your plan later, from the Render dashboard, go to Settings > Instance Type.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "render.yaml",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "standard",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "Click Deploy Blueprint to deploy Langflow. Render will handle the rest, including setting up the database, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "Click Deploy Blueprint to deploy Langflow. Render will handle the rest, including setting up the database, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "By following these steps, your Langflow instance will be successfully deployed on Render.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "\u2757\ufe0f Common Installation Issues",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "h1"
    },
    {
        "content": "This is a list of possible issues that you may encounter when installing Langflow and how to solve them.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "_10> No\u00a0module\u00a0named\u00a0'langflow.__main__'",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "Run\u00a0python\u00a0-m langflow run\u00a0instead of\u00a0langflow run.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "python\u00a0-m langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "If that doesn't work, reinstall Langflow with\u00a0_python\u00a0-m pip install langflow\u00a0--pre\u00a0-U.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "_python\u00a0-m pip install langflow\u00a0--pre\u00a0-U",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "If that doesn't work, reinstall Langflow and its dependencies with\u00a0python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "When you try to run Langflow using the command\u00a0langflow run, you may encounter the following error:",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "_10> langflow runTraceback (most recent call last): File \".../langflow\", line 5, in <module>  from langflow.__main__ import mainModuleNotFoundError: No module named 'langflow.__main__'",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "There are two possible reasons for this error:",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "You've installed Langflow using\u00a0pip install langflow\u00a0but you already had a previous version of Langflow installed in your system. In this case, you might be running the wrong executable. To solve this issue, run the correct executable by running\u00a0python\u00a0-m langflow run\u00a0instead of\u00a0langflow run. If that doesn't work, try uninstalling and reinstalling Langflow with\u00a0python\u00a0-m pip install langflow\u00a0--pre\u00a0-U.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "pip install langflow",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "python\u00a0-m langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "python\u00a0-m pip install langflow\u00a0--pre\u00a0-U",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "Some version conflicts might have occurred during the installation process. Run\u00a0python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall\u00a0to reinstall Langflow and its dependencies.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "_10> Something went wrong running migrations. Please, run\u00a0'langflow migration --fix'",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "Clear the cache by deleting the contents of the cache folder.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "This folder can be found at:",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "Linux or WSL2 on Windows:\u00a0home/<username>/.cache/langflow/\nMacOS:\u00a0/Users/<username>/Library/Caches/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "ul"
    },
    {
        "content": "Linux or WSL2 on Windows:\u00a0home/<username>/.cache/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "home/<username>/.cache/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "MacOS:\u00a0/Users/<username>/Library/Caches/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "/Users/<username>/Library/Caches/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "This error can occur during Langflow upgrades when the new version can't override\u00a0langflow-pre.db\u00a0in\u00a0.cache/langflow/. Clearing the cache removes this file but will also erase your settings.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "langflow-pre.db",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": ".cache/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "If you wish to retain your files, back them up before clearing the folder.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "\ud83d\udce6\u00a0Installation",
        "section": "\ud83d\udce6\u00a0Installation",
        "type": "h1"
    },
    {
        "content": "DataStax Langflow",
        "section": "DataStax Langflow",
        "type": "h2"
    },
    {
        "content": "The easiest way to get started with Langflow is through the DataStax Cloud Service!",
        "section": "DataStax Langflow",
        "type": "p"
    },
    {
        "content": "DataStax Langflow is a hosted version of Langflow integrated with\u00a0. Be up and running in minutes with no installation or setup required.\u00a0.",
        "section": "DataStax Langflow",
        "type": "p"
    },
    {
        "content": "Install Langflow Locally",
        "section": "Install Langflow Locally",
        "type": "h2"
    },
    {
        "content": "Langflow\u00a0requires\u00a0Python version 3.10 or greater and\u00a0\u00a0or\u00a0\u00a0to be installed on your system.",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "Install Langflow with pip:",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "_10python -m pip install langflow -U",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "Install Langflow with pipx:",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "_10pipx install langflow --python python3.10 --fetch-missing-python",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "Pipx can fetch the missing Python version for you with\u00a0--fetch-missing-python, but you can also install the Python version manually. Use\u00a0--force-reinstall\u00a0to ensure you have the latest version of Langflow and its dependencies.",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "--fetch-missing-python",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "--force-reinstall",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "Having a problem?",
        "section": "Having a problem?",
        "type": "h2"
    },
    {
        "content": "If you encounter a problem, see\u00a0.",
        "section": "Having a problem?",
        "type": "p"
    },
    {
        "content": "To get help in the Langflow CLI:",
        "section": "Having a problem?",
        "type": "p"
    },
    {
        "content": "_10python -m langflow --help",
        "section": "Having a problem?",
        "type": "code"
    },
    {
        "content": "\u26d3\ufe0f Run Langflow",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "h2"
    },
    {
        "content": "To run Langflow, enter the following command.",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "li"
    },
    {
        "content": "_10python -m langflow run",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "code"
    },
    {
        "content": "Confirm that a local Langflow instance starts by visiting\u00a0http://127.0.0.1:7860\u00a0in a Chromium-based browser.",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "li"
    },
    {
        "content": "http://127.0.0.1:7860",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "code"
    },
    {
        "content": "Continue on to the\u00a0.",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "p"
    },
    {
        "content": "\u26a1\ufe0f Quickstart",
        "section": "\u26a1\ufe0f Quickstart",
        "type": "h1"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "and\u00a0\u00a0or",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "and\u00a0\u00a0or",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Basic Prompting",
        "section": "Basic Prompting",
        "type": "h2"
    },
    {
        "content": "Create the basic prompting project",
        "section": "Create the basic prompting project",
        "type": "h3"
    },
    {
        "content": "From the Langflow dashboard, click\u00a0New Project.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Basic Prompting.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Basic Prompting.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "The\u00a0Basic Prompting\u00a0flow is created.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "The\u00a0Basic Prompting\u00a0flow is created.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "This flow allows you to chat with the\u00a0OpenAI\u00a0component through the\u00a0Prompt\u00a0component.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "Examine the\u00a0Prompt\u00a0component. The\u00a0Template\u00a0field instructs the LLM to\u00a0Answer the user as if you were a pirate.\u00a0This should be interesting...",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "Answer the user as if you were a pirate.",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "To create an environment variable for the\u00a0OpenAI\u00a0component, in the\u00a0OpenAI API Key\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.\n\nIn the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.\nIn the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).\nClick\u00a0Save Variable.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "To create an environment variable for the\u00a0OpenAI\u00a0component, in the\u00a0OpenAI API Key\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "In the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "openai_api_key",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "In the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "sk-...",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "Click\u00a0Save Variable.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Run",
        "section": "Run",
        "type": "h3"
    },
    {
        "content": "Click the\u00a0Playground\u00a0button on the control panel (bottom right side of the workspace). This is where you can interact with your AI.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Type a message and press Enter. The bot should respond in a markedly piratical manner!",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Modify the prompt for a different result",
        "section": "Modify the prompt for a different result",
        "type": "h3"
    },
    {
        "content": "To modify your prompt results, in the\u00a0Prompt\u00a0template, click the\u00a0Template\u00a0field. The\u00a0Edit Prompt\u00a0window opens.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Change\u00a0Answer the user as if you were a pirate\u00a0to a different character, perhaps\u00a0Answer the user as if you were Hermione Granger.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Answer the user as if you were a pirate",
        "section": "Modify the prompt for a different result",
        "type": "code"
    },
    {
        "content": "Answer the user as if you were Hermione Granger.",
        "section": "Modify the prompt for a different result",
        "type": "code"
    },
    {
        "content": "Run the workflow again. The response will be markedly different.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Next steps",
        "section": "Next steps",
        "type": "h2"
    },
    {
        "content": "Well done! You've built your first prompt in Langflow. \ud83c\udf89",
        "section": "Next steps",
        "type": "p"
    },
    {
        "content": "By dragging Langflow components to your workspace, you can create all sorts of interesting behaviors. Here are a couple of examples:",
        "section": "Next steps",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Next steps",
        "type": "p"
    },
    {
        "content": "Chat Memory",
        "section": "Chat Memory",
        "type": "h1"
    },
    {
        "content": "Langflow allows every chat message to be stored, and a single flow can have multiple memory sessions. This enables you to create separate memories for agents to store and recall information as needed.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "In any project, as long as there are  being used, memories are always being stored by default. These are messages from a user to the AI or vice-versa.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "To see and access this history of messages, Langflow features a component called Chat Memory. It retrieves previous messages and outputs them in structured format or parsed.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "To learn the basics about memory in Langflow, check out the starter example.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Memories can be visualized and managed directly from the Playground. You can edit and remove previous messages to inspect and validate the AI\u2019s response behavior. You can remove or edit previous messages to get your models acting just right.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Modifying these memories will influence the behavior of the chatbot responses, as long as an agent uses them. Here you have the ability to remove or edit previous messages, allowing them to manipulate and explore how these changes affect model responses.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "h2"
    },
    {
        "content": "Chat conversations store messages categorized by a Session ID. A a single flow can host multiple session IDs, and different flows can also share the same one.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "The Chat Memory component also retrieves message histories by Session ID which users can change in the advanced settings.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "By default, if the Session ID  value is empty, it is set to match the the same value as the Flow ID.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "Flow ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "You can also display all messages stored across every flow and session by going to\u00a0Settings\u00a0>\u00a0Messages.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Data & Message",
        "section": "Data & Message",
        "type": "h1"
    },
    {
        "content": "In Langflow, the\u00a0Data\u00a0and\u00a0Message\u00a0objects serve as structured, functional representations of data that enhance the capabilities and reliability of the platform.",
        "section": "Data & Message",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Data & Message",
        "type": "code"
    },
    {
        "content": "Message",
        "section": "Data & Message",
        "type": "code"
    },
    {
        "content": "The Data Object",
        "section": "The Data Object",
        "type": "h2"
    },
    {
        "content": "The\u00a0Data\u00a0object is a Pydantic model that serves as a container for storing and manipulating data. It carries\u00a0data\u2014a dictionary that can be accessed as attributes\u2014and uses\u00a0text_key\u00a0to specify which key in the dictionary should be considered the primary text content.",
        "section": "The Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "text_key",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Specifies the key to retrieve the primary text data.\ndata: A dictionary to store additional data.\ndefault_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "ul"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Specifies the key to retrieve the primary text data.\ndata: A dictionary to store additional data.\ndefault_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "text_key: Specifies the key to retrieve the primary text data.\ndata: A dictionary to store additional data.\ndefault_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "ul"
    },
    {
        "content": "text_key: Specifies the key to retrieve the primary text data.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "text_key",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "data: A dictionary to store additional data.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "default_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "default_value",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "text_key",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "Creating a Data Object",
        "section": "Creating a Data Object",
        "type": "h3"
    },
    {
        "content": "You can create a\u00a0Data\u00a0object by directly assigning key-value pairs to it. For example:",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "_10from langflow.schema import Data_10_10# Creating a Data object with specified key-value pairs_10data = Data(text=\"my_string\", bar=3, foo=\"another_string\")_10_10# Outputs:_10print(data.text)  # Outputs: \"my_string\"_10print(data.bar)   # Outputs: 3_10print(data.foo)   # Outputs: \"another_string\"",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "The\u00a0text_key\u00a0specifies which key in the\u00a0data\u00a0dictionary should be considered the primary text content. The\u00a0default_value\u00a0provides a fallback if the\u00a0text_key\u00a0is not present.",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "text_key",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "default_value",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "text_key",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "_10# Creating a Data object with a specific text_key and default_value_10data = Data(data={\"title\": \"Hello, World!\"}, text_key=\"content\", default_value=\"No content available\")_10_10# Accessing the primary text using text_key and default_value_10print(data.get_text())  # Outputs: \"No content available\" because \"content\" key is not in the data dictionary_10_10# Accessing data keys by calling the attribute directly_10print(data.title)  # Outputs: \"Hello, World!\" because \"title\" key is in the data dictionary",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "The Data object is also convenient for visualization of outputs, since the output preview has visual elements to inspect data as a table and its cells as pop ups for basic types. The idea is to create a unified way to work and visualize complex information in Langflow.",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "To receive Data objects in a component input, you can use the DataInput input type.",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "DataInput",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "The Message Object",
        "section": "The Message Object",
        "type": "h2"
    },
    {
        "content": "The\u00a0Message\u00a0object extends the functionality of\u00a0Data\u00a0and includes additional attributes and methods for chat interactions.",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Data",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Key to retrieve the primary text data.\ntext: The main text content of the message.\nsender: Identifier for the sender (e.g., \"User\" or \"AI\").\nsender_name: Name of the sender.\nfiles: List of files associated with the message.\nsession_id: Identifier for the chat session.\ntimestamp: Timestamp when the message was created.\nflow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "ul"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Key to retrieve the primary text data.\ntext: The main text content of the message.\nsender: Identifier for the sender (e.g., \"User\" or \"AI\").\nsender_name: Name of the sender.\nfiles: List of files associated with the message.\nsession_id: Identifier for the chat session.\ntimestamp: Timestamp when the message was created.\nflow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "text_key: Key to retrieve the primary text data.\ntext: The main text content of the message.\nsender: Identifier for the sender (e.g., \"User\" or \"AI\").\nsender_name: Name of the sender.\nfiles: List of files associated with the message.\nsession_id: Identifier for the chat session.\ntimestamp: Timestamp when the message was created.\nflow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "ul"
    },
    {
        "content": "text_key: Key to retrieve the primary text data.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "text_key",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "text: The main text content of the message.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "text",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "sender: Identifier for the sender (e.g., \"User\" or \"AI\").",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "sender",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "sender_name: Name of the sender.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "sender_name",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "files: List of files associated with the message.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "files",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "session_id: Identifier for the chat session.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "session_id",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "timestamp: Timestamp when the message was created.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "timestamp",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "flow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "flow_id",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "The\u00a0Message\u00a0object can be used to send, store and manipulate chat messages within Langflow. You can create a\u00a0Message\u00a0object by directly assigning key-value pairs to it. For example:",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "_10from langflow.schema.message import Message_10_10message = Message(text=\"Hello, AI!\", sender=\"User\", sender_name=\"John Doe\")",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "To receive Message objects in a component input, you can use the MessageInput input type or MessageTextInput when the goal is to extract just the text field of the Message object.",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "MessageInput",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "MessageTextInput",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "text",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "\ud83d\udcda New to LLMs?",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "h1"
    },
    {
        "content": "Large Language Models, or LLMs, are part of an exciting new world in computing.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "We made Langflow for anyone to create with LLMs, and hope you'll feel comfortable installing Langflow and\u00a0.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "If you want to learn the basics of LLMs, prompt engineering, and AI models, Langflow recommends\u00a0, an open-source repository of prompt engineering content maintained by AI experts. PromptingGuide offers content for\u00a0\u00a0and\u00a0, as well as the latest\u00a0\u00a0and\u00a0\u00a0fueling AI's progress.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "For in depth readings, we recommend\u00a0, a curated list of resources for learning about LLMs and their applications.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "\ud83d\udc4b\u00a0Welcome to Langflow",
        "section": "\ud83d\udc4b\u00a0Welcome to Langflow",
        "type": "h1"
    },
    {
        "content": "Introduction",
        "section": "Introduction",
        "type": "h2"
    },
    {
        "content": "Langflow is a new, visual framework for building multi-agent and RAG applications. It is open-source, Python-powered, fully customizable, LLM and vector store agnostic.",
        "section": "Introduction",
        "type": "p"
    },
    {
        "content": "Its intuitive interface allows for easy manipulation of AI building blocks, enabling developers to quickly prototype and turn their ideas into powerful, real-world solutions.",
        "section": "Introduction",
        "type": "p"
    },
    {
        "content": "\ud83d\ude80 First steps",
        "section": "\ud83d\ude80 First steps",
        "type": "h2"
    },
    {
        "content": "- Install and start a local Langflow server.\n\u00a0- Create a flow and run it.\n\u00a0- Learn more about the Langflow Workspace.",
        "section": "\ud83d\ude80 First steps",
        "type": "ul"
    },
    {
        "content": "- Install and start a local Langflow server.",
        "section": "\ud83d\ude80 First steps",
        "type": "li"
    },
    {
        "content": "- Create a flow and run it.",
        "section": "\ud83d\ude80 First steps",
        "type": "li"
    },
    {
        "content": "- Learn more about the Langflow Workspace.",
        "section": "\ud83d\ude80 First steps",
        "type": "li"
    },
    {
        "content": "Learn more about the exciting changes in Langflow 1.0 in .",
        "section": "\ud83d\ude80 First steps",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\ud83d\ude80 First steps",
        "type": "p"
    },
    {
        "content": "AssemblyAI",
        "section": "AssemblyAI",
        "type": "h1"
    },
    {
        "content": "The AssemblyAI components allow you to apply powerful Speech AI models to your app for tasks like:",
        "section": "AssemblyAI",
        "type": "p"
    },
    {
        "content": "Transcribing audio and video files\nFormatting transcripts\nGenerating subtitles\nApplying LLMs to audio files",
        "section": "AssemblyAI",
        "type": "ul"
    },
    {
        "content": "Transcribing audio and video files",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "Formatting transcripts",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "Generating subtitles",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "Applying LLMs to audio files",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "More info about AssemblyAI:",
        "section": "AssemblyAI",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "You need an AssemblyAI API key. After creating a free account, you'll find the API key in your dashboard. .",
        "section": "Prerequisites",
        "type": "p"
    },
    {
        "content": "Enter the key in the AssemblyAI API Key field in all components that require the key.",
        "section": "Prerequisites",
        "type": "p"
    },
    {
        "content": "(Optional): To use LeMUR, you need to upgrade your AssemblyAI account, since this is not included in the free account.",
        "section": "Prerequisites",
        "type": "p"
    },
    {
        "content": "Components",
        "section": "Components",
        "type": "h2"
    },
    {
        "content": "AssemblyAI Start Transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "h3"
    },
    {
        "content": "This component allows you to submit an audio or video file for transcription.",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "Tip: You can freeze the path of this component to only submit the file once.",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nAudio File: The audio or video file to transcribe.\nSpeech Model (Optional): Select the class of models. Default is Best. See  for more info.\nAutomatic Language Detection (Optional): Enable automatic language detection.\nLanguage (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.\nEnable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.\nExpected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.\nAudio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.\nPunctuate (Optional): Apply punctuation. Default is true.\nFormat Text (Optional): Apply casing and text formatting. Default is true.\n\n\n\nOutput:\n\nTranscript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nAudio File: The audio or video file to transcribe.\nSpeech Model (Optional): Select the class of models. Default is Best. See  for more info.\nAutomatic Language Detection (Optional): Enable automatic language detection.\nLanguage (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.\nEnable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.\nExpected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.\nAudio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.\nPunctuate (Optional): Apply punctuation. Default is true.\nFormat Text (Optional): Apply casing and text formatting. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nAudio File: The audio or video file to transcribe.\nSpeech Model (Optional): Select the class of models. Default is Best. See  for more info.\nAutomatic Language Detection (Optional): Enable automatic language detection.\nLanguage (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.\nEnable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.\nExpected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.\nAudio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.\nPunctuate (Optional): Apply punctuation. Default is true.\nFormat Text (Optional): Apply casing and text formatting. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Audio File: The audio or video file to transcribe.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Speech Model (Optional): Select the class of models. Default is Best. See  for more info.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Automatic Language Detection (Optional): Enable automatic language detection.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Language (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Enable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Expected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Audio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Punctuate (Optional): Apply punctuation. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Format Text (Optional): Apply casing and text formatting. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Output:\n\nTranscript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "Transcript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "ul"
    },
    {
        "content": "Transcript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "AssebmlyAI Poll Transcript",
        "section": "AssebmlyAI Poll Transcript",
        "type": "h3"
    },
    {
        "content": "This components allows you to poll the transcripts. It checks the status of the transcript every few seconds until the transcription is completed.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nPolling Interval (Optional): The polling interval in seconds. Default is 3.\n\n\n\nOutput:\n\nTranscription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nPolling Interval (Optional): The polling interval in seconds. Default is 3.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssebmlyAI Poll Transcript",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nPolling Interval (Optional): The polling interval in seconds. Default is 3.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Polling Interval (Optional): The polling interval in seconds. Default is 3.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Output:\n\nTranscription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssebmlyAI Poll Transcript",
        "type": "p"
    },
    {
        "content": "Transcription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "ul"
    },
    {
        "content": "Transcription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "AssebmlyAI Get Subtitles",
        "section": "AssebmlyAI Get Subtitles",
        "type": "h3"
    },
    {
        "content": "This component allows you to generate subtitles in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nSubtitle Format: The format of the captions (SRT or VTT).\nCharacter per Caption (Optional): The maximum number of characters per caption (0 for no limit).\n\n\n\nOutput:\n\nSubtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nSubtitle Format: The format of the captions (SRT or VTT).\nCharacter per Caption (Optional): The maximum number of characters per caption (0 for no limit).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssebmlyAI Get Subtitles",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nSubtitle Format: The format of the captions (SRT or VTT).\nCharacter per Caption (Optional): The maximum number of characters per caption (0 for no limit).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Transcription Result: The output of the Poll Transcript component.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Subtitle Format: The format of the captions (SRT or VTT).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Character per Caption (Optional): The maximum number of characters per caption (0 for no limit).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Output:\n\nSubtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssebmlyAI Get Subtitles",
        "type": "p"
    },
    {
        "content": "Subtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "ul"
    },
    {
        "content": "Subtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "subtitles",
        "section": "AssebmlyAI Get Subtitles",
        "type": "code"
    },
    {
        "content": "AssebmlyAI LeMUR",
        "section": "AssebmlyAI LeMUR",
        "type": "h3"
    },
    {
        "content": "This component allows you to apply Large Language Models to spoken data using the .",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "LeMUR automatically ingests the transcript as additional context, making it easy to apply LLMs to audio data. You can use it for tasks like summarizing audio, extracting insights, or asking questions.",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nInput Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.\nFinal Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.\nTemperature (Optional): The temperature to use for the model. Default is 0.0.\nMax Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.\nEndpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.\nQuestions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".\nTranscript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.\n\n\n\nOutput:\n\nLeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nInput Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.\nFinal Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.\nTemperature (Optional): The temperature to use for the model. Default is 0.0.\nMax Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.\nEndpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.\nQuestions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".\nTranscript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nInput Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.\nFinal Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.\nTemperature (Optional): The temperature to use for the model. Default is 0.0.\nMax Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.\nEndpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.\nQuestions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".\nTranscript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.",
        "section": "AssebmlyAI LeMUR",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Transcription Result: The output of the Poll Transcript component.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Input Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Final Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Temperature (Optional): The temperature to use for the model. Default is 0.0.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Max Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Endpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Questions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Transcript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Output:\n\nLeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "LeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "ul"
    },
    {
        "content": "LeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "AssemblyAI List Transcripts",
        "section": "AssemblyAI List Transcripts",
        "type": "h3"
    },
    {
        "content": "This component can be used as a standalone component to list all previously generated transcripts.",
        "section": "AssemblyAI List Transcripts",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nLimit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.\nFilter (Optional): Filter by transcript status.\nCreated On (Optional): Only get transcripts created on this date (YYYY-MM-DD).\nThrottled Only (Optional): Only get throttled transcripts, overrides the status filter\n\n\n\nOutput:\n\nTranscript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nLimit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.\nFilter (Optional): Filter by transcript status.\nCreated On (Optional): Only get transcripts created on this date (YYYY-MM-DD).\nThrottled Only (Optional): Only get throttled transcripts, overrides the status filter",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssemblyAI List Transcripts",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nLimit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.\nFilter (Optional): Filter by transcript status.\nCreated On (Optional): Only get transcripts created on this date (YYYY-MM-DD).\nThrottled Only (Optional): Only get throttled transcripts, overrides the status filter",
        "section": "AssemblyAI List Transcripts",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Limit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Filter (Optional): Filter by transcript status.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Created On (Optional): Only get transcripts created on this date (YYYY-MM-DD).",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Throttled Only (Optional): Only get throttled transcripts, overrides the status filter",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Output:\n\nTranscript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssemblyAI List Transcripts",
        "type": "p"
    },
    {
        "content": "Transcript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "ul"
    },
    {
        "content": "Transcript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Flow Process",
        "section": "Flow Process",
        "type": "h2"
    },
    {
        "content": "The user inputs an audio or video file.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The user can also input an LLM prompt. In this example, we want to generate a summary of the transcript.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow submits the audio file for transcription.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow checks the status of the transcript every few seconds until transcription is completed.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow parses the transcription result and outputs the transcribed text.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow also generates subtitles.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow applies the LLM prompt to generate a summary.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "As a standalone component, all transcripts can be listed.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "Run the Transcription and Speech AI Flow",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "h2"
    },
    {
        "content": "To run the Transcription and Speech AI Flow:",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "p"
    },
    {
        "content": "Open Langflow and create a new project.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Add the components listed above to your flow canvas, or download the (Download link) and Import the JSON file into Langflow.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Connect the components as shown in the flow diagram. Tip: Freeze the path of the Start Transcript component to only submit the file once.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Input the AssemblyAI API key in in all components that require the key (Start Transcript, Poll Transcript, Get Subtitles, LeMUR, List Transcripts).",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Select an audio or video file in the Start Transcript component.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Run the flow by clicking Play on the Parse Data component. Make sure that the specified template is {text}.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "{text}",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "code"
    },
    {
        "content": "To generate subtitles, click Play on the Get Subtitles component.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "To apply an LLM to your audio file, click Play on the LeMUR component. Note that you need an upgraded AssemblyAI account to use LeMUR.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "To list all transcripts, click Play on the List Transcript component.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Customization",
        "section": "Customization",
        "type": "h2"
    },
    {
        "content": "The flow can be customized by:",
        "section": "Customization",
        "type": "p"
    },
    {
        "content": "Modifying the parameters in the Start Transcript component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Modifying the subtitle format in the Get Subtitles component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Modifying the LLM prompt for input of the LeMUR component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Modifying the LLM parameters (e.g., temperature) in the LeMUR component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Troubleshooting",
        "section": "Troubleshooting",
        "type": "h2"
    },
    {
        "content": "If you encounter issues:",
        "section": "Troubleshooting",
        "type": "p"
    },
    {
        "content": "Ensure the API key is correctly set in all components that require the key.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "To use LeMUR, you need to upgrade your AssemblyAI account, since this is not included in the free account.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "Verify that all components are properly connected in the flow.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "Review the Langflow logs for any error messages.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "For more advanced usage, refer to the . If you need more help, you can reach out to the .",
        "section": "Troubleshooting",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Troubleshooting",
        "type": "p"
    },
    {
        "content": "LangSmith",
        "section": "LangSmith",
        "type": "h1"
    },
    {
        "content": "LangSmith is a full-lifecycle DevOps service from LangChain that provides monitoring and observability. To integrate with Langflow, just add your LangChain API key as a Langflow environment variable and you are good to go!",
        "section": "LangSmith",
        "type": "p"
    },
    {
        "content": "Step-by-step Configuration",
        "section": "Step-by-step Configuration",
        "type": "h2"
    },
    {
        "content": "Obtain your LangChain API key from",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Add the following keys to Langflow .env file:",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "LANGCHAIN_API_KEY=\"your-api-key\"LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "LANGCHAIN_API_KEY=\"your-api-key\"LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "or export the environment variables in your terminal:",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "export LANGCHAIN_API_KEY=\"your-api-key\"export LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "export LANGCHAIN_API_KEY=\"your-api-key\"export LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Restart Langflow using\u00a0langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Run any project and check the LangSmith dashboard for monitoring and observability.",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "LangWatch",
        "section": "LangWatch",
        "type": "h1"
    },
    {
        "content": "LangWatch is an all-in-one LLMOps platform for monitoring, observability, analytics, evaluations and alerting for getting user insights and improve your LLM workflows.",
        "section": "LangWatch",
        "type": "p"
    },
    {
        "content": "To integrate with Langflow, just add your LangWatch API as a Langflow environment variable and you are good to go!",
        "section": "LangWatch",
        "type": "p"
    },
    {
        "content": "Step-by-step Configuration",
        "section": "Step-by-step Configuration",
        "type": "h2"
    },
    {
        "content": "Obtain your LangWatch API key from",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Add the following key to Langflow .env file:",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "_10LANGWATCH_API_KEY=\"your-api-key\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "or export it in your terminal:",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "_10export LANGWATCH_API_KEY=\"your-api-key\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Restart Langflow using langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Run any project and check the LangWatch dashboard for monitoring and observability.",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "My Collection",
        "section": "My Collection",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "My Collection",
        "type": "p"
    },
    {
        "content": "My Collection\u00a0is a space in Langflow where users can manage, organize, and access their flows and components. Flows and components are displayed as individual cards that provide relevant information.",
        "section": "My Collection",
        "type": "p"
    },
    {
        "content": "Folders: Users can organize their projects into folders. Default folders include \"My Projects\" and the ability to create new folders. Hover over a folder to access options to download or delete it.\nSearch Bar\u00a0Enables users to quickly search through their flows and components.\nSelect All: This feature allows users to select all projects displayed on the page for batch actions like moving, deleting, or exporting.",
        "section": "My Collection",
        "type": "ul"
    },
    {
        "content": "Folders: Users can organize their projects into folders. Default folders include \"My Projects\" and the ability to create new folders. Hover over a folder to access options to download or delete it.",
        "section": "My Collection",
        "type": "li"
    },
    {
        "content": "Search Bar\u00a0Enables users to quickly search through their flows and components.",
        "section": "My Collection",
        "type": "li"
    },
    {
        "content": "Select All: This feature allows users to select all projects displayed on the page for batch actions like moving, deleting, or exporting.",
        "section": "My Collection",
        "type": "li"
    },
    {
        "content": "Click on a flow card to open it in Langflow Workspace or use the\u00a0Playground Button\u00a0for direct access to execute and interact with the flow\u2019s chatbot interface.",
        "section": "My Collection",
        "type": "p"
    },
    {
        "content": "Folders",
        "section": "Folders",
        "type": "h2"
    },
    {
        "content": "Folders can help you keep your projects organized in Langflow. They help you manage and categorize your work efficiently, making it easier to find and access the resources you need.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Multiple projects can be stored in\u00a0folders.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Folders allow you to categorize flows and components into manageable groups. This makes it easier to find and access specific projects quickly.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "My Projects\u00a0is a default folder where all new projects and components are initially stored unless specified otherwise. Users can create custom folders to better organize their work according to specific needs.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Hovering over a folder in Langflow provides options to either remove or download the entire folder, allowing you to keep an offline copy or migrate projects between environments",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Create new folders with the\u00a0New folder\u00a0button. One folder can store multiple projects (as the default My Projects folder does).",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "You can download folders of projects as a single JSON file, and upload files and flows to your folder.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "Click the\u00a0Trash\u00a0icon to delete a folder.",
        "section": "Folders",
        "type": "p"
    },
    {
        "content": "How to Create Folders",
        "section": "How to Create Folders",
        "type": "h3"
    },
    {
        "content": "Navigate to the Home Screen:\n\nGo to your Langflow Home Page (outside of projects).",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Navigate to the Home Screen:",
        "section": "How to Create Folders",
        "type": "p"
    },
    {
        "content": "Go to your Langflow Home Page (outside of projects).",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Go to your Langflow Home Page (outside of projects).",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Create a New Folder:\n\nClick on the \"New Folder\" button\n\n\n\nDouble-click the new folder created to rename your folder appropriately to reflect its contents.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Create a New Folder:",
        "section": "How to Create Folders",
        "type": "p"
    },
    {
        "content": "Click on the \"New Folder\" button",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Click on the \"New Folder\" button",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Double-click the new folder created to rename your folder appropriately to reflect its contents.",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Double-click the new folder created to rename your folder appropriately to reflect its contents.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Move Files:\n\nDrag and drop files into the corresponding folders and subfolders to keep everything organized.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Move Files:",
        "section": "How to Create Folders",
        "type": "p"
    },
    {
        "content": "Drag and drop files into the corresponding folders and subfolders to keep everything organized.",
        "section": "How to Create Folders",
        "type": "ul"
    },
    {
        "content": "Drag and drop files into the corresponding folders and subfolders to keep everything organized.",
        "section": "How to Create Folders",
        "type": "li"
    },
    {
        "content": "Best Practices for Organizing Folders",
        "section": "Best Practices for Organizing Folders",
        "type": "h3"
    },
    {
        "content": "Categorize by Project: Create a main folder for each project, then add projects for different aspects such as research, drafts, and final documents.\nUse Descriptive Names: Use clear and descriptive names for your folders to easily identify their contents at a glance.",
        "section": "Best Practices for Organizing Folders",
        "type": "ul"
    },
    {
        "content": "Categorize by Project: Create a main folder for each project, then add projects for different aspects such as research, drafts, and final documents.",
        "section": "Best Practices for Organizing Folders",
        "type": "li"
    },
    {
        "content": "Use Descriptive Names: Use clear and descriptive names for your folders to easily identify their contents at a glance.",
        "section": "Best Practices for Organizing Folders",
        "type": "li"
    },
    {
        "content": "Example Structure",
        "section": "Example Structure",
        "type": "h3"
    },
    {
        "content": "Here's an example of how you might organize folders and subfolders for a Langflow project:",
        "section": "Example Structure",
        "type": "p"
    },
    {
        "content": "_10Langflow_10\u251c\u2500\u2500 Research_10\u2502   \u251c\u2500\u2500 Articles Project_10\u2502   \u251c\u2500\u2500 Data Project_10\u2502   \u2514\u2500\u2500 Notes Project_10\u2514\u2500\u2500 Documents_10    \u251c\u2500\u2500 RAG Project_10    \u2514\u2500\u2500 Advanced RAG Project",
        "section": "Example Structure",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Example Structure",
        "type": "p"
    },
    {
        "content": "Custom Components",
        "section": "Custom Components",
        "type": "h1"
    },
    {
        "content": "Custom components are created within Langflow and extend the platform's functionality with custom, resusable Python code.",
        "section": "Custom Components",
        "type": "p"
    },
    {
        "content": "Since Langflow operates with Python behind the scenes, you can implement any Python function within a Custom Component. This means you can leverage the power of libraries such as Pandas, Scikit-learn, Numpy, and thousands of other packages to create components that handle data processing in unlimited ways. You can use any type as long as the type is properly annotated in the output methods (e.g.,\u00a0> list[int]).",
        "section": "Custom Components",
        "type": "p"
    },
    {
        "content": "> list[int]",
        "section": "Custom Components",
        "type": "code"
    },
    {
        "content": "Custom Components create reusable and configurable components to enhance the capabilities of Langflow, making it a powerful tool for developing complex processing between user and AI messages.",
        "section": "Custom Components",
        "type": "p"
    },
    {
        "content": "How to Create Custom Components",
        "section": "How to Create Custom Components",
        "type": "h2"
    },
    {
        "content": "Creating custom components in Langflow involves creating a Python class that defines the component's functionality, inputs, and outputs.\nThe default code provides a working structure for your custom component.",
        "section": "How to Create Custom Components",
        "type": "p"
    },
    {
        "content": "_25# from langflow.field_typing import Data_25from langflow.custom import Component_25from langflow.io import MessageTextInput, Output_25from langflow.schema import Data_25_25_25class CustomComponent(Component):_25    display_name = \"Custom Component\"_25    description = \"Use as a template to create your own component.\"_25    documentation: str = \"http://docs.langflow.org/components/custom\"_25    icon = \"custom_components\"_25    name = \"CustomComponent\"_25_25    inputs = [_25        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),_25    ]_25_25    outputs = [_25        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),_25    ]_25_25    def build_output(self) -> Data:_25        data = Data(value=self.input_value)_25        self.status = data_25        return data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "You can create your class in your favorite text editor outside of Langflow and paste it in later, or just follow along in the code pane.",
        "section": "How to Create Custom Components",
        "type": "p"
    },
    {
        "content": "In Langflow, from under Helpers, drag a Custom Component into the workspace.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Open the component's code pane.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Import dependencies.\nYour custom component inherits from the langflow Component class so you need to include it.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Component",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10from langflow.custom import Component_10from langflow.io import MessageTextInput, Output_10from langflow.schema import Data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Define the Class: Start by defining a Python class that inherits from\u00a0Component. This class will encapsulate the functionality of your custom component.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Component",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10class CustomComponent(Component):_10    display_name = \"Custom Component\"_10    description = \"Use as a template to create your own component.\"_10    documentation: str = \"http://docs.langflow.org/components/custom\"_10    icon = \"custom_components\"_10    name = \"CustomComponent\"",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Specify Inputs and Outputs: Use Langflow's input and output classes to define the inputs and outputs of your component. They should be declared as class attributes.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "_10    inputs = [_10        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),_10    ]_10_10    outputs = [_10        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),_10    ]",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Implement Output Methods: Implement\u00a0methods for each output, which contains the logic of your component. These methods can access input values using\u00a0self.<input_name> , return processed values and define what to be displayed in the component with the\u00a0self.status\u00a0attribute.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "self.<input_name>",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "self.status",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10    def build_output(self) -> Data:_10        data = Data(value=self.input_value)_10        self.status = data_10        return data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Use Proper Annotations: Ensure that output methods are properly annotated with their types. Langflow uses these annotations to validate and handle data correctly. For example, this method is annotated to output Data.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Data",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "_10    def build_output(self) -> Data:",
        "section": "How to Create Custom Components",
        "type": "code"
    },
    {
        "content": "Click Check & Save to confirm your component works.\nYou now have an operational custom component.",
        "section": "How to Create Custom Components",
        "type": "li"
    },
    {
        "content": "Add inputs and modify output methods",
        "section": "Add inputs and modify output methods",
        "type": "h2"
    },
    {
        "content": "This code defines a custom component that accepts 5 inputs and outputs a Message.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "Copy and paste it into the Custom Component code pane and click Check & Save.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "_55from langflow.custom import Component_55from langflow.inputs import StrInput, MultilineInput, SecretStrInput, IntInput, DropdownInput_55from langflow.template import Output, Input_55from langflow.schema.message import Message_55_55class MyCustomComponent(Component):_55    display_name = \"My Custom Component\"_55    description = \"An example of a custom component with various input types.\"_55_55    inputs = [_55        StrInput(_55            name=\"username\",_55            display_name=\"Username\",_55            info=\"Enter your username.\"_55        ),_55        SecretStrInput(_55            name=\"password\",_55            display_name=\"Password\",_55            info=\"Enter your password.\"_55        ),_55        MessageTextInput(_55            name=\"special_message\",_55            display_name=\"special_message\",_55            info=\"Enter a special message.\",_55        ),_55        IntInput(_55            name=\"age\",_55            display_name=\"Age\",_55            info=\"Enter your age.\"_55        ),_55        DropdownInput(_55            name=\"gender\",_55            display_name=\"Gender\",_55            options=[\"Male\", \"Female\", \"Other\"],_55            info=\"Select your gender.\"_55        )_55    ]_55_55    outputs = [_55        Output(display_name=\"Result\", name=\"result\", method=\"process_inputs\"),_55    ]_55_55    def process_inputs(self) -> Message:_55        \"\"\"_55        Process the user inputs and return a Message object._55_55        Returns:_55            Message: A Message object containing the processed information._55        \"\"\"_55        try:_55            processed_text = f\"User {self.username} (Age: {self.age}, Gender: {self.gender}) \" \\_55                             f\"sent the following special message: {self.special_message}\"_55            return Message(text=processed_text)_55        except AttributeError as e:_55            return Message(text=f\"Error processing inputs: {str(e)}\")",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Since the component outputs a Message, you can wire it into a chat and pass messages to yourself.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Your Custom Component accepts the Chat Input message through MessageTextInput, fills in the variables with the process_inputs method, and finally passes the message User Username (Age: 49, Gender: Male) sent the following special message: Hello! to Chat Output.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "MessageTextInput",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "process_inputs",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "User Username (Age: 49, Gender: Male) sent the following special message: Hello!",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "By defining inputs this way, Langflow can automatically handle the validation and display of these fields in the user interface, making it easier to create robust and user-friendly custom components.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "All of the types detailed above derive from a general class that can also be accessed through the generic\u00a0Input\u00a0class.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "Input",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Use MessageInput to get the entire Message object instead of just the text.",
        "section": "Add inputs and modify output methods",
        "type": "p"
    },
    {
        "content": "MessageInput",
        "section": "Add inputs and modify output methods",
        "type": "code"
    },
    {
        "content": "Input Types",
        "section": "Input Types",
        "type": "h2"
    },
    {
        "content": "Langflow provides several higher-level input types to simplify the creation of custom components. These input types standardize how inputs are defined, validated, and used. Here\u2019s a guide on how to use these inputs and their primary purposes:",
        "section": "Input Types",
        "type": "p"
    },
    {
        "content": "HandleInput",
        "section": "HandleInput",
        "type": "h3"
    },
    {
        "content": "Represents an input that has a handle to a specific type (e.g.,\u00a0BaseLanguageModel,\u00a0BaseRetriever, etc.).",
        "section": "HandleInput",
        "type": "p"
    },
    {
        "content": "BaseLanguageModel",
        "section": "HandleInput",
        "type": "code"
    },
    {
        "content": "BaseRetriever",
        "section": "HandleInput",
        "type": "code"
    },
    {
        "content": "Usage:\u00a0Useful for connecting to specific component types in a flow.",
        "section": "HandleInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Useful for connecting to specific component types in a flow.",
        "section": "HandleInput",
        "type": "li"
    },
    {
        "content": "DataInput",
        "section": "DataInput",
        "type": "h3"
    },
    {
        "content": "Represents an input that receives a\u00a0Data\u00a0object.",
        "section": "DataInput",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "DataInput",
        "type": "code"
    },
    {
        "content": "Usage:\u00a0Ideal for components that process or manipulate data objects.\nInput Types:\u00a0[\"Data\"]",
        "section": "DataInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Ideal for components that process or manipulate data objects.",
        "section": "DataInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Data\"]",
        "section": "DataInput",
        "type": "li"
    },
    {
        "content": "[\"Data\"]",
        "section": "DataInput",
        "type": "code"
    },
    {
        "content": "StrInput",
        "section": "StrInput",
        "type": "h3"
    },
    {
        "content": "Represents a standard string input field.",
        "section": "StrInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for any text input where the user needs to provide a string.\nInput Types:\u00a0[\"Text\"]",
        "section": "StrInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for any text input where the user needs to provide a string.",
        "section": "StrInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Text\"]",
        "section": "StrInput",
        "type": "li"
    },
    {
        "content": "[\"Text\"]",
        "section": "StrInput",
        "type": "code"
    },
    {
        "content": "MessageInput",
        "section": "MessageInput",
        "type": "h3"
    },
    {
        "content": "Represents an input field specifically for\u00a0Message\u00a0objects.",
        "section": "MessageInput",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "MessageInput",
        "type": "code"
    },
    {
        "content": "Usage:\u00a0Used in components that handle or process messages.\nInput Types:\u00a0[\"Message\"]",
        "section": "MessageInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used in components that handle or process messages.",
        "section": "MessageInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Message\"]",
        "section": "MessageInput",
        "type": "li"
    },
    {
        "content": "[\"Message\"]",
        "section": "MessageInput",
        "type": "code"
    },
    {
        "content": "MessageTextInput",
        "section": "MessageTextInput",
        "type": "h3"
    },
    {
        "content": "Represents a text input for messages.",
        "section": "MessageTextInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Suitable for components that need to extract text from message objects.\nInput Types:\u00a0[\"Message\"]",
        "section": "MessageTextInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Suitable for components that need to extract text from message objects.",
        "section": "MessageTextInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Message\"]",
        "section": "MessageTextInput",
        "type": "li"
    },
    {
        "content": "[\"Message\"]",
        "section": "MessageTextInput",
        "type": "code"
    },
    {
        "content": "MultilineInput",
        "section": "MultilineInput",
        "type": "h3"
    },
    {
        "content": "Represents a text field that supports multiple lines.",
        "section": "MultilineInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Ideal for longer text inputs where the user might need to write extended text.\nInput Types:\u00a0[\"Text\"]\nAttributes:\u00a0multiline=True",
        "section": "MultilineInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Ideal for longer text inputs where the user might need to write extended text.",
        "section": "MultilineInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Text\"]",
        "section": "MultilineInput",
        "type": "li"
    },
    {
        "content": "[\"Text\"]",
        "section": "MultilineInput",
        "type": "code"
    },
    {
        "content": "Attributes:\u00a0multiline=True",
        "section": "MultilineInput",
        "type": "li"
    },
    {
        "content": "multiline=True",
        "section": "MultilineInput",
        "type": "code"
    },
    {
        "content": "SecretStrInput",
        "section": "SecretStrInput",
        "type": "h3"
    },
    {
        "content": "Represents a password input field.",
        "section": "SecretStrInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for sensitive text inputs where the input should be hidden (e.g., passwords, API keys).\nAttributes:\u00a0password=True\nInput Types:\u00a0Does not accept input types, meaning it has no input handles for previous nodes/components to connect to it.",
        "section": "SecretStrInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for sensitive text inputs where the input should be hidden (e.g., passwords, API keys).",
        "section": "SecretStrInput",
        "type": "li"
    },
    {
        "content": "Attributes:\u00a0password=True",
        "section": "SecretStrInput",
        "type": "li"
    },
    {
        "content": "password=True",
        "section": "SecretStrInput",
        "type": "code"
    },
    {
        "content": "Input Types:\u00a0Does not accept input types, meaning it has no input handles for previous nodes/components to connect to it.",
        "section": "SecretStrInput",
        "type": "li"
    },
    {
        "content": "IntInput",
        "section": "IntInput",
        "type": "h3"
    },
    {
        "content": "Represents an integer input field.",
        "section": "IntInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be an integer.\nInput Types:\u00a0[\"Integer\"]",
        "section": "IntInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be an integer.",
        "section": "IntInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Integer\"]",
        "section": "IntInput",
        "type": "li"
    },
    {
        "content": "[\"Integer\"]",
        "section": "IntInput",
        "type": "code"
    },
    {
        "content": "FloatInput",
        "section": "FloatInput",
        "type": "h3"
    },
    {
        "content": "Represents a float input field.",
        "section": "FloatInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be a floating-point number.\nInput Types:\u00a0[\"Float\"]",
        "section": "FloatInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for numeric inputs where the value should be a floating-point number.",
        "section": "FloatInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Float\"]",
        "section": "FloatInput",
        "type": "li"
    },
    {
        "content": "[\"Float\"]",
        "section": "FloatInput",
        "type": "code"
    },
    {
        "content": "BoolInput",
        "section": "BoolInput",
        "type": "h3"
    },
    {
        "content": "Represents a boolean input field.",
        "section": "BoolInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for true/false or yes/no type inputs.\nInput Types:\u00a0[\"Boolean\"]",
        "section": "BoolInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for true/false or yes/no type inputs.",
        "section": "BoolInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Boolean\"]",
        "section": "BoolInput",
        "type": "li"
    },
    {
        "content": "[\"Boolean\"]",
        "section": "BoolInput",
        "type": "code"
    },
    {
        "content": "NestedDictInput",
        "section": "NestedDictInput",
        "type": "h3"
    },
    {
        "content": "Represents an input field for nested dictionaries.",
        "section": "NestedDictInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used for more complex data structures where the input needs to be a dictionary.\nInput Types:\u00a0[\"NestedDict\"]",
        "section": "NestedDictInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used for more complex data structures where the input needs to be a dictionary.",
        "section": "NestedDictInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"NestedDict\"]",
        "section": "NestedDictInput",
        "type": "li"
    },
    {
        "content": "[\"NestedDict\"]",
        "section": "NestedDictInput",
        "type": "code"
    },
    {
        "content": "DictInput",
        "section": "DictInput",
        "type": "h3"
    },
    {
        "content": "Represents an input field for dictionaries.",
        "section": "DictInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Suitable for inputs that require a dictionary format.\nInput Types:\u00a0[\"Dict\"]",
        "section": "DictInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Suitable for inputs that require a dictionary format.",
        "section": "DictInput",
        "type": "li"
    },
    {
        "content": "Input Types:\u00a0[\"Dict\"]",
        "section": "DictInput",
        "type": "li"
    },
    {
        "content": "[\"Dict\"]",
        "section": "DictInput",
        "type": "code"
    },
    {
        "content": "DropdownInput",
        "section": "DropdownInput",
        "type": "h3"
    },
    {
        "content": "Represents a dropdown input field.",
        "section": "DropdownInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used where the user needs to select from a predefined list of options.\nAttributes:\u00a0options\u00a0to define the list of selectable options.\nInput Types:\u00a0[\"Text\"]",
        "section": "DropdownInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used where the user needs to select from a predefined list of options.",
        "section": "DropdownInput",
        "type": "li"
    },
    {
        "content": "Attributes:\u00a0options\u00a0to define the list of selectable options.",
        "section": "DropdownInput",
        "type": "li"
    },
    {
        "content": "options",
        "section": "DropdownInput",
        "type": "code"
    },
    {
        "content": "Input Types:\u00a0[\"Text\"]",
        "section": "DropdownInput",
        "type": "li"
    },
    {
        "content": "[\"Text\"]",
        "section": "DropdownInput",
        "type": "code"
    },
    {
        "content": "FileInput",
        "section": "FileInput",
        "type": "h3"
    },
    {
        "content": "Represents a file input field.",
        "section": "FileInput",
        "type": "p"
    },
    {
        "content": "Usage:\u00a0Used to upload files.\nAttributes:\u00a0file_types\u00a0to specify the types of files that can be uploaded.\nInput Types:\u00a0[\"File\"]",
        "section": "FileInput",
        "type": "ul"
    },
    {
        "content": "Usage:\u00a0Used to upload files.",
        "section": "FileInput",
        "type": "li"
    },
    {
        "content": "Attributes:\u00a0file_types\u00a0to specify the types of files that can be uploaded.",
        "section": "FileInput",
        "type": "li"
    },
    {
        "content": "file_types",
        "section": "FileInput",
        "type": "code"
    },
    {
        "content": "Input Types:\u00a0[\"File\"]",
        "section": "FileInput",
        "type": "li"
    },
    {
        "content": "[\"File\"]",
        "section": "FileInput",
        "type": "code"
    },
    {
        "content": "Generic Input",
        "section": "Generic Input",
        "type": "h3"
    },
    {
        "content": "Langflow offers native input types, but you can use any type as long as they are properly annotated in the output methods (e.g.,\u00a0-> list[int]).",
        "section": "Generic Input",
        "type": "p"
    },
    {
        "content": "-> list[int]",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "The\u00a0Input\u00a0class is highly customizable, allowing you to specify a wide range of attributes for each input field. It has several attributes that can be customized:",
        "section": "Generic Input",
        "type": "p"
    },
    {
        "content": "Input",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "field_type: Specifies the type of field (e.g.,\u00a0str,\u00a0int). Default is\u00a0str.\nrequired: Boolean indicating if the field is required. Default is\u00a0False.\nplaceholder: Placeholder text for the input field. Default is an empty string.\nis_list: Boolean indicating if the field should accept a list of values. Default is\u00a0False.\nshow: Boolean indicating if the field should be shown. Default is\u00a0True.\nmultiline: Boolean indicating if the field should allow multi-line input. Default is\u00a0False.\nvalue: Default value for the input field. Default is\u00a0None.\nfile_types: List of accepted file types (for file inputs). Default is an empty list.\nfile_path: File path if the field is a file input. Default is\u00a0None.\npassword: Boolean indicating if the field is a password. Default is\u00a0False.\noptions: List of options for the field (for dropdowns). Default is\u00a0None.\nname: Name of the input field. Default is\u00a0None.\ndisplay_name: Display name for the input field. Default is\u00a0None.\nadvanced: Boolean indicating if the field is an advanced parameter. Default is\u00a0False.\ninput_types: List of accepted input types. Default is\u00a0None.\ndynamic: Boolean indicating if the field is dynamic. Default is\u00a0False.\ninfo: Additional information or tooltip for the input field. Default is an empty string.\nreal_time_refresh: Boolean indicating if the field should refresh in real-time. Default is\u00a0None.\nrefresh_button: Boolean indicating if the field should have a refresh button. Default is\u00a0None.\nrefresh_button_text: Text for the refresh button. Default is\u00a0None.\nrange_spec: Range specification for numeric fields. Default is\u00a0None.\nload_from_db: Boolean indicating if the field should load from the database. Default is\u00a0False.\ntitle_case: Boolean indicating if the display name should be in title case. Default is\u00a0True.",
        "section": "Generic Input",
        "type": "ul"
    },
    {
        "content": "field_type: Specifies the type of field (e.g.,\u00a0str,\u00a0int). Default is\u00a0str.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "field_type",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "str",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "int",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "str",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "required: Boolean indicating if the field is required. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "required",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "placeholder: Placeholder text for the input field. Default is an empty string.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "placeholder",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "is_list: Boolean indicating if the field should accept a list of values. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "is_list",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "show: Boolean indicating if the field should be shown. Default is\u00a0True.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "show",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "multiline: Boolean indicating if the field should allow multi-line input. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "multiline",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "value: Default value for the input field. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "value",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "file_types: List of accepted file types (for file inputs). Default is an empty list.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "file_types",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "file_path: File path if the field is a file input. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "file_path",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "password: Boolean indicating if the field is a password. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "password",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "options: List of options for the field (for dropdowns). Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "options",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "name: Name of the input field. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "name",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "display_name: Display name for the input field. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "display_name",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "advanced: Boolean indicating if the field is an advanced parameter. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "advanced",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "input_types: List of accepted input types. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "input_types",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "dynamic: Boolean indicating if the field is dynamic. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "dynamic",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "info: Additional information or tooltip for the input field. Default is an empty string.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "info",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "real_time_refresh: Boolean indicating if the field should refresh in real-time. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "real_time_refresh",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "refresh_button: Boolean indicating if the field should have a refresh button. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "refresh_button",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "refresh_button_text: Text for the refresh button. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "refresh_button_text",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "range_spec: Range specification for numeric fields. Default is\u00a0None.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "range_spec",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "None",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "load_from_db: Boolean indicating if the field should load from the database. Default is\u00a0False.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "load_from_db",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "title_case: Boolean indicating if the display name should be in title case. Default is\u00a0True.",
        "section": "Generic Input",
        "type": "li"
    },
    {
        "content": "title_case",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Generic Input",
        "type": "code"
    },
    {
        "content": "Create a Custom Component with Generic Input",
        "section": "Create a Custom Component with Generic Input",
        "type": "h2"
    },
    {
        "content": "Here is an example of how to define inputs for a component using the\u00a0Input\u00a0class.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "Input",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "Copy and paste it into the Custom Component code pane and click Check & Save.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "_76from langflow.template import Input, Output_76from langflow.custom import Component_76from langflow.field_typing import Text_76from langflow.schema.message import Message_76from typing import Dict, Any_76_76class TextAnalyzerComponent(Component):_76    display_name = \"Text Analyzer\"_76    description = \"Analyzes input text and provides basic statistics.\"_76_76    inputs = [_76        Input(_76            name=\"input_text\",_76            display_name=\"Input Text\",_76            field_type=\"Message\",_76            required=True,_76            placeholder=\"Enter text to analyze\",_76            multiline=True,_76            info=\"The text you want to analyze.\",_76            input_types=[\"Text\"]_76        ),_76        Input(_76            name=\"include_word_count\",_76            display_name=\"Include Word Count\",_76            field_type=\"bool\",_76            required=False,_76            info=\"Whether to include word count in the analysis.\",_76        ),_76        Input(_76            name=\"perform_sentiment_analysis\",_76            display_name=\"Perform Sentiment Analysis\",_76            field_type=\"bool\",_76            required=False,_76            info=\"Whether to perform basic sentiment analysis.\",_76        ),_76    ]_76_76    outputs = [_76        Output(display_name=\"Analysis Results\", name=\"results\", method=\"analyze_text\"),_76    ]_76_76    def analyze_text(self) -> Message:_76        # Extract text from the Message object_76        if isinstance(self.input_text, Message):_76            text = self.input_text.text_76        else:_76            text = str(self.input_text)_76_76        results = {_76            \"character_count\": len(text),_76            \"sentence_count\": text.count('.') + text.count('!') + text.count('?')_76        }_76_76        if self.include_word_count:_76            results[\"word_count\"] = len(text.split())_76_76        if self.perform_sentiment_analysis:_76            # Basic sentiment analysis_76            text_lower = text.lower()_76            if \"happy\" in text_lower or \"good\" in text_lower:_76                sentiment = \"positive\"_76            elif \"sad\" in text_lower or \"bad\" in text_lower:_76                sentiment = \"negative\"_76            else:_76                sentiment = \"neutral\"_76_76            results[\"sentiment\"] = sentiment_76_76        # Convert the results dictionary to a formatted string_76        formatted_results = \"\\n\".join([f\"{key}: {value}\" for key, value in results.items()])_76_76        # Return a Message object_76        return Message(text=formatted_results)_76_76# Define how to use the inputs and outputs_76component = TextAnalyzerComponent()",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "In this custom component:",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "The input_text input is a required multi-line text field that accepts a Message object or a string. It's used to provide the text for analysis.\n\n\nThe include_word_count input is an optional boolean field. When set to True, it adds a word count to the analysis results.\n\n\nThe perform_sentiment_analysis input is an optional boolean field. When set to True, it triggers a basic sentiment analysis of the input text.",
        "section": "Create a Custom Component with Generic Input",
        "type": "ul"
    },
    {
        "content": "The input_text input is a required multi-line text field that accepts a Message object or a string. It's used to provide the text for analysis.",
        "section": "Create a Custom Component with Generic Input",
        "type": "li"
    },
    {
        "content": "The input_text input is a required multi-line text field that accepts a Message object or a string. It's used to provide the text for analysis.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "input_text",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "The include_word_count input is an optional boolean field. When set to True, it adds a word count to the analysis results.",
        "section": "Create a Custom Component with Generic Input",
        "type": "li"
    },
    {
        "content": "The include_word_count input is an optional boolean field. When set to True, it adds a word count to the analysis results.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "include_word_count",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "The perform_sentiment_analysis input is an optional boolean field. When set to True, it triggers a basic sentiment analysis of the input text.",
        "section": "Create a Custom Component with Generic Input",
        "type": "li"
    },
    {
        "content": "The perform_sentiment_analysis input is an optional boolean field. When set to True, it triggers a basic sentiment analysis of the input text.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "perform_sentiment_analysis",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "The component performs basic text analysis, including character count and sentence count (based on punctuation marks). If word count is enabled, it splits the text and counts the words. If sentiment analysis is enabled, it performs a simple keyword-based sentiment classification (positive, negative, or neutral).",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "Since the component inputs and outputs a Message, you can wire the component into a chat and see how the basic custom component logic interacts with your input.",
        "section": "Create a Custom Component with Generic Input",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "Create a Custom Component with Generic Input",
        "type": "code"
    },
    {
        "content": "Create a Custom Component with Multiple Outputs",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "h2"
    },
    {
        "content": "In Langflow, custom components can have multiple outputs. Each output can be associated with a specific method in the component, allowing you to define distinct behaviors for each output path. This feature is particularly useful when you want to route data based on certain conditions or process it in multiple ways.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "Definition of Outputs: Each output is defined in the\u00a0outputs\u00a0list of the component. Each output is associated with a display name, an internal name, and a method that gets called to generate the output.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "outputs",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "Output Methods: The methods associated with outputs are responsible for generating the data for that particular output. These methods are called when the component is executed, and each method can independently produce its result.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "This example component has two outputs:",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "process_data: Processes the input text (e.g., converts it to uppercase) and returns it.\nget_processing_function: Returns the\u00a0process_data\u00a0method itself to be reused in composition.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "ul"
    },
    {
        "content": "process_data: Processes the input text (e.g., converts it to uppercase) and returns it.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "process_data",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "get_processing_function: Returns the\u00a0process_data\u00a0method itself to be reused in composition.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "li"
    },
    {
        "content": "get_processing_function",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "process_data",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "_33from typing import Callable_33from langflow.custom import Component_33from langflow.inputs import StrInput_33from langflow.template import Output_33from langflow.field_typing import Text_33_33class DualOutputComponent(Component):_33    display_name = \"Dual Output\"_33    description = \"Processes input text and returns both the result and the processing function.\"_33    icon = \"double-arrow\"_33_33    inputs = [_33        StrInput(_33            name=\"input_text\",_33            display_name=\"Input Text\",_33            info=\"The text input to be processed.\",_33        ),_33    ]_33_33    outputs = [_33        Output(display_name=\"Processed Data\", name=\"processed_data\", method=\"process_data\"),_33        Output(display_name=\"Processing Function\", name=\"processing_function\", method=\"get_processing_function\"),_33    ]_33_33    def process_data(self) -> Text:_33        # Process the input text (e.g., convert to uppercase)_33        processed = self.input_text.upper()_33        self.status = processed_33        return processed_33_33    def get_processing_function(self) -> Callable[[], Text]:_33        # Return the processing function itself_33        return self.process_data",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "This example shows how to define multiple outputs in a custom component. The first output returns the processed data, while the second output returns the processing function itself.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "The\u00a0processing_function\u00a0output can be used in scenarios where the function itself is needed for further processing or dynamic flow control. Notice how both outputs are properly annotated with their respective types, ensuring clarity and type safety.",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "p"
    },
    {
        "content": "processing_function",
        "section": "Create a Custom Component with Multiple Outputs",
        "type": "code"
    },
    {
        "content": "Special Operations",
        "section": "Special Operations",
        "type": "h2"
    },
    {
        "content": "Advanced methods and attributes offer additional control and functionality. Understanding how to leverage these can enhance your custom components' capabilities.",
        "section": "Special Operations",
        "type": "p"
    },
    {
        "content": "self.inputs: Access all defined inputs. Useful when an output method needs to interact with multiple inputs.\nself.outputs: Access all defined outputs. This is particularly useful if an output function needs to trigger another output function.\nself.status: Use this to update the component's status or intermediate results. It helps track the component's internal state or store temporary data.\nself.graph.flow_id: Retrieve the flow ID, useful for maintaining context or debugging.\nself.stop(\"output_name\"): Use this method within an output function to prevent data from being sent through other components. This method stops next component execution and is particularly useful for specific operations where a component should stop from running based on specific conditions.",
        "section": "Special Operations",
        "type": "ul"
    },
    {
        "content": "self.inputs: Access all defined inputs. Useful when an output method needs to interact with multiple inputs.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.inputs",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.outputs: Access all defined outputs. This is particularly useful if an output function needs to trigger another output function.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.outputs",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.status: Use this to update the component's status or intermediate results. It helps track the component's internal state or store temporary data.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.status",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.graph.flow_id: Retrieve the flow ID, useful for maintaining context or debugging.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.graph.flow_id",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "self.stop(\"output_name\"): Use this method within an output function to prevent data from being sent through other components. This method stops next component execution and is particularly useful for specific operations where a component should stop from running based on specific conditions.",
        "section": "Special Operations",
        "type": "li"
    },
    {
        "content": "self.stop(\"output_name\")",
        "section": "Special Operations",
        "type": "code"
    },
    {
        "content": "Contribute Custom Components to Langflow",
        "section": "Contribute Custom Components to Langflow",
        "type": "h2"
    },
    {
        "content": "See  to contribute your custom component to Langflow.",
        "section": "Contribute Custom Components to Langflow",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Contribute Custom Components to Langflow",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Data",
        "type": "h1"
    },
    {
        "content": "API Request",
        "section": "API Request",
        "type": "h2"
    },
    {
        "content": "This component sends HTTP requests to the specified URLs.",
        "section": "API Request",
        "type": "p"
    },
    {
        "content": "Use this component to interact with external APIs or services and retrieve data. Ensure that the URLs are valid and that you configure the method, headers, body, and timeout correctly.",
        "section": "API Request",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Directory",
        "section": "Directory",
        "type": "h2"
    },
    {
        "content": "This component recursively loads files from a directory, with options for file types, depth, and concurrency.",
        "section": "Directory",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "File",
        "section": "File",
        "type": "h2"
    },
    {
        "content": "The FileComponent is a class that loads and parses text files of various supported formats, converting the content into a Data object. It supports multiple file types and provides an option for silent error handling.",
        "section": "File",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "URL",
        "section": "URL",
        "type": "h2"
    },
    {
        "content": "The URLComponent is a class that fetches content from one or more URLs, processes the content, and returns it as a list of Data objects. It ensures that the provided URLs are valid and uses WebBaseLoader to fetch the content.",
        "section": "URL",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Gmail Loader",
        "section": "Gmail Loader",
        "type": "h2"
    },
    {
        "content": "This component loads emails from Gmail using provided credentials and filters.",
        "section": "Gmail Loader",
        "type": "p"
    },
    {
        "content": "For more on creating a service account JSON, see .",
        "section": "Gmail Loader",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Google Drive Loader",
        "section": "Google Drive Loader",
        "type": "h2"
    },
    {
        "content": "This component loads documents from Google Drive using provided credentials and a single document ID.",
        "section": "Google Drive Loader",
        "type": "p"
    },
    {
        "content": "For more on creating a service account JSON, see .",
        "section": "Google Drive Loader",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Google Drive Search",
        "section": "Google Drive Search",
        "type": "h2"
    },
    {
        "content": "This component searches Google Drive files using provided credentials and query parameters.",
        "section": "Google Drive Search",
        "type": "p"
    },
    {
        "content": "For more on creating a service account JSON, see .",
        "section": "Google Drive Search",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Webhook Input",
        "section": "Webhook Input",
        "type": "h2"
    },
    {
        "content": "This component defines a webhook input for the flow. The flow can be triggered by an external HTTP POST request (webhook) sending a JSON payload.",
        "section": "Webhook Input",
        "type": "p"
    },
    {
        "content": "If the input is not valid JSON, the component will wrap it in a \"payload\" field. The component's status will reflect any errors or the processed data.",
        "section": "Webhook Input",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Embedding Models",
        "section": "Embedding Models",
        "type": "h1"
    },
    {
        "content": "Embeddings models are used to convert text into numerical vectors. These vectors can be used for various tasks such as similarity search, clustering, and classification.",
        "section": "Embedding Models",
        "type": "p"
    },
    {
        "content": "AI/ML",
        "section": "AI/ML",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using the .",
        "section": "AI/ML",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Amazon Bedrock Embeddings",
        "section": "Amazon Bedrock Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is used to load embedding models from .",
        "section": "Amazon Bedrock Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "amazon.titan-embed-text-v1",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "modelId",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "list-foundation-models",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "us-west-2",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "AWS_DEFAULT_REGION",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Astra DB vectorize",
        "section": "Astra DB vectorize",
        "type": "h2"
    },
    {
        "content": "Connect this component to the Embeddings port of the  to generate embeddings.",
        "section": "Astra DB vectorize",
        "type": "p"
    },
    {
        "content": "This component requires that your Astra DB database has a collection that uses a vectorize embedding provider integration.\nFor more information and instructions, see .",
        "section": "Astra DB vectorize",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "authentication",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Azure OpenAI Embeddings",
        "section": "Azure OpenAI Embeddings",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using Azure OpenAI models.",
        "section": "Azure OpenAI Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "text-embedding-3-small",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "https://example-resource.azure.openai.com/",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Cohere Embeddings",
        "section": "Cohere Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is used to load embedding models from .",
        "section": "Cohere Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "embed-english-v2.0",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Embedding similarity",
        "section": "Embedding similarity",
        "type": "h2"
    },
    {
        "content": "This component computes selected forms of similarity between two embedding vectors.",
        "section": "Embedding similarity",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Google generative AI embeddings",
        "section": "Google generative AI embeddings",
        "type": "h2"
    },
    {
        "content": "This component connects to Google's generative AI embedding service using the GoogleGenerativeAIEmbeddings class from the langchain-google-genai package.",
        "section": "Google generative AI embeddings",
        "type": "p"
    },
    {
        "content": "langchain-google-genai",
        "section": "Google generative AI embeddings",
        "type": "code"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hugging Face Embeddings",
        "section": "Hugging Face Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is deprecated as of Langflow version 1.0.18.\nInstead, use the .",
        "section": "Hugging Face Embeddings",
        "type": "p"
    },
    {
        "content": "This component loads embedding models from HuggingFace.",
        "section": "Hugging Face Embeddings",
        "type": "p"
    },
    {
        "content": "Use this component to generate embeddings using locally downloaded Hugging Face models. Ensure you have sufficient computational resources to run the models.",
        "section": "Hugging Face Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hugging Face embeddings Inference API",
        "section": "Hugging Face embeddings Inference API",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using Hugging Face Inference API models.",
        "section": "Hugging Face embeddings Inference API",
        "type": "p"
    },
    {
        "content": "Use this component to create embeddings with Hugging Face's hosted models. Ensure you have a valid Hugging Face API key.",
        "section": "Hugging Face embeddings Inference API",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "MistralAI",
        "section": "MistralAI",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using MistralAI models.",
        "section": "MistralAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "NVIDIA",
        "section": "NVIDIA",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using NVIDIA models.",
        "section": "NVIDIA",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Ollama Embeddings",
        "section": "Ollama Embeddings",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings using Ollama models.",
        "section": "Ollama Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "llama2",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "http://localhost:11434",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "OpenAI Embeddings",
        "section": "OpenAI Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is used to load embedding models from .",
        "section": "OpenAI Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "[]",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "[\"all\"]",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "1000",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "text-embedding-3-small",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "8191",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "6",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "text-embedding-3-small",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Text embedder",
        "section": "Text embedder",
        "type": "h2"
    },
    {
        "content": "This component generates embeddings for a given message using a specified embedding model.",
        "section": "Text embedder",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "VertexAI Embeddings",
        "section": "VertexAI Embeddings",
        "type": "h2"
    },
    {
        "content": "This component is a wrapper around  .",
        "section": "VertexAI Embeddings",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "us-central1",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "128",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "text-bison",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "5",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "0",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "k",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "40",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "p",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "0.95",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "model_name",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Helpers",
        "section": "Helpers",
        "type": "h1"
    },
    {
        "content": "Helper components provide utility functions to help manage data, tasks, and other components in your flow.",
        "section": "Helpers",
        "type": "p"
    },
    {
        "content": "Chat Memory",
        "section": "Chat Memory",
        "type": "h2"
    },
    {
        "content": "This component retrieves and manages chat messages from Langflow tables or an external memory.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "{text}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "{sender}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Combine Text",
        "section": "Combine Text",
        "type": "h2"
    },
    {
        "content": "This component concatenates two text sources into a single text chunk using a specified delimiter.",
        "section": "Combine Text",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Create List",
        "section": "Create List",
        "type": "h2"
    },
    {
        "content": "This component dynamically creates a record with a specified number of fields.",
        "section": "Create List",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Custom Component",
        "section": "Custom Component",
        "type": "h2"
    },
    {
        "content": "Use this component as a template to create your custom component.",
        "section": "Custom Component",
        "type": "p"
    },
    {
        "content": "For more, see .",
        "section": "Custom Component",
        "type": "p"
    },
    {
        "content": "Filter Data",
        "section": "Filter Data",
        "type": "h2"
    },
    {
        "content": "This component filters a Data object based on a list of keys.",
        "section": "Filter Data",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hierarchical Task",
        "section": "Hierarchical Task",
        "type": "h2"
    },
    {
        "content": "This component creates and manages hierarchical tasks for CrewAI agents in a Playground environment.",
        "section": "Hierarchical Task",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Hierarchical Task",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "ID Generator",
        "section": "ID Generator",
        "type": "h2"
    },
    {
        "content": "This component generates a unique ID.",
        "section": "ID Generator",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Parse JSON",
        "section": "Parse JSON",
        "type": "h2"
    },
    {
        "content": "This component converts and extracts JSON fields using JQ queries.",
        "section": "Parse JSON",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Merge Data",
        "section": "Merge Data",
        "type": "h2"
    },
    {
        "content": "This component combines multiple data sources into a single unified Data object.",
        "section": "Merge Data",
        "type": "p"
    },
    {
        "content": "The component iterates through the input list of Data objects, merging them into a single Data object. If the input list is empty, it returns an empty Data object. If there's only one input Data object, it returns that object unchanged. The merging process uses the addition operator to combine Data objects.",
        "section": "Merge Data",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Parse Data",
        "section": "Parse Data",
        "type": "h2"
    },
    {
        "content": "The ParseData component converts Data objects into plain text using a specified template.\nThis component transforms structured data into human-readable text formats, allowing for customizable output through the use of templates.",
        "section": "Parse Data",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "{text}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "{data}",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Sequential Task",
        "section": "Sequential Task",
        "type": "h2"
    },
    {
        "content": "This component creates and manage sequential tasks for CrewAI agents. It builds a SequentialTask object with the provided description, expected output, and agent, allowing for the specification of tools and asynchronous execution.",
        "section": "Sequential Task",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Sequential Task",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Split Text",
        "section": "Split Text",
        "type": "h2"
    },
    {
        "content": "This component splits text into chunks of a specified length.",
        "section": "Split Text",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Store Message",
        "section": "Store Message",
        "type": "h2"
    },
    {
        "content": "This component stores chat messages or text into Langflow tables or an external memory.",
        "section": "Store Message",
        "type": "p"
    },
    {
        "content": "It provides flexibility in managing message storage and retrieval within a chat system.",
        "section": "Store Message",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Inputs & Outputs",
        "section": "Inputs & Outputs",
        "type": "h1"
    },
    {
        "content": "This category of components defines where data enters and exits your flow. They dynamically alter the Playground and can be renamed to facilitate building and maintaining your flows.",
        "section": "Inputs & Outputs",
        "type": "p"
    },
    {
        "content": "Inputs",
        "section": "Inputs",
        "type": "h2"
    },
    {
        "content": "Inputs are components used to define where data enters your flow. They can receive data from various sources, such as users, databases, or any other source that can be converted to Text or Data.",
        "section": "Inputs",
        "type": "p"
    },
    {
        "content": "Chat Input",
        "section": "Chat Input",
        "type": "h3"
    },
    {
        "content": "This component collects user input from the chat.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "The difference between Chat Input and other Input components is the output format, the number of configurable fields, and the way they are displayed in the Playground.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "Chat Input components can output Text or Data. When you want to pass the sender name or sender to the next component, use the Data output. To pass only the message, use the Text output. Passing only the message is useful when saving the message to a database or a memory system like Zep.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "If \"As Data\" is true and the \"Message\" is a Data, the data will be updated with the Sender, Sender Name, and Session ID.",
        "section": "Chat Input",
        "type": "p"
    },
    {
        "content": "Text Input",
        "section": "Text Input",
        "type": "h3"
    },
    {
        "content": "This component adds an Input field on the Playground, allowing parameter definition while running and testing your flow.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "The Data Template field specifies how a Data should be converted into Text. This is particularly useful when you want to extract specific information from a Data and pass it as text to the next component in the sequence.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "For example, if you have a Data with the following structure:",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "_10{ \"name\": \"John Doe\", \"age\": 30, \"email\": \"johndoe@email.com\"}",
        "section": "Text Input",
        "type": "code"
    },
    {
        "content": "A template with Name: {name}, Age: {age} will convert the Data into a text string of Name: John Doe, Age: 30.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "{name}, Age: {age}",
        "section": "Text Input",
        "type": "code"
    },
    {
        "content": "Name: John Doe, Age: 30",
        "section": "Text Input",
        "type": "code"
    },
    {
        "content": "If you pass more than one Data, the text will be concatenated with a new line separator.",
        "section": "Text Input",
        "type": "p"
    },
    {
        "content": "Outputs",
        "section": "Outputs",
        "type": "h2"
    },
    {
        "content": "Outputs define where data exits your flow. They can send data to the user, the Playground, or define how data will be displayed in the Playground.",
        "section": "Outputs",
        "type": "p"
    },
    {
        "content": "Chat Output",
        "section": "Chat Output",
        "type": "h3"
    },
    {
        "content": "This component sends a message to the chat.",
        "section": "Chat Output",
        "type": "p"
    },
    {
        "content": "If \"As Data\" is true and the \"Message\" is a Data, the data will be updated with the Sender, Sender Name, and Session ID.",
        "section": "Chat Output",
        "type": "p"
    },
    {
        "content": "Text Output",
        "section": "Text Output",
        "type": "h3"
    },
    {
        "content": "This component displays text data to the user without sending it to the chat. Defaults to an empty string.",
        "section": "Text Output",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Text Output",
        "type": "p"
    },
    {
        "content": "Loaders",
        "section": "Loaders",
        "type": "h1"
    },
    {
        "content": "Loaders are components used to load documents from various sources, such as databases, websites, and local files. They can be used to fetch data from external sources and convert it into a format that can be processed by other components.",
        "section": "Loaders",
        "type": "p"
    },
    {
        "content": "Confluence",
        "section": "Confluence",
        "type": "h2"
    },
    {
        "content": "The Confluence component integrates with the Confluence wiki collaboration platform to load and process documents. It utilizes the ConfluenceLoader from LangChain to fetch content from a specified Confluence space.",
        "section": "Confluence",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "GitLoader",
        "section": "GitLoader",
        "type": "h2"
    },
    {
        "content": "The GitLoader component uses the GitLoader from LangChain to fetch and load documents from a specified Git repository.",
        "section": "GitLoader",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Unstructured",
        "section": "Unstructured",
        "type": "h2"
    },
    {
        "content": "This component uses the  library to load and parse PDF, DOCX, and TXT files into structured data. This component works with both the open-source library and the Unstructured API.",
        "section": "Unstructured",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Models",
        "section": "Models",
        "type": "h1"
    },
    {
        "content": "Model components are used to generate text using language models. These components can be used to generate text for various tasks such as chatbots, content generation, and more.",
        "section": "Models",
        "type": "p"
    },
    {
        "content": "AI/ML API",
        "section": "AI/ML API",
        "type": "h2"
    },
    {
        "content": "This component creates a ChatOpenAI model instance using the AIML API.",
        "section": "AI/ML API",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "AI/ML API",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Amazon Bedrock",
        "section": "Amazon Bedrock",
        "type": "h2"
    },
    {
        "content": "This component generates text using Amazon Bedrock LLMs.",
        "section": "Amazon Bedrock",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Amazon Bedrock",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Anthropic",
        "section": "Anthropic",
        "type": "h2"
    },
    {
        "content": "This component allows the generation of text using Anthropic Chat and Language models.",
        "section": "Anthropic",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Anthropic",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Azure OpenAI",
        "section": "Azure OpenAI",
        "type": "h2"
    },
    {
        "content": "This component generates text using Azure OpenAI LLM.",
        "section": "Azure OpenAI",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Azure OpenAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "0.7",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "1000",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Cohere",
        "section": "Cohere",
        "type": "h2"
    },
    {
        "content": "This component generates text using Cohere's language models.",
        "section": "Cohere",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Cohere",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "256",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "0.75",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Google Generative AI",
        "section": "Google Generative AI",
        "type": "h2"
    },
    {
        "content": "This component generates text using Google's Generative AI models.",
        "section": "Google Generative AI",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Google Generative AI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "\"gemini-pro\"",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Groq",
        "section": "Groq",
        "type": "h2"
    },
    {
        "content": "This component generates text using Groq's language models.",
        "section": "Groq",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Groq",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hugging Face API",
        "section": "Hugging Face API",
        "type": "h2"
    },
    {
        "content": "This component generates text using Hugging Face's language models.",
        "section": "Hugging Face API",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Hugging Face API",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Maritalk",
        "section": "Maritalk",
        "type": "h2"
    },
    {
        "content": "This component generates text using Maritalk LLMs.",
        "section": "Maritalk",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Maritalk",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Mistral",
        "section": "Mistral",
        "type": "h2"
    },
    {
        "content": "This component generates text using MistralAI LLMs.",
        "section": "Mistral",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Mistral",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "NVIDIA",
        "section": "NVIDIA",
        "type": "h2"
    },
    {
        "content": "This component generates text using NVIDIA LLMs.",
        "section": "NVIDIA",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "NVIDIA",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Ollama",
        "section": "Ollama",
        "type": "h2"
    },
    {
        "content": "This component generates text using Ollama's language models.",
        "section": "Ollama",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Ollama",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "OpenAI",
        "section": "OpenAI",
        "type": "h2"
    },
    {
        "content": "This component generates text using OpenAI's language models.",
        "section": "OpenAI",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "OpenAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Qianfan",
        "section": "Qianfan",
        "type": "h2"
    },
    {
        "content": "This component generates text using Qianfan's language models.",
        "section": "Qianfan",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Qianfan",
        "type": "p"
    },
    {
        "content": "Perplexity",
        "section": "Perplexity",
        "type": "h2"
    },
    {
        "content": "This component generates text using Perplexity's language models.",
        "section": "Perplexity",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "Perplexity",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "VertexAI",
        "section": "VertexAI",
        "type": "h2"
    },
    {
        "content": "This component generates text using Vertex AI LLMs.",
        "section": "VertexAI",
        "type": "p"
    },
    {
        "content": "For more information, see .",
        "section": "VertexAI",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Prompts",
        "section": "Prompts",
        "type": "h1"
    },
    {
        "content": "A prompt serves as the input to a language model, comprising multiple components that can be parameterized using prompt templates.",
        "section": "Prompts",
        "type": "p"
    },
    {
        "content": "Prompt templates provide a systematic approach for generating prompts, allowing for reproducible customization through defined input variables.",
        "section": "Prompts",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "build_prompt",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Langchain Hub Prompt Template",
        "section": "Langchain Hub Prompt Template",
        "type": "h2"
    },
    {
        "content": "This component fetches prompts from the .",
        "section": "Langchain Hub Prompt Template",
        "type": "p"
    },
    {
        "content": "When a prompt is loaded, the component generates input fields for custom variables. For example, the default prompt \"efriis/my-first-prompt\" generates fields for profession and question.",
        "section": "Langchain Hub Prompt Template",
        "type": "p"
    },
    {
        "content": "profession",
        "section": "Langchain Hub Prompt Template",
        "type": "code"
    },
    {
        "content": "question",
        "section": "Langchain Hub Prompt Template",
        "type": "code"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "build_prompt",
        "section": "Parameters",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "RAG",
        "section": "RAG",
        "type": "h1"
    },
    {
        "content": "RAG (Retrieval-Augmented Generation) components process a user query by retrieving relevant documents and generating a concise summary that addresses the user's question.",
        "section": "RAG",
        "type": "p"
    },
    {
        "content": "Vectara RAG",
        "section": "Vectara RAG",
        "type": "h2"
    },
    {
        "content": "This component leverages Vectara's Retrieval Augmented Generation (RAG) capabilities to search and summarize documents based on the provided input. For more information, see the .",
        "section": "Vectara RAG",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Vector Stores",
        "section": "Vector Stores",
        "type": "h1"
    },
    {
        "content": "Vector databases are used to store and search for vectors. They can be used to store embeddings, search for similar vectors, and perform other vector operations.",
        "section": "Vector Stores",
        "type": "p"
    },
    {
        "content": "Astra DB Vector Store",
        "section": "Astra DB Vector Store",
        "type": "h2"
    },
    {
        "content": "This component implements a Vector Store using Astra DB with search capabilities.",
        "section": "Astra DB Vector Store",
        "type": "p"
    },
    {
        "content": "For more information, see the .",
        "section": "Astra DB Vector Store",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Cassandra",
        "section": "Cassandra",
        "type": "h2"
    },
    {
        "content": "This component creates a Cassandra Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Cassandra",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Cassandra Graph Vector Store",
        "section": "Cassandra Graph Vector Store",
        "type": "h2"
    },
    {
        "content": "This component implements a Cassandra Graph Vector Store with search capabilities.",
        "section": "Cassandra Graph Vector Store",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Chroma DB",
        "section": "Chroma DB",
        "type": "h2"
    },
    {
        "content": "This component creates a Chroma Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Chroma DB",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Clickhouse",
        "section": "Clickhouse",
        "type": "h2"
    },
    {
        "content": "This component implements a Clickhouse Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Clickhouse",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Couchbase",
        "section": "Couchbase",
        "type": "h2"
    },
    {
        "content": "This component creates a Couchbase Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Couchbase",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "FAISS",
        "section": "FAISS",
        "type": "h2"
    },
    {
        "content": "This component creates a FAISS Vector Store with search capabilities.\nFor more information, see the .",
        "section": "FAISS",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hyper-Converged Database (HCD) Vector Store",
        "section": "Hyper-Converged Database (HCD) Vector Store",
        "type": "h2"
    },
    {
        "content": "This component implements a Vector Store using HCD.",
        "section": "Hyper-Converged Database (HCD) Vector Store",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Milvus",
        "section": "Milvus",
        "type": "h2"
    },
    {
        "content": "This component creates a Milvus Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Milvus",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "MongoDB Atlas",
        "section": "MongoDB Atlas",
        "type": "h2"
    },
    {
        "content": "This component creates a MongoDB Atlas Vector Store with search capabilities.\nFor more information, see the .",
        "section": "MongoDB Atlas",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "PGVector",
        "section": "PGVector",
        "type": "h2"
    },
    {
        "content": "This component creates a PGVector Vector Store with search capabilities.\nFor more information, see the .",
        "section": "PGVector",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Pinecone",
        "section": "Pinecone",
        "type": "h2"
    },
    {
        "content": "This component creates a Pinecone Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Pinecone",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Qdrant",
        "section": "Qdrant",
        "type": "h2"
    },
    {
        "content": "This component creates a Qdrant Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Qdrant",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Redis",
        "section": "Redis",
        "type": "h2"
    },
    {
        "content": "This component creates a Redis Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Redis",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Supabase",
        "section": "Supabase",
        "type": "h2"
    },
    {
        "content": "This component creates a connection to a Supabase Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Supabase",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Upstash",
        "section": "Upstash",
        "type": "h2"
    },
    {
        "content": "This component creates an Upstash Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Upstash",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Vectara",
        "section": "Vectara",
        "type": "h2"
    },
    {
        "content": "This component creates a Vectara Vector Store with search capabilities.\nFor more information, see the .",
        "section": "Vectara",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Vectara Search",
        "section": "Vectara Search",
        "type": "h2"
    },
    {
        "content": "This component searches a Vectara Vector Store for documents based on the provided input.\nFor more information, see the .",
        "section": "Vectara Search",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Weaviate",
        "section": "Weaviate",
        "type": "h2"
    },
    {
        "content": "This component facilitates a Weaviate Vector Store setup, optimizing text and document indexing and retrieval.\nFor more information, see the .",
        "section": "Weaviate",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Note: Ensure Weaviate instance is running and accessible. Verify API key, index name, text key, and attributes are set correctly.",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Weaviate Search",
        "section": "Weaviate Search",
        "type": "h2"
    },
    {
        "content": "This component searches a Weaviate Vector Store for documents similar to the input.\nFor more information, see the .",
        "section": "Weaviate Search",
        "type": "p"
    },
    {
        "content": "Parameters",
        "section": "Parameters",
        "type": "h3"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Parameters",
        "type": "p"
    },
    {
        "content": "Intro to Components",
        "section": "Intro to Components",
        "type": "h1"
    },
    {
        "content": "Component",
        "section": "Component",
        "type": "h2"
    },
    {
        "content": "A\u00a0component\u00a0is a single building block within a flow. It consists of inputs, outputs, and parameters that define their functionality. These elements provide a convenient and  straightforward way to compose LLM-based applications. Learn more about components and how they work below.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "During the flow creation process, you will notice handles (colored circles) attached to one or both sides of a component. These handles use distinct colors to indicate the types of inputs and outputs that can be interconnected. Hover over a handle to see connection details.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "On the top right corner of the component, you'll find the a play button to run a component. Once it runs, a status icon appears and you can hover over that to visualize success or error messages. Start interacting with your AI by clicking the\u00a0Playground\u00a0at the bottom right of the workspace.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "Component Menu",
        "section": "Component Menu",
        "type": "h3"
    },
    {
        "content": "Each component is unique, but they all have a menu bar at the top that looks something like this.",
        "section": "Component Menu",
        "type": "p"
    },
    {
        "content": "It consists of options such as:",
        "section": "Component Menu",
        "type": "p"
    },
    {
        "content": "Code\u00a0\u2014 displays the component's Python code. You can modify the code and save it.\nAdvanced\u00a0\u2014 See and adjust all parameters of a component.\nFreeze\u00a0\u2014 After a component runs, lock its previous output state to prevent it from re-running.",
        "section": "Component Menu",
        "type": "ul"
    },
    {
        "content": "Code\u00a0\u2014 displays the component's Python code. You can modify the code and save it.",
        "section": "Component Menu",
        "type": "li"
    },
    {
        "content": "Advanced\u00a0\u2014 See and adjust all parameters of a component.",
        "section": "Component Menu",
        "type": "li"
    },
    {
        "content": "Freeze\u00a0\u2014 After a component runs, lock its previous output state to prevent it from re-running.",
        "section": "Component Menu",
        "type": "li"
    },
    {
        "content": "Click\u00a0All\u00a0(the \"...\" button) to see all options.",
        "section": "Component Menu",
        "type": "p"
    },
    {
        "content": "Output Preview",
        "section": "Output Preview",
        "type": "h3"
    },
    {
        "content": "Langflow includes an output visualizer for components that opens a pop-up screen. This allows you to easily inspect and monitor transmissions between components, providing instant feedback on your workflows.",
        "section": "Output Preview",
        "type": "p"
    },
    {
        "content": "Advanced Settings",
        "section": "Advanced Settings",
        "type": "h3"
    },
    {
        "content": "Langflow components can be edited by clicking the\u00a0Advanced Settings\u00a0button.",
        "section": "Advanced Settings",
        "type": "p"
    },
    {
        "content": "Hide parameters with the\u00a0Show\u00a0button to reduce complexity and keep the workspace clean and intuitive for experimentation.",
        "section": "Advanced Settings",
        "type": "p"
    },
    {
        "content": "You can also double-click a component's name and description to modify those. Component descriptions accept markdown syntax.",
        "section": "Advanced Settings",
        "type": "p"
    },
    {
        "content": "Group Components",
        "section": "Group Components",
        "type": "h3"
    },
    {
        "content": "Multiple components can be grouped into a single component for reuse. This is useful when combining large flows into single components (like RAG with a vector database, for example) and saving space.",
        "section": "Group Components",
        "type": "p"
    },
    {
        "content": "Hold\u00a0Shift\u00a0and drag to select components.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "Select\u00a0Group.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "The components merge into a single component.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "Double-click the name and description to change them.",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "Save your grouped component to in the sidebar for later use!",
        "section": "Group Components",
        "type": "li"
    },
    {
        "content": "[group video here]",
        "section": "Group Components",
        "type": "p"
    },
    {
        "content": "Component Version",
        "section": "Component Version",
        "type": "h3"
    },
    {
        "content": "A component's state is stored in a database, while sidebar components are like starter templates. As soon as you drag a component from the sidebar to the workspace, the two components are no longer in parity.",
        "section": "Component Version",
        "type": "p"
    },
    {
        "content": "The component will keep the version number it was initialized to the workspace with. Click the\u00a0Update Component\u00a0icon (exclamation mark) to bring the component up to the\u00a0latest\u00a0version. This will change the code of the component in place so you can validate that the component was updated by checking its Python code before and after updating it.",
        "section": "Component Version",
        "type": "p"
    },
    {
        "content": "latest",
        "section": "Component Version",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Component Version",
        "type": "p"
    },
    {
        "content": "API Keys",
        "section": "API Keys",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "API Keys",
        "type": "p"
    },
    {
        "content": "Langflow provides an API key functionality that allows users to access their individual components and flows without traditional login authentication. The API key is a user-specific token that can be included in the request header or query parameter to authenticate API calls. This documentation outlines how to generate, use, and manage API keys in Langflow.",
        "section": "API Keys",
        "type": "p"
    },
    {
        "content": "The default user and password are set using the LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD environment variables. The default values are langflow and langflow, respectively.",
        "section": "API Keys",
        "type": "p"
    },
    {
        "content": "Generate an API key",
        "section": "Generate an API key",
        "type": "h2"
    },
    {
        "content": "Generate a user-specific token to use with Langflow.",
        "section": "Generate an API key",
        "type": "p"
    },
    {
        "content": "Generate an API key with the Langflow UI",
        "section": "Generate an API key with the Langflow UI",
        "type": "h3"
    },
    {
        "content": "Click on the \"API Key\" icon.",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Click on the \"API Key\" icon.",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Click on \"Create new secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Click on \"Create new secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Give it an optional name.",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Give it an optional name.",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Click on \"Create secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Click on \"Create secret key\".",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Copy the API key and store it in a secure location.",
        "section": "Generate an API key with the Langflow UI",
        "type": "li"
    },
    {
        "content": "Copy the API key and store it in a secure location.",
        "section": "Generate an API key with the Langflow UI",
        "type": "p"
    },
    {
        "content": "Generate an API key with the Langflow CLI",
        "section": "Generate an API key with the Langflow CLI",
        "type": "h3"
    },
    {
        "content": "_13langflow api-key_13# or_13python -m langflow api-key_13\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e_13\u2502 API Key Created Successfully:                                       \u2502_13\u2502                                                                     \u2502_13\u2502 sk-O0elzoWID1izAH8RUKrnnvyyMwIzHi2Wk-uXWoNJ2Ro                      \u2502_13\u2502                                                                     \u2502_13\u2502 This is the only time the API key will be displayed.                \u2502_13\u2502 Make sure to store it in a secure location.                         \u2502_13\u2502                                                                     \u2502_13\u2502 The API key has been copied to your clipboard. Cmd + V to paste it. \u2502_13\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "section": "Generate an API key with the Langflow CLI",
        "type": "code"
    },
    {
        "content": "Use the Langflow API key",
        "section": "Use the Langflow API key",
        "type": "h2"
    },
    {
        "content": "Include your API key in API requests to authenticate requests to Langflow.",
        "section": "Use the Langflow API key",
        "type": "p"
    },
    {
        "content": "Use the x-api-key header",
        "section": "Use the x-api-key header",
        "type": "h3"
    },
    {
        "content": "x-api-key",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "Include the x-api-key in the HTTP header when making API requests:",
        "section": "Use the x-api-key header",
        "type": "p"
    },
    {
        "content": "x-api-key",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "_10curl -X POST \\\\_10  <http://localhost:3000/api/v1/run/><your_flow_id> \\\\_10  -H 'Content-Type: application/json'\\\\_10  -H 'x-api-key: <your api key>'\\\\_10  -d '{\"inputs\": {\"text\":\"\"}, \"tweaks\": {}}'",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "With Python using requests:",
        "section": "Use the x-api-key header",
        "type": "p"
    },
    {
        "content": "requests",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "_38import requests_38from typing import Optional_38_38BASE_API_URL = \"<http://localhost:3001/api/v1/process>\"_38FLOW_ID = \"4441b773-0724-434e-9cee-19d995d8f2df\"_38# You can tweak the flow by adding a tweaks dictionary_38# e.g {\"OpenAI-XXXXX\": {\"model_name\": \"gpt-4\"}}_38TWEAKS = {}_38_38def run_flow(inputs: dict,_38            flow_id: str,_38            tweaks: Optional[dict] = None,_38            apiKey: Optional[str] = None) -> dict:_38    \"\"\"_38    Run a flow with a given message and optional tweaks._38_38    :param message: The message to send to the flow_38    :param flow_id: The ID of the flow to run_38    :param tweaks: Optional tweaks to customize the flow_38    :return: The JSON response from the flow_38    \"\"\"_38    api_url = f\"{BASE_API_URL}/{flow_id}\"_38_38    payload = {\"inputs\": inputs}_38    headers = {}_38_38    if tweaks:_38        payload[\"tweaks\"] = tweaks_38    if apiKey:_38        headers = {\"x-api-key\": apiKey}_38_38    response = requests.post(api_url, json=payload, headers=headers)_38    return response.json()_38_38# Setup any tweaks you want to apply to the flow_38inputs = {\"text\":\"\"}_38api_key = \"<your api key>\"_38print(run_flow(inputs, flow_id=FLOW_ID, tweaks=TWEAKS, apiKey=api_key))",
        "section": "Use the x-api-key header",
        "type": "code"
    },
    {
        "content": "Use the query parameter",
        "section": "Use the query parameter",
        "type": "h3"
    },
    {
        "content": "Include the API key as a query parameter in the URL:",
        "section": "Use the query parameter",
        "type": "p"
    },
    {
        "content": "_10curl -X POST \\\\_10  <http://localhost:3000/api/v1/process/><your_flow_id>?x-api-key=<your_api_key> \\\\_10  -H 'Content-Type: application/json'\\\\_10  -d '{\"inputs\": {\"text\":\"\"}, \"tweaks\": {}}'",
        "section": "Use the query parameter",
        "type": "code"
    },
    {
        "content": "With Python using requests:",
        "section": "Use the query parameter",
        "type": "p"
    },
    {
        "content": "requests",
        "section": "Use the query parameter",
        "type": "code"
    },
    {
        "content": "_37import requests_37_37BASE_API_URL = \"<http://localhost:3001/api/v1/process>\"_37FLOW_ID = \"4441b773-0724-434e-9cee-19d995d8f2df\"_37# You can tweak the flow by adding a tweaks dictionary_37# e.g {\"OpenAI-XXXXX\": {\"model_name\": \"gpt-4\"}}_37TWEAKS = {}_37_37def run_flow(inputs: dict,_37            flow_id: str,_37            tweaks: Optional[dict] = None,_37            apiKey: Optional[str] = None) -> dict:_37    \"\"\"_37    Run a flow with a given message and optional tweaks._37_37    :param message: The message to send to the flow_37    :param flow_id: The ID of the flow to run_37    :param tweaks: Optional tweaks to customize the flow_37    :return: The JSON response from the flow_37    \"\"\"_37    api_url = f\"{BASE_API_URL}/{flow_id}\"_37_37    payload = {\"inputs\": inputs}_37    headers = {}_37_37    if tweaks:_37        payload[\"tweaks\"] = tweaks_37    if apiKey:_37        api_url += f\"?x-api-key={apiKey}\"_37_37    response = requests.post(api_url, json=payload, headers=headers)_37    return response.json()_37_37# Setup any tweaks you want to apply to the flow_37inputs = {\"text\":\"\"}_37api_key = \"<your api key>\"_37print(run_flow(inputs, flow_id=FLOW_ID, tweaks=TWEAKS, apiKey=api_key))",
        "section": "Use the query parameter",
        "type": "code"
    },
    {
        "content": "Security Considerations",
        "section": "Security Considerations",
        "type": "h2"
    },
    {
        "content": "Visibility: For security reasons, the API key cannot be retrieved again through the UI.\nScope: The key allows access only to the flows and components of the specific user to whom it was issued.",
        "section": "Security Considerations",
        "type": "ul"
    },
    {
        "content": "Visibility: For security reasons, the API key cannot be retrieved again through the UI.",
        "section": "Security Considerations",
        "type": "li"
    },
    {
        "content": "Scope: The key allows access only to the flows and components of the specific user to whom it was issued.",
        "section": "Security Considerations",
        "type": "li"
    },
    {
        "content": "Custom API endpoint",
        "section": "Custom API endpoint",
        "type": "h2"
    },
    {
        "content": "Under Project Settings > Endpoint Name, you can pick a custom name for the endpoint used to call your flow from the API.",
        "section": "Custom API endpoint",
        "type": "p"
    },
    {
        "content": "Revoke an API Key",
        "section": "Revoke an API Key",
        "type": "h2"
    },
    {
        "content": "To revoke an API key, delete it from the UI. This action immediately invalidates the key and prevents it from being used again.",
        "section": "Revoke an API Key",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Revoke an API Key",
        "type": "p"
    },
    {
        "content": "Authentication",
        "section": "Authentication",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Authentication",
        "type": "p"
    },
    {
        "content": "Sign Up and Sign In",
        "section": "Sign Up and Sign In",
        "type": "h2"
    },
    {
        "content": "The login functionality in Langflow serves to authenticate users and protect sensitive routes in the application. Starting from version 0.5, Langflow introduces an enhanced login mechanism that is governed by a few environment variables. This allows new secure features.",
        "section": "Sign Up and Sign In",
        "type": "p"
    },
    {
        "content": "Environment Variables",
        "section": "Environment Variables",
        "type": "h2"
    },
    {
        "content": "The following environment variables are crucial in configuring the login settings:",
        "section": "Environment Variables",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN: Determines whether Langflow should automatically log users in. Default is True.\nLANGFLOW_SUPERUSER: The username of the superuser.\nLANGFLOW_SUPERUSER_PASSWORD: The password for the superuser.\nLANGFLOW_SECRET_KEY: A key used for encrypting the superuser's password.\nLANGFLOW_NEW_USER_IS_ACTIVE: Determines whether new users are automatically activated. Default is False.",
        "section": "Environment Variables",
        "type": "ul"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN: Determines whether Langflow should automatically log users in. Default is True.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER: The username of the superuser.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_SUPERUSER",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER_PASSWORD: The password for the superuser.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_SUPERUSER_PASSWORD",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SECRET_KEY: A key used for encrypting the superuser's password.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_SECRET_KEY",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE: Determines whether new users are automatically activated. Default is False.",
        "section": "Environment Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "All of these variables can be passed to the CLI command langflow run through the --env-file option. For example:",
        "section": "Environment Variables",
        "type": "p"
    },
    {
        "content": "langflow run",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "--env-file",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "_10langflow run --env-file .env",
        "section": "Environment Variables",
        "type": "code"
    },
    {
        "content": "It is critical not to expose these environment variables in your code repository. Always set them securely in your deployment environment, for example, using Docker secrets, Kubernetes ConfigMaps/Secrets, or dedicated secure environment configuration systems like AWS Secrets Manager.",
        "section": "Environment Variables",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "By default, this variable is set to True. When enabled (True), Langflow operates as it did in versions prior to 0.5\u2014automatic login without requiring explicit user authentication.",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "p"
    },
    {
        "content": "True",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "True",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "To disable automatic login and enforce user authentication:",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "p"
    },
    {
        "content": "_10export LANGFLOW_AUTO_LOGIN=False",
        "section": "LANGFLOW_AUTO_LOGIN",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_SUPERUSER",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SUPERUSER_PASSWORD",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "These environment variables are only relevant when LANGFLOW_AUTO_LOGIN is set to False. They specify the username and password for the superuser, which is essential for administrative tasks.",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "False",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "To create a superuser manually:",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "p"
    },
    {
        "content": "_10export LANGFLOW_SUPERUSER=admin_10export LANGFLOW_SUPERUSER_PASSWORD=securepassword",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "You can also use the CLI command langflow superuser to set up a superuser interactively.",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "p"
    },
    {
        "content": "langflow superuser",
        "section": "LANGFLOW_SUPERUSER and LANGFLOW_SUPERUSER_PASSWORD",
        "type": "code"
    },
    {
        "content": "LANGFLOW_SECRET_KEY",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_SECRET_KEY",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "code"
    },
    {
        "content": "This environment variable holds a secret key used for encrypting the superuser's password. Make sure to set this to a secure, randomly generated string.",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "p"
    },
    {
        "content": "_10export LANGFLOW_SECRET_KEY=randomly_generated_secure_key",
        "section": "LANGFLOW_SECRET_KEY",
        "type": "code"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "h3"
    },
    {
        "content": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "code"
    },
    {
        "content": "By default, this variable is set to False. When enabled (True), new users are automatically activated and can log in without requiring explicit activation by the superuser.",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "p"
    },
    {
        "content": "False",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "code"
    },
    {
        "content": "True",
        "section": "LANGFLOW_NEW_USER_IS_ACTIVE",
        "type": "code"
    },
    {
        "content": "Manage superusers with the CLI",
        "section": "Manage superusers with the CLI",
        "type": "h2"
    },
    {
        "content": "Langflow provides a command-line utility for managing superusers:",
        "section": "Manage superusers with the CLI",
        "type": "p"
    },
    {
        "content": "_10langflow superuser",
        "section": "Manage superusers with the CLI",
        "type": "code"
    },
    {
        "content": "This command prompts you to enter the username and password for the superuser, unless they are already set using environment variables.",
        "section": "Manage superusers with the CLI",
        "type": "p"
    },
    {
        "content": "Sign in",
        "section": "Sign in",
        "type": "h2"
    },
    {
        "content": "With LANGFLOW_AUTO_LOGIN set to False, Langflow requires users to sign up before they can log in. The sign-up page is the default landing page when a user visits Langflow for the first time.",
        "section": "Sign in",
        "type": "p"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "Sign in",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Sign in",
        "type": "code"
    },
    {
        "content": "Profile settings",
        "section": "Profile settings",
        "type": "h2"
    },
    {
        "content": "Once signed in, you can change your profile settings by clicking on the profile icon in the top right corner of the Langflow dashboard. This opens a dropdown menu with the following options:",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Admin Page: Opens the admin page, which is only accessible to the superuser.\n\n\nProfile Settings: Opens the profile settings page.\n\n\nSign Out: Logs the user out.",
        "section": "Profile settings",
        "type": "ul"
    },
    {
        "content": "Admin Page: Opens the admin page, which is only accessible to the superuser.",
        "section": "Profile settings",
        "type": "li"
    },
    {
        "content": "Admin Page: Opens the admin page, which is only accessible to the superuser.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Profile Settings: Opens the profile settings page.",
        "section": "Profile settings",
        "type": "li"
    },
    {
        "content": "Profile Settings: Opens the profile settings page.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Sign Out: Logs the user out.",
        "section": "Profile settings",
        "type": "li"
    },
    {
        "content": "Sign Out: Logs the user out.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Select Profile Settings to change your password and your profile picture.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Select Admin Page to manage users and groups as the superuser.",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Profile settings",
        "type": "p"
    },
    {
        "content": "Auto-saving",
        "section": "Auto-saving",
        "type": "h1"
    },
    {
        "content": "Langflow currently supports both manual and auto-saving functionality.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "Auto-saving",
        "section": "Auto-saving",
        "type": "h2"
    },
    {
        "content": "When Langflow is in Auto-saving mode, all changes are saved automatically. Auto-save progress is indicated in the left side of the top bar: when a flow is being saved, a Loading icon indicates that the flow is being saved in the database.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "If you try to exit the flow page before auto-save completes, a dialog will appear to confirm you want to exit before the flow has saved.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "When the flow has successfully saved, you can click the 'Exit' button.",
        "section": "Auto-saving",
        "type": "p"
    },
    {
        "content": "Manual Saving",
        "section": "Manual Saving",
        "type": "h2"
    },
    {
        "content": "When auto-saving is disabled, you need to manually save your flow when making changes. You can still run the flow without saving, for testing purposes.",
        "section": "Manual Saving",
        "type": "p"
    },
    {
        "content": "If you make any changes and Langflow detects that the saved flow is different from the current flow, a Save button will be enabled and the last time saved will appear at the left side of the topbar. To save the flow, click the Save button, or hit Ctrl+S or Command+S.",
        "section": "Manual Saving",
        "type": "p"
    },
    {
        "content": "If you try to exit after making changes and not saving, a confirmation dialog will appear. You can choose to exit anyway or save and exit.",
        "section": "Manual Saving",
        "type": "p"
    },
    {
        "content": "Disable Auto Saving",
        "section": "Disable Auto Saving",
        "type": "h2"
    },
    {
        "content": "In Langflow, all changes made in the flows are saved automatically. However, you may prefer to disable this functionality, if you want a quick way to prototype and test changes before they are actually saved to the database.",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": "If you wish to disable this functionality, you can run Langflow with an environment variable to tell Langflow to use manual saving.",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": "_10langflow --no-auto-saving_10# or_10python -m langflow --no-auto-saving",
        "section": "Disable Auto Saving",
        "type": "code"
    },
    {
        "content": "If you installed the local version of Langflow, you can set an environment variable and load it automatically by inserting this line into the .env file inside the directory.",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": ".env",
        "section": "Disable Auto Saving",
        "type": "code"
    },
    {
        "content": "_10LANGFLOW_AUTO_SAVING=false",
        "section": "Disable Auto Saving",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Disable Auto Saving",
        "type": "p"
    },
    {
        "content": "Backend-Only",
        "section": "Backend-Only",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "You can run Langflow in --backend-only mode to expose your Langflow app as an API, without running the frontend UI.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "--backend-only",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "Start langflow in backend-only mode with python3 -m langflow run --backend-only.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "python3 -m langflow run --backend-only",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "The terminal prints Welcome to \u26d3 Langflow, and a blank window opens at http://127.0.0.1:7864/all.\nLangflow will now serve requests to its API without the frontend running.",
        "section": "Backend-Only",
        "type": "p"
    },
    {
        "content": "Welcome to \u26d3 Langflow",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "http://127.0.0.1:7864/all",
        "section": "Backend-Only",
        "type": "code"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Download your flow's curl call",
        "section": "Download your flow's curl call",
        "type": "h2"
    },
    {
        "content": "Click API.",
        "section": "Download your flow's curl call",
        "type": "li"
    },
    {
        "content": "Click curl > Copy code and save the code to your local machine.\nIt will look something like this:",
        "section": "Download your flow's curl call",
        "type": "li"
    },
    {
        "content": "_12curl -X POST \\\\_12    \"<http://127.0.0.1:7864/api/v1/run/ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef?stream=false>\" \\\\_12    -H 'Content-Type: application/json'\\\\_12    -d '{\"input_value\": \"message\",_12    \"output_type\": \"chat\",_12    \"input_type\": \"chat\",_12    \"tweaks\": {_12  \"Prompt-kvo86\": {},_12  \"OpenAIModel-MilkD\": {},_12  \"ChatOutput-ktwdw\": {},_12  \"ChatInput-xXC4F\": {}_12}}'",
        "section": "Download your flow's curl call",
        "type": "code"
    },
    {
        "content": "Note the flow ID of ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef. You can find this ID in the UI as well to ensure you're querying the right flow.",
        "section": "Download your flow's curl call",
        "type": "p"
    },
    {
        "content": "ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef",
        "section": "Download your flow's curl call",
        "type": "code"
    },
    {
        "content": "Start Langflow in backend-only mode",
        "section": "Start Langflow in backend-only mode",
        "type": "h2"
    },
    {
        "content": "Stop Langflow with Ctrl+C.",
        "section": "Start Langflow in backend-only mode",
        "type": "li"
    },
    {
        "content": "Start langflow in backend-only mode with python3 -m langflow run --backend-only.\nThe terminal prints Welcome to \u26d3 Langflow, and a blank window opens at http://127.0.0.1:7864/all.\nLangflow will now serve requests to its API.",
        "section": "Start Langflow in backend-only mode",
        "type": "li"
    },
    {
        "content": "python3 -m langflow run --backend-only",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "Welcome to \u26d3 Langflow",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "http://127.0.0.1:7864/all",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "Run the curl code you copied from the UI.\nYou should get a result like this:",
        "section": "Start Langflow in backend-only mode",
        "type": "li"
    },
    {
        "content": "_10{\"session_id\":\"ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef:bf81d898868ac87e1b4edbd96c131c5dee801ea2971122cc91352d144a45b880\",\"outputs\":[{\"inputs\":{\"input_value\":\"hi, are you there?\"},\"outputs\":[{\"results\":{\"result\":\"Arrr, ahoy matey! Aye, I be here. What be ye needin', me hearty?\"},\"artifacts\":{\"message\":\"Arrr, ahoy matey! Aye, I be here. What be ye needin', me hearty?\",\"sender\":\"Machine\",\"sender_name\":\"AI\"},\"messages\":[{\"message\":\"Arrr, ahoy matey! Aye, I be here. What be ye needin', me hearty?\",\"sender\":\"Machine\",\"sender_name\":\"AI\",\"component_id\":\"ChatOutput-ktwdw\"}],\"component_display_name\":\"Chat Output\",\"component_id\":\"ChatOutput-ktwdw\",\"used_frozen_result\":false}]}]}%",
        "section": "Start Langflow in backend-only mode",
        "type": "code"
    },
    {
        "content": "Again, note that the flow ID matches.\nLangflow is receiving your POST request, running the flow, and returning the result, all without running the frontend. Cool!",
        "section": "Start Langflow in backend-only mode",
        "type": "p"
    },
    {
        "content": "Download your flow's Python API call",
        "section": "Download your flow's Python API call",
        "type": "h2"
    },
    {
        "content": "Instead of using curl, you can download your flow as a Python API call instead.",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "Click API.",
        "section": "Download your flow's Python API call",
        "type": "li"
    },
    {
        "content": "Click Python API > Copy code and save the code to your local machine.\nThe code will look something like this:",
        "section": "Download your flow's Python API call",
        "type": "li"
    },
    {
        "content": "_40import requests_40from typing import Optional_40_40BASE_API_URL = \"<http://127.0.0.1:7864/api/v1/run>\"_40FLOW_ID = \"ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef\"_40# You can tweak the flow by adding a tweaks dictionary_40# e.g {\"OpenAI-XXXXX\": {\"model_name\": \"gpt-4\"}}_40_40def run_flow(message: str,_40  flow_id: str,_40  output_type: str = \"chat\",_40  input_type: str = \"chat\",_40  tweaks: Optional[dict] = None,_40  api_key: Optional[str] = None) -> dict:_40    \"\"\"Run a flow with a given message and optional tweaks._40_40\t:param message: The message to send to the flow_40\t:param flow_id: The ID of the flow to run_40\t:param tweaks: Optional tweaks to customize the flow_40\t:return: The JSON response from the flow_40\t\"\"\"_40\tapi_url = f\"{BASE_API_URL}/{flow_id}\"_40\tpayload = {_40    \"input_value\": message,_40    \"output_type\": output_type,_40    \"input_type\": input_type,_40\t}_40\theaders = None_40\tif tweaks:_40\t    payload[\"tweaks\"] = tweaks_40\tif api_key:_40\t    headers = {\"x-api-key\": api_key}_40\tresponse = requests.post(api_url, json=payload, headers=headers)_40\treturn response.json()_40 _40\t# Setup any tweaks you want to apply to the flow_40 _40\tmessage = \"message\"_40 _40\tprint(run_flow(message=message, flow_id=FLOW_ID))",
        "section": "Download your flow's Python API call",
        "type": "code"
    },
    {
        "content": "Run your Python app:",
        "section": "Download your flow's Python API call",
        "type": "li"
    },
    {
        "content": "_10python3 app.py",
        "section": "Download your flow's Python API call",
        "type": "code"
    },
    {
        "content": "The result is similar to the curl call:",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "_10{'session_id': 'ef7e0554-69e5-4e3e-ab29-ee83bcd8d9ef:bf81d898868ac87e1b4edbd96c131c5dee801ea2971122cc91352d144a45b880', 'outputs': [{'inputs': {'input_value': 'message'}, 'outputs': [{'results': {'result': \"Arrr matey! What be yer message for this ol' pirate? Speak up or walk the plank!\"}, 'artifacts': {'message': \"Arrr matey! What be yer message for this ol' pirate? Speak up or walk the plank!\", 'sender': 'Machine', 'sender_name': 'AI'}, 'messages': [{'message': \"Arrr matey! What be yer message for this ol' pirate? Speak up or walk the plank!\", 'sender': 'Machine', 'sender_name': 'AI', 'component_id': 'ChatOutput-ktwdw'}], 'component_display_name': 'Chat Output', 'component_id': 'ChatOutput-ktwdw', 'used_frozen_result': False}]}]}",
        "section": "Download your flow's Python API call",
        "type": "code"
    },
    {
        "content": "Your Python app POSTs to your Langflow server, and the server runs the flow and returns the result.",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "See  for more ways to interact with your headless Langflow server.",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Download your flow's Python API call",
        "type": "p"
    },
    {
        "content": "Command Line Interface (CLI)",
        "section": "Command Line Interface (CLI)",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Command Line Interface (CLI)",
        "type": "p"
    },
    {
        "content": "Langflow's Command Line Interface (CLI) is a powerful tool that allows you to interact with the Langflow server from the command line. The CLI provides a wide range of commands to help you shape Langflow to your needs.",
        "section": "Command Line Interface (CLI)",
        "type": "p"
    },
    {
        "content": "The available commands are below. Navigate to their individual sections of this page to see the parameters.",
        "section": "Command Line Interface (CLI)",
        "type": "p"
    },
    {
        "content": "Overview",
        "section": "Overview",
        "type": "h2"
    },
    {
        "content": "Running the CLI without any arguments displays a list of available options and commands.",
        "section": "Overview",
        "type": "p"
    },
    {
        "content": "_10langflow_10# or_10langflow --help_10# or_10python -m langflow",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "api-key",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "copy-db",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "which langflow",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "migration",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "run",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "superuser",
        "section": "Overview",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--install-completion",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--show-completion",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "langflow api-key",
        "section": "langflow api-key",
        "type": "h2"
    },
    {
        "content": "Run the api-key command to create an API key for the default superuser if LANGFLOW_AUTO_LOGIN is set to True.",
        "section": "langflow api-key",
        "type": "p"
    },
    {
        "content": "api-key",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "LANGFLOW_AUTO_LOGIN",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "True",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "_13langflow api-key_13# or_13python -m langflow api-key_13\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e_13\u2502 API Key Created Successfully:                                       \u2502_13\u2502                                                                     \u2502_13\u2502 sk-O0elzoWID1izAH8RUKrnnvyyMwIzHi2Wk-uXWoNJ2Ro                      \u2502_13\u2502                                                                     \u2502_13\u2502 This is the only time the API key will be displayed.                \u2502_13\u2502 Make sure to store it in a secure location.                         \u2502_13\u2502                                                                     \u2502_13\u2502 The API key has been copied to your clipboard. Cmd + V to paste it. \u2502_13\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "section": "langflow api-key",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "langflow copy-db",
        "section": "langflow copy-db",
        "type": "h2"
    },
    {
        "content": "Run the copy-db command to copy the cached langflow.db and langflow-pre.db database files to the current directory.",
        "section": "langflow copy-db",
        "type": "p"
    },
    {
        "content": "copy-db",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "langflow.db",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "langflow-pre.db",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "If the files exist in the cache directory, they will be copied to the same directory as __main__.py, which can be found with which langflow.",
        "section": "langflow copy-db",
        "type": "p"
    },
    {
        "content": "__main__.py",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "which langflow",
        "section": "langflow copy-db",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "None.",
        "section": "Options",
        "type": "p"
    },
    {
        "content": "langflow migration",
        "section": "langflow migration",
        "type": "h2"
    },
    {
        "content": "Run or test migrations with the Alembic database tool.",
        "section": "langflow migration",
        "type": "p"
    },
    {
        "content": "_10langflow migration_10# or_10python -m langflow migration",
        "section": "langflow migration",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--test, --no-test",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--fix, --no-fix",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "langflow run",
        "section": "langflow run",
        "type": "h2"
    },
    {
        "content": "Run Langflow.",
        "section": "langflow run",
        "type": "p"
    },
    {
        "content": "_10langflow run_10# or_10python -m langflow run",
        "section": "langflow run",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--host",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_HOST",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "127.0.0.1",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--workers",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_WORKERS",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "1",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--timeout",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "60",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--port",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_PORT",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "7860",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--env-file",
        "section": "Options",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--log-level",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_LOG_LEVEL",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "critical",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--components-path",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_COMPONENTS_PATH",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "langflow/components",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--log-file",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_LOG_FILE",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "logs/langflow.log",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--cache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "InMemoryCache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "SQLiteCache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_LANGCHAIN_CACHE",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "SQLiteCache",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--dev",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-dev",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "no-dev",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--path",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_FRONTEND_PATH",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--open-browser",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-open-browser",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_OPEN_BROWSER",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "open-browser",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--remove-api-keys",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-remove-api-keys",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_REMOVE_API_KEYS",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "no-remove-api-keys",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--install-completion [bash|zsh|fish|powershell|pwsh]",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--show-completion [bash|zsh|fish|powershell|pwsh]",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--backend-only",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "False",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_BACKEND_ONLY",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--store",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-store",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_STORE",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--auto-saving",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "True",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--no-auto-saving",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "LANGFLOW_AUTO_SAVING",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "CLI environment variables",
        "section": "CLI environment variables",
        "type": "h3"
    },
    {
        "content": "You can configure many of the CLI options using environment variables. These can be exported in your operating system or added to a .env file and loaded using the --env-file option.",
        "section": "CLI environment variables",
        "type": "p"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": "--env-file",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": "A sample .env file named .env.example is included with the project. Copy this file to a new file named .env and replace the example values with your actual settings. If you're setting values in both your OS and the .env file, the .env settings will take precedence.",
        "section": "CLI environment variables",
        "type": "p"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env.example",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "CLI environment variables",
        "type": "code"
    },
    {
        "content": "langflow superuser",
        "section": "langflow superuser",
        "type": "h2"
    },
    {
        "content": "Create a superuser for Langflow.",
        "section": "langflow superuser",
        "type": "p"
    },
    {
        "content": "_10langflow superuser_10# or_10python -m langflow superuser",
        "section": "langflow superuser",
        "type": "code"
    },
    {
        "content": "Options",
        "section": "Options",
        "type": "h3"
    },
    {
        "content": "--username",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--password",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--log-level",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "--help",
        "section": "Options",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Options",
        "type": "p"
    },
    {
        "content": "Community",
        "section": "Community",
        "type": "h1"
    },
    {
        "content": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "h2"
    },
    {
        "content": "Join us to ask questions and showcase your projects.",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "p"
    },
    {
        "content": "Let's bring together the building blocks of AI integration!",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "p"
    },
    {
        "content": "Langflow\u00a0\u00a0server.",
        "section": "\ud83e\udd16 Join\u00a0Langflow\u00a0Discord server",
        "type": "p"
    },
    {
        "content": "\ud83d\udc26 Stay tuned for\u00a0Langflow\u00a0on Twitter",
        "section": "\ud83d\udc26 Stay tuned for\u00a0Langflow\u00a0on Twitter",
        "type": "h2"
    },
    {
        "content": "Follow\u00a0\u00a0on\u00a0Twitter\u00a0to get the latest news about\u00a0Langflow.",
        "section": "\ud83d\udc26 Stay tuned for\u00a0Langflow\u00a0on Twitter",
        "type": "p"
    },
    {
        "content": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "section": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "type": "h2"
    },
    {
        "content": "You can \"star\"\u00a0Langflow\u00a0in\u00a0.",
        "section": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "type": "p"
    },
    {
        "content": "By adding a star, other users will be able to find it more easily and see that it has been already useful for others.",
        "section": "\u2b50\ufe0f Star\u00a0Langflow\u00a0on GitHub",
        "type": "p"
    },
    {
        "content": "\ud83d\udc40 Watch the GitHub repository for releases",
        "section": "\ud83d\udc40 Watch the GitHub repository for releases",
        "type": "h2"
    },
    {
        "content": "You can \"watch\"\u00a0Langflow\u00a0in\u00a0. If you select \"Watching\" instead of \"Releases only\" you will receive notifications when someone creates a new issue or question. You can also specify that you only want to be notified about new issues, discussions, PRs, etc. so you can try and help them solve those questions.",
        "section": "\ud83d\udc40 Watch the GitHub repository for releases",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\ud83d\udc40 Watch the GitHub repository for releases",
        "type": "p"
    },
    {
        "content": "GitHub Issues",
        "section": "GitHub Issues",
        "type": "h1"
    },
    {
        "content": "Our\u00a0\u00a0page is kept up to date with bugs, improvements, and feature requests. There is a taxonomy of labels to help with sorting and discovery of issues of interest.",
        "section": "GitHub Issues",
        "type": "p"
    },
    {
        "content": "If you're looking for help with your code, consider posting a question on the\u00a0. Please understand that we won't be able to provide individual support via email. We also believe that help is much more valuable if it's\u00a0shared publicly, so that more people can benefit from it.",
        "section": "GitHub Issues",
        "type": "p"
    },
    {
        "content": "Describing your issue:\u00a0Try to provide as many details as possible. What exactly goes wrong?\u00a0How\u00a0is it failing? Is there an error? \"XY doesn't work\" usually isn't that helpful for tracking down problems. Always remember to include the code you ran and if possible, extract only the relevant parts and don't just dump your entire script. This will make it easier for us to reproduce the error.\nSharing long blocks of code or logs:\u00a0If you need to include long code, logs or tracebacks, you can wrap them in\u00a0<details>\u00a0and\u00a0</details>. This\u00a0\u00a0so it only becomes visible on click, making the issue easier to read and follow.",
        "section": "GitHub Issues",
        "type": "ul"
    },
    {
        "content": "Describing your issue:\u00a0Try to provide as many details as possible. What exactly goes wrong?\u00a0How\u00a0is it failing? Is there an error? \"XY doesn't work\" usually isn't that helpful for tracking down problems. Always remember to include the code you ran and if possible, extract only the relevant parts and don't just dump your entire script. This will make it easier for us to reproduce the error.",
        "section": "GitHub Issues",
        "type": "li"
    },
    {
        "content": "Sharing long blocks of code or logs:\u00a0If you need to include long code, logs or tracebacks, you can wrap them in\u00a0<details>\u00a0and\u00a0</details>. This\u00a0\u00a0so it only becomes visible on click, making the issue easier to read and follow.",
        "section": "GitHub Issues",
        "type": "li"
    },
    {
        "content": "<details>",
        "section": "GitHub Issues",
        "type": "code"
    },
    {
        "content": "</details>",
        "section": "GitHub Issues",
        "type": "code"
    },
    {
        "content": "Issue labels",
        "section": "Issue labels",
        "type": "h2"
    },
    {
        "content": "for an overview of the system we use to tag our issues and pull requests.",
        "section": "Issue labels",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Issue labels",
        "type": "p"
    },
    {
        "content": "How to contribute?",
        "section": "How to contribute?",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "\ud83d\udc4b Hello there!",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "We welcome contributions from developers of all levels to our open-source project on\u00a0. If you'd like to contribute, please check our contributing guidelines and help make Langflow more accessible.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "As an open-source project in a rapidly developing field, we are extremely open to contributions, whether in the form of a new feature, improved infra, or better documentation.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "To contribute to this project, please follow a\u00a0\u00a0workflow. Please do not try to push directly to this repo unless you are a maintainer.",
        "section": "How to contribute?",
        "type": "p"
    },
    {
        "content": "Local Development",
        "section": "Local Development",
        "type": "h2"
    },
    {
        "content": "You can develop Langflow using docker compose, or locally.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "We provide a\u00a0.vscode/launch.json\u00a0file for debugging the backend in VSCode, which is a lot faster than using docker compose.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": ".vscode/launch.json",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "Setting up hooks:",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make init",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make init",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "This will install the pre-commit hooks, which will run\u00a0make format\u00a0on every commit.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make format",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "It is advised to run\u00a0make lint\u00a0before pushing to the repository.",
        "section": "Local Development",
        "type": "p"
    },
    {
        "content": "make lint",
        "section": "Local Development",
        "type": "code"
    },
    {
        "content": "Run Locally",
        "section": "Run Locally",
        "type": "h2"
    },
    {
        "content": "Langflow can run locally by cloning the repository and installing the dependencies. We recommend using a virtual environment to isolate the dependencies from your system.",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "Before you start, make sure you have the following installed:",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "Poetry (>=1.4)\nNode.js",
        "section": "Run Locally",
        "type": "ul"
    },
    {
        "content": "Poetry (>=1.4)",
        "section": "Run Locally",
        "type": "li"
    },
    {
        "content": "Node.js",
        "section": "Run Locally",
        "type": "li"
    },
    {
        "content": "Then, in the root folder, install the dependencies and start the development server for the backend:",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make backend",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make backend",
        "section": "Run Locally",
        "type": "code"
    },
    {
        "content": "And the frontend:",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make frontend",
        "section": "Run Locally",
        "type": "p"
    },
    {
        "content": "make frontend",
        "section": "Run Locally",
        "type": "code"
    },
    {
        "content": "Docker Compose",
        "section": "Docker Compose",
        "type": "h2"
    },
    {
        "content": "The following snippet will run the backend and frontend in separate containers. The frontend will be available at\u00a0localhost:3000\u00a0and the backend at\u00a0localhost:7860.",
        "section": "Docker Compose",
        "type": "p"
    },
    {
        "content": "localhost:3000",
        "section": "Docker Compose",
        "type": "code"
    },
    {
        "content": "localhost:7860",
        "section": "Docker Compose",
        "type": "code"
    },
    {
        "content": "docker compose up --build# ormake dev build=1",
        "section": "Docker Compose",
        "type": "p"
    },
    {
        "content": "docker compose up --build# ormake dev build=1",
        "section": "Docker Compose",
        "type": "code"
    },
    {
        "content": "Documentation",
        "section": "Documentation",
        "type": "h2"
    },
    {
        "content": "The documentation is built using\u00a0. To run the documentation locally, run the following commands:",
        "section": "Documentation",
        "type": "p"
    },
    {
        "content": "cd docsnpm installnpm run start",
        "section": "Documentation",
        "type": "p"
    },
    {
        "content": "cd docsnpm installnpm run start",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "The documentation will be available at\u00a0localhost:3000\u00a0and all the files are located in the\u00a0docs/docs\u00a0folder. Once you are done with your changes, you can create a Pull Request to the\u00a0main\u00a0branch.",
        "section": "Documentation",
        "type": "p"
    },
    {
        "content": "localhost:3000",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "docs/docs",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "main",
        "section": "Documentation",
        "type": "code"
    },
    {
        "content": "Submitting Components",
        "section": "Submitting Components",
        "type": "h2"
    },
    {
        "content": "New components are added as objects of the\u00a0\u00a0class and any dependencies are added to the\u00a0\u00a0file.",
        "section": "Submitting Components",
        "type": "p"
    },
    {
        "content": "Add an example component",
        "section": "Add an example component",
        "type": "h3"
    },
    {
        "content": "You have a new document loader called\u00a0MyCustomDocumentLoader\u00a0and it would look awesome in Langflow.",
        "section": "Add an example component",
        "type": "p"
    },
    {
        "content": "Write your loader as an object of the\u00a0\u00a0class. You'll create a new class,\u00a0MyCustomDocumentLoader, that will inherit from\u00a0CustomComponent\u00a0and override the base class's methods.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "MyCustomDocumentLoader",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "CustomComponent",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Define optional attributes like\u00a0display_name,\u00a0description, and\u00a0documentation\u00a0to provide information about your custom component.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "display_name",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "description",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "documentation",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Implement the\u00a0build_config\u00a0method to define the configuration options for your custom component.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "build_config",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Implement the\u00a0build\u00a0method to define the logic for taking input parameters specified in the\u00a0build_config\u00a0method and returning the desired output.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "build",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "build_config",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Add the code to the\u00a0\u00a0folder.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "Add the dependency to\u00a0\u00a0as\u00a0from .MyCustomDocumentLoader import MyCustomDocumentLoader.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "from .MyCustomDocumentLoader import MyCustomDocumentLoader",
        "section": "Add an example component",
        "type": "code"
    },
    {
        "content": "Add any new dependencies to the outer\u00a0\u00a0file.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "Submit documentation for your component. For this example, you'd submit documentation to the\u00a0.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "Submit your changes as a pull request. The Langflow team will have a look, suggest changes, and add your component to Langflow.",
        "section": "Add an example component",
        "type": "li"
    },
    {
        "content": "User Sharing",
        "section": "User Sharing",
        "type": "h2"
    },
    {
        "content": "You might want to share and test your custom component with others, but don't need it merged into the main source code.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "If so, you can share your component on the Langflow store.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": ".",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": ".",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Undergo pre-validation before receiving an API key.",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "Undergo pre-validation before receiving an API key.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "To deploy your amazing component directly to the Langflow store, without it being merged into the main source code, navigate to your flow, and then click\u00a0Share. The share window appears:",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "To deploy your amazing component directly to the Langflow store, without it being merged into the main source code, navigate to your flow, and then click\u00a0Share. The share window appears:",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Choose whether you want to flow to be public or private. You can also\u00a0Export\u00a0your flow as a JSON file from this window. When you're ready to share the flow, click\u00a0Share Flow. You should see a\u00a0Flow shared successfully\u00a0popup.",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "Choose whether you want to flow to be public or private. You can also\u00a0Export\u00a0your flow as a JSON file from this window. When you're ready to share the flow, click\u00a0Share Flow. You should see a\u00a0Flow shared successfully\u00a0popup.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "To confirm, navigate to the\u00a0Langflow Store\u00a0and filter results by\u00a0Created By Me. You should see your new flow on the\u00a0Langflow Store.",
        "section": "User Sharing",
        "type": "li"
    },
    {
        "content": "To confirm, navigate to the\u00a0Langflow Store\u00a0and filter results by\u00a0Created By Me. You should see your new flow on the\u00a0Langflow Store.",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "User Sharing",
        "type": "p"
    },
    {
        "content": "Telemetry",
        "section": "Telemetry",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "Our system uses anonymous telemetry to collect essential usage statistics to enhance functionality and user experience. This data helps us identify commonly used features and areas needing improvement, ensuring our development efforts align with what you need.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "We respect your privacy and are committed to protecting your data. We do not collect any personal information or sensitive data. All telemetry data is anonymized and used solely for improving Langflow.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "You can opt-out of telemetry by setting the\u00a0LANGFLOW_DO_NOT_TRACK\u00a0or\u00a0DO_NOT_TRACK\u00a0environment variable to\u00a0true\u00a0before running Langflow. This will disable telemetry data collection.",
        "section": "Telemetry",
        "type": "p"
    },
    {
        "content": "LANGFLOW_DO_NOT_TRACK",
        "section": "Telemetry",
        "type": "code"
    },
    {
        "content": "DO_NOT_TRACK",
        "section": "Telemetry",
        "type": "code"
    },
    {
        "content": "true",
        "section": "Telemetry",
        "type": "code"
    },
    {
        "content": "Data Collected Includes",
        "section": "Data Collected Includes",
        "type": "h2"
    },
    {
        "content": "Run",
        "section": "Run",
        "type": "h3"
    },
    {
        "content": "IsWebhook: Indicates whether the operation was triggered via a webhook.\nSeconds: Duration in seconds for how long the operation lasted, providing insights into performance.\nSuccess: Boolean value indicating whether the operation was successful, helping identify potential errors or issues.\nErrorMessage: Provides error message details if the operation was unsuccessful, aiding in troubleshooting and enhancements.",
        "section": "Run",
        "type": "ul"
    },
    {
        "content": "IsWebhook: Indicates whether the operation was triggered via a webhook.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Seconds: Duration in seconds for how long the operation lasted, providing insights into performance.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Success: Boolean value indicating whether the operation was successful, helping identify potential errors or issues.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "ErrorMessage: Provides error message details if the operation was unsuccessful, aiding in troubleshooting and enhancements.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Shutdown",
        "section": "Shutdown",
        "type": "h3"
    },
    {
        "content": "Time Running: Total runtime before shutdown, useful for understanding application lifecycle and optimizing uptime.",
        "section": "Shutdown",
        "type": "ul"
    },
    {
        "content": "Time Running: Total runtime before shutdown, useful for understanding application lifecycle and optimizing uptime.",
        "section": "Shutdown",
        "type": "li"
    },
    {
        "content": "Version",
        "section": "Version",
        "type": "h3"
    },
    {
        "content": "Version: The specific version of Langflow used, which helps in tracking feature adoption and compatibility.\nPlatform: Operating system of the host machine, which aids in focusing our support for popular platforms like Windows, macOS, and Linux.\nPython: The version of Python used, assisting in maintaining compatibility and support for various Python versions.\nArch: Architecture of the system (e.g., x86, ARM), which helps optimize our software for different hardware.\nAutoLogin: Indicates whether the auto-login feature is enabled, reflecting user preference settings.\nCacheType: Type of caching mechanism used, which impacts performance and efficiency.\nBackendOnly: Boolean indicating whether you are running Langflow in a backend-only mode, useful for understanding deployment configurations.",
        "section": "Version",
        "type": "ul"
    },
    {
        "content": "Version: The specific version of Langflow used, which helps in tracking feature adoption and compatibility.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Platform: Operating system of the host machine, which aids in focusing our support for popular platforms like Windows, macOS, and Linux.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Python: The version of Python used, assisting in maintaining compatibility and support for various Python versions.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Arch: Architecture of the system (e.g., x86, ARM), which helps optimize our software for different hardware.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "AutoLogin: Indicates whether the auto-login feature is enabled, reflecting user preference settings.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "CacheType: Type of caching mechanism used, which impacts performance and efficiency.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "BackendOnly: Boolean indicating whether you are running Langflow in a backend-only mode, useful for understanding deployment configurations.",
        "section": "Version",
        "type": "li"
    },
    {
        "content": "Playground",
        "section": "Playground",
        "type": "h3"
    },
    {
        "content": "Seconds: Duration in seconds for playground execution, offering insights into performance during testing or experimental stages.\nComponentCount: Number of components used in the playground, which helps understand complexity and usage patterns.\nSuccess: Success status of the playground operation, aiding in identifying the stability of experimental features.",
        "section": "Playground",
        "type": "ul"
    },
    {
        "content": "Seconds: Duration in seconds for playground execution, offering insights into performance during testing or experimental stages.",
        "section": "Playground",
        "type": "li"
    },
    {
        "content": "ComponentCount: Number of components used in the playground, which helps understand complexity and usage patterns.",
        "section": "Playground",
        "type": "li"
    },
    {
        "content": "Success: Success status of the playground operation, aiding in identifying the stability of experimental features.",
        "section": "Playground",
        "type": "li"
    },
    {
        "content": "Component",
        "section": "Component",
        "type": "h3"
    },
    {
        "content": "Name: Identifies the component, providing data on which components are most utilized or prone to issues.\nSeconds: Time taken by the component to execute, offering performance metrics.\nSuccess: Whether the component operated successfully, which helps in quality control.\nErrorMessage: Details of any errors encountered, crucial for debugging and improvement.",
        "section": "Component",
        "type": "ul"
    },
    {
        "content": "Name: Identifies the component, providing data on which components are most utilized or prone to issues.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "Seconds: Time taken by the component to execute, offering performance metrics.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "Success: Whether the component operated successfully, which helps in quality control.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "ErrorMessage: Details of any errors encountered, crucial for debugging and improvement.",
        "section": "Component",
        "type": "li"
    },
    {
        "content": "This telemetry data is crucial for enhancing Langflow and ensuring that our development efforts align with your needs. Your feedback and suggestions are invaluable in shaping the future of Langflow, and we appreciate your support in making Langflow better for everyone.",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Component",
        "type": "p"
    },
    {
        "content": "Docker",
        "section": "Docker",
        "type": "h1"
    },
    {
        "content": "This guide will help you get LangFlow up and running using Docker and Docker Compose.",
        "section": "Docker",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Docker\nDocker Compose",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "Docker",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Docker Compose",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Docker",
        "section": "Docker",
        "type": "h2"
    },
    {
        "content": "Clone repo and build Docker container",
        "section": "Clone repo and build Docker container",
        "type": "h3"
    },
    {
        "content": "Clone the LangFlow repository:\ngit clone https://github.com/langflow-ai/langflow.git",
        "section": "Clone repo and build Docker container",
        "type": "li"
    },
    {
        "content": "Clone the LangFlow repository:",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "git clone https://github.com/langflow-ai/langflow.git",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "git clone https://github.com/langflow-ai/langflow.git",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "Navigate to the\u00a0docker_example\u00a0directory:\ncd langflow/docker_example",
        "section": "Clone repo and build Docker container",
        "type": "li"
    },
    {
        "content": "Navigate to the\u00a0docker_example\u00a0directory:",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "docker_example",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "cd langflow/docker_example",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "cd langflow/docker_example",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "Run the Docker Compose file:\ndocker compose up",
        "section": "Clone repo and build Docker container",
        "type": "li"
    },
    {
        "content": "Run the Docker Compose file:",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "docker compose up",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "docker compose up",
        "section": "Clone repo and build Docker container",
        "type": "code"
    },
    {
        "content": "LangFlow will now be accessible at\u00a0.",
        "section": "Clone repo and build Docker container",
        "type": "p"
    },
    {
        "content": "Docker Compose configuration",
        "section": "Docker Compose configuration",
        "type": "h3"
    },
    {
        "content": "The Docker Compose configuration spins up two services:\u00a0langflow\u00a0and\u00a0postgres.",
        "section": "Docker Compose configuration",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "Docker Compose configuration",
        "type": "code"
    },
    {
        "content": "postgres",
        "section": "Docker Compose configuration",
        "type": "code"
    },
    {
        "content": "LangFlow service",
        "section": "LangFlow service",
        "type": "h3"
    },
    {
        "content": "The\u00a0langflow\u00a0service uses the\u00a0langflowai/langflow:latest\u00a0Docker image and exposes port 7860. It depends on the\u00a0postgres\u00a0service.",
        "section": "LangFlow service",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "langflowai/langflow:latest",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "postgres",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "Environment variables:",
        "section": "LangFlow service",
        "type": "p"
    },
    {
        "content": "LANGFLOW_DATABASE_URL: The connection string for the PostgreSQL database.\nLANGFLOW_CONFIG_DIR: The directory where LangFlow stores logs, file storage, monitor data, and secret keys.",
        "section": "LangFlow service",
        "type": "ul"
    },
    {
        "content": "LANGFLOW_DATABASE_URL: The connection string for the PostgreSQL database.",
        "section": "LangFlow service",
        "type": "li"
    },
    {
        "content": "LANGFLOW_DATABASE_URL",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "LANGFLOW_CONFIG_DIR: The directory where LangFlow stores logs, file storage, monitor data, and secret keys.",
        "section": "LangFlow service",
        "type": "li"
    },
    {
        "content": "LANGFLOW_CONFIG_DIR",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "Volumes:",
        "section": "LangFlow service",
        "type": "p"
    },
    {
        "content": "langflow-data: This volume is mapped to\u00a0/var/lib/langflow\u00a0in the container.",
        "section": "LangFlow service",
        "type": "ul"
    },
    {
        "content": "langflow-data: This volume is mapped to\u00a0/var/lib/langflow\u00a0in the container.",
        "section": "LangFlow service",
        "type": "li"
    },
    {
        "content": "langflow-data",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "/var/lib/langflow",
        "section": "LangFlow service",
        "type": "code"
    },
    {
        "content": "PostgreSQL service",
        "section": "PostgreSQL service",
        "type": "h3"
    },
    {
        "content": "The\u00a0postgres\u00a0service uses the\u00a0postgres:16\u00a0Docker image and exposes port 5432.",
        "section": "PostgreSQL service",
        "type": "p"
    },
    {
        "content": "postgres",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "postgres:16",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "Environment variables:",
        "section": "PostgreSQL service",
        "type": "p"
    },
    {
        "content": "POSTGRES_USER: The username for the PostgreSQL database.\nPOSTGRES_PASSWORD: The password for the PostgreSQL database.\nPOSTGRES_DB: The name of the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "ul"
    },
    {
        "content": "POSTGRES_USER: The username for the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "POSTGRES_USER",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "POSTGRES_PASSWORD: The password for the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "POSTGRES_PASSWORD",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "POSTGRES_DB: The name of the PostgreSQL database.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "POSTGRES_DB",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "Volumes:",
        "section": "PostgreSQL service",
        "type": "p"
    },
    {
        "content": "langflow-postgres: This volume is mapped to\u00a0/var/lib/postgresql/data\u00a0in the container.",
        "section": "PostgreSQL service",
        "type": "ul"
    },
    {
        "content": "langflow-postgres: This volume is mapped to\u00a0/var/lib/postgresql/data\u00a0in the container.",
        "section": "PostgreSQL service",
        "type": "li"
    },
    {
        "content": "langflow-postgres",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "/var/lib/postgresql/data",
        "section": "PostgreSQL service",
        "type": "code"
    },
    {
        "content": "Switch to a specific LangFlow version",
        "section": "Switch to a specific LangFlow version",
        "type": "h3"
    },
    {
        "content": "If you want to use a specific version of LangFlow, you can modify the\u00a0image\u00a0field under the\u00a0langflow\u00a0service in the Docker Compose file. For example, to use version 1.0-alpha, change\u00a0langflowai/langflow:latest\u00a0to\u00a0langflowai/langflow:1.0-alpha.",
        "section": "Switch to a specific LangFlow version",
        "type": "p"
    },
    {
        "content": "image",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "langflow",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "langflowai/langflow:latest",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "langflowai/langflow:1.0-alpha",
        "section": "Switch to a specific LangFlow version",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Switch to a specific LangFlow version",
        "type": "p"
    },
    {
        "content": "GCP",
        "section": "GCP",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "GCP",
        "type": "p"
    },
    {
        "content": "Deploy on Google Cloud Platform",
        "section": "Deploy on Google Cloud Platform",
        "type": "h2"
    },
    {
        "content": "Run Langflow from a New Google Cloud Project",
        "section": "Run Langflow from a New Google Cloud Project",
        "type": "h3"
    },
    {
        "content": "This guide will help you set up a Langflow development VM in a Google Cloud Platform project using Google Cloud Shell.",
        "section": "Run Langflow from a New Google Cloud Project",
        "type": "p"
    },
    {
        "content": "When Cloud Shell opens, be sure to select Trust repo. Some gcloud commands might not run in an ephemeral Cloud Shell environment.",
        "section": "Run Langflow from a New Google Cloud Project",
        "type": "p"
    },
    {
        "content": "Standard VM",
        "section": "Standard VM",
        "type": "h3"
    },
    {
        "content": "This script sets up a Debian-based VM with the Langflow package, Nginx, and the necessary configurations to run the Langflow Dev environment.",
        "section": "Standard VM",
        "type": "p"
    },
    {
        "content": "Spot/Preemptible Instance",
        "section": "Spot/Preemptible Instance",
        "type": "h2"
    },
    {
        "content": "When running as a , the code and VM will behave the same way as in a regular instance, executing the startup script to configure the environment, install necessary dependencies, and run the Langflow application. However, due to the nature of spot instances, the VM may be terminated at any time if Google Cloud needs to reclaim the resources. This makes spot instances suitable for fault-tolerant, stateless, or interruptible workloads that can handle unexpected terminations and restarts.",
        "section": "Spot/Preemptible Instance",
        "type": "p"
    },
    {
        "content": "Pricing (approximate)",
        "section": "Pricing (approximate)",
        "type": "h2"
    },
    {
        "content": "For a more accurate breakdown of costs, please use the GCP Pricing Calculator",
        "section": "Pricing (approximate)",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Pricing (approximate)",
        "type": "p"
    },
    {
        "content": "\ud83e\udd17\u00a0Spaces",
        "section": "\ud83e\udd17\u00a0Spaces",
        "type": "h1"
    },
    {
        "content": "HuggingFace Spaces",
        "section": "HuggingFace Spaces",
        "type": "h2"
    },
    {
        "content": "HuggingFace provides a great alternative for running Langflow in their Spaces environment. This means you can run Langflow in the cloud without any local installation required. Here's how you can get Langflow up and running on HuggingFace Spaces:",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Access Langflow Space: Open a Chromium-based browser and navigate to the\u00a0. This link directs you to a pre-configured environment for Langflow.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Access Langflow Space: Open a Chromium-based browser and navigate to the\u00a0. This link directs you to a pre-configured environment for Langflow.",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Duplicate the Space: You'll encounter an option to duplicate the Langflow space. This step involves a few simple decisions:\n\nNaming Your Space: Assign a unique name to your new Space.\nVisibility Settings: Choose between Public or Private visibility for your Space.\nAfter setting these parameters, click on\u00a0Duplicate Space\u00a0to initiate the setup.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Duplicate the Space: You'll encounter an option to duplicate the Langflow space. This step involves a few simple decisions:",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Naming Your Space: Assign a unique name to your new Space.\nVisibility Settings: Choose between Public or Private visibility for your Space.\nAfter setting these parameters, click on\u00a0Duplicate Space\u00a0to initiate the setup.",
        "section": "HuggingFace Spaces",
        "type": "ul"
    },
    {
        "content": "Naming Your Space: Assign a unique name to your new Space.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Visibility Settings: Choose between Public or Private visibility for your Space.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "After setting these parameters, click on\u00a0Duplicate Space\u00a0to initiate the setup.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Complete Installation: The duplication and setup process begins immediately after you click\u00a0Duplicate Space. Once completed, you will be automatically redirected to the main page of your new Space.",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Complete Installation: The duplication and setup process begins immediately after you click\u00a0Duplicate Space. Once completed, you will be automatically redirected to the main page of your new Space.",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Start Exploring Langflow: With the setup complete, Langflow is now ready for use in your Space and you can start exploring its features and capabilities right away!",
        "section": "HuggingFace Spaces",
        "type": "li"
    },
    {
        "content": "Start Exploring Langflow: With the setup complete, Langflow is now ready for use in your Space and you can start exploring its features and capabilities right away!",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "HuggingFace Spaces",
        "type": "p"
    },
    {
        "content": "Kubernetes",
        "section": "Kubernetes",
        "type": "h1"
    },
    {
        "content": "This guide will help you get LangFlow up and running in Kubernetes cluster, including the following steps:",
        "section": "Kubernetes",
        "type": "p"
    },
    {
        "content": "Install  in a Kubernetes cluster (for development)\nInstall  in a Kubernetes cluster (for production runtime workloads)",
        "section": "Kubernetes",
        "type": "ul"
    },
    {
        "content": "Install  in a Kubernetes cluster (for development)",
        "section": "Kubernetes",
        "type": "li"
    },
    {
        "content": "Install  in a Kubernetes cluster (for production runtime workloads)",
        "section": "Kubernetes",
        "type": "li"
    },
    {
        "content": "LangFlow (IDE)",
        "section": "LangFlow (IDE)",
        "type": "h2"
    },
    {
        "content": "This solution is designed to provide a complete environment for developers to create, test, and debug their flows. It includes both the API and the UI.",
        "section": "LangFlow (IDE)",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h3"
    },
    {
        "content": "Kubernetes server\nkubectl\nHelm",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "Kubernetes server",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "kubectl",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Helm",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Step 0. Prepare a Kubernetes cluster",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "h3"
    },
    {
        "content": "We use  for this example, but you can use any Kubernetes cluster.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "Create a Kubernetes cluster on Minikube.\n_10minikube start",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "li"
    },
    {
        "content": "Create a Kubernetes cluster on Minikube.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "_10minikube start",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "code"
    },
    {
        "content": "Set kubectl to use Minikube.\n_10kubectl config use-context minikube",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "li"
    },
    {
        "content": "Set kubectl to use Minikube.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "kubectl",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "code"
    },
    {
        "content": "_10kubectl config use-context minikube",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "code"
    },
    {
        "content": "Step 1. Install the LangFlow Helm chart",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "h3"
    },
    {
        "content": "Add the repository to Helm.\n_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "li"
    },
    {
        "content": "Add the repository to Helm.",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "p"
    },
    {
        "content": "_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "Install LangFlow with the default options in the langflow namespace.\n_10helm install langflow-ide langflow/langflow-ide -n langflow --create-namespace",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "li"
    },
    {
        "content": "Install LangFlow with the default options in the langflow namespace.",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "_10helm install langflow-ide langflow/langflow-ide -n langflow --create-namespace",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "Check the status of the pods\n_10kubectl get pods -n langflow\n_10NAME                                 READY   STATUS    RESTARTS       AGE_10langflow-0                           1/1     Running   0              33s_10langflow-frontend-5d9c558dbb-g7tc9   1/1     Running   0              38s",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "li"
    },
    {
        "content": "Check the status of the pods",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "p"
    },
    {
        "content": "_10kubectl get pods -n langflow",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "_10NAME                                 READY   STATUS    RESTARTS       AGE_10langflow-0                           1/1     Running   0              33s_10langflow-frontend-5d9c558dbb-g7tc9   1/1     Running   0              38s",
        "section": "Step 1. Install the LangFlow Helm chart",
        "type": "code"
    },
    {
        "content": "Step 2. Access LangFlow",
        "section": "Step 2. Access LangFlow",
        "type": "h3"
    },
    {
        "content": "Enable local port forwarding to access LangFlow from your local machine.",
        "section": "Step 2. Access LangFlow",
        "type": "p"
    },
    {
        "content": "_10kubectl port-forward -n langflow svc/langflow-langflow-runtime 7860:7860",
        "section": "Step 2. Access LangFlow",
        "type": "code"
    },
    {
        "content": "Now you can access LangFlow at .",
        "section": "Step 2. Access LangFlow",
        "type": "p"
    },
    {
        "content": "LangFlow version",
        "section": "LangFlow version",
        "type": "h3"
    },
    {
        "content": "To specify a different LangFlow version, you can set the langflow.backend.image.tag and langflow.frontend.image.tag values in the values.yaml file.",
        "section": "LangFlow version",
        "type": "p"
    },
    {
        "content": "langflow.backend.image.tag",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "langflow.frontend.image.tag",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "_10langflow:_10  backend:_10    image:_10      tag: \"1.0.0a59\"_10  frontend:_10    image:_10      tag: \"1.0.0a59\"",
        "section": "LangFlow version",
        "type": "code"
    },
    {
        "content": "Storage",
        "section": "Storage",
        "type": "h3"
    },
    {
        "content": "By default, the chart will use a SQLLite database stored in a local persistent disk.\nIf you want to use an external PostgreSQL database, you can set the langflow.database values in the values.yaml file.",
        "section": "Storage",
        "type": "p"
    },
    {
        "content": "langflow.database",
        "section": "Storage",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Storage",
        "type": "code"
    },
    {
        "content": "_30# Deploy postgresql. You can skip this section if you have an existing postgresql database._30postgresql:_30  enabled: true_30  fullnameOverride: \"langflow-ide-postgresql-service\"_30  auth:_30    username: \"langflow\"_30    password: \"langflow-postgres\"_30    database: \"langflow-db\"_30_30langflow:_30  backend:_30    externalDatabase:_30      enabled: true_30      driver:_30        value: \"postgresql\"_30      host:_30        value: \"langflow-ide-postgresql-service\"_30      port:_30        value: \"5432\"_30      database:_30        value: \"langflow-db\"_30      user:_30        value: \"langflow\"_30      password:_30        valueFrom:_30          secretKeyRef:_30            key: \"password\"_30            name: \"langflow-ide-postgresql-service\"_30    sqlite:_30      enabled: false",
        "section": "Storage",
        "type": "code"
    },
    {
        "content": "Scaling",
        "section": "Scaling",
        "type": "h3"
    },
    {
        "content": "You can scale the number of replicas for the LangFlow backend and frontend services by changing the replicaCount value in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "replicaCount",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_10langflow:_10  backend:_10    replicaCount: 3_10  frontend:_10    replicaCount: 3",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "You can scale frontend and backend services independently.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "To scale vertically (increase the resources for the pods), you can set the resources values in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "resources",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_11langflow:_11  backend:_11    resources:_11      requests:_11        memory: \"2Gi\"_11        cpu: \"1000m\"_11  frontend:_11    resources:_11      requests:_11        memory: \"1Gi\"_11        cpu: \"1000m\"",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "Deploy on AWS EKS, Google GKE, or Azure AKS and other examples",
        "section": "Deploy on AWS EKS, Google GKE, or Azure AKS and other examples",
        "type": "h3"
    },
    {
        "content": "Visit the  for more information.",
        "section": "Deploy on AWS EKS, Google GKE, or Azure AKS and other examples",
        "type": "p"
    },
    {
        "content": "LangFlow (Runtime)",
        "section": "LangFlow (Runtime)",
        "type": "h2"
    },
    {
        "content": "The runtime chart is tailored for deploying applications in a production environment. It is focused on stability, performance, isolation, and security to ensure that applications run reliably and efficiently.",
        "section": "LangFlow (Runtime)",
        "type": "p"
    },
    {
        "content": "Using a dedicated deployment for a set of flows is fundamental in production environments to have granular resource control.",
        "section": "LangFlow (Runtime)",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h3"
    },
    {
        "content": "Kubernetes server\nkubectl\nHelm",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "Kubernetes server",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "kubectl",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Helm",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Step 0. Prepare a Kubernetes cluster",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "h3"
    },
    {
        "content": "Follow the same steps as for the LangFlow IDE.",
        "section": "Step 0. Prepare a Kubernetes cluster",
        "type": "p"
    },
    {
        "content": "Step 1. Install the LangFlow runtime Helm chart",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "h3"
    },
    {
        "content": "Add the repository to Helm.\n_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "li"
    },
    {
        "content": "Add the repository to Helm.",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "p"
    },
    {
        "content": "_10helm repo add langflow <https://langflow-ai.github.io/langflow-helm-charts>_10helm repo update",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "Install the LangFlow app with the default options in the langflow namespace.\nIf you bundled the flow in a docker image, you can specify the image name in the values.yaml file or with the -set flag:\nIf you want to download the flow from a remote location, you can specify the URL in the values.yaml file or with the -set flag:\n_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set image.repository=myuser/langflow-just-chat --set image.tag=1.0.0\n_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set downloadFlows.flows[0].url=https://raw.githubusercontent.com/langflow-ai/langflow/dev/src/backend/base/langflow/initial_setup/starter_projects/Basic%20Prompting%20(Hello%2C%20world!).json",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "li"
    },
    {
        "content": "Install the LangFlow app with the default options in the langflow namespace.\nIf you bundled the flow in a docker image, you can specify the image name in the values.yaml file or with the -set flag:\nIf you want to download the flow from a remote location, you can specify the URL in the values.yaml file or with the -set flag:",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "p"
    },
    {
        "content": "langflow",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "-set",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "-set",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set image.repository=myuser/langflow-just-chat --set image.tag=1.0.0",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "_10helm install my-langflow-app langflow/langflow-runtime -n langflow --create-namespace --set downloadFlows.flows[0].url=https://raw.githubusercontent.com/langflow-ai/langflow/dev/src/backend/base/langflow/initial_setup/starter_projects/Basic%20Prompting%20(Hello%2C%20world!).json",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "Check the status of the pods.\n_10kubectl get pods -n langflow",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "li"
    },
    {
        "content": "Check the status of the pods.",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "p"
    },
    {
        "content": "_10kubectl get pods -n langflow",
        "section": "Step 1. Install the LangFlow runtime Helm chart",
        "type": "code"
    },
    {
        "content": "Step 2. Access the LangFlow app API",
        "section": "Step 2. Access the LangFlow app API",
        "type": "h3"
    },
    {
        "content": "Enable local port forwarding to access LangFlow from your local machine.",
        "section": "Step 2. Access the LangFlow app API",
        "type": "p"
    },
    {
        "content": "_10kubectl port-forward -n langflow svc/langflow-my-langflow-app 7860:7860",
        "section": "Step 2. Access the LangFlow app API",
        "type": "code"
    },
    {
        "content": "Now you can access the API at  and execute the flow:",
        "section": "Step 2. Access the LangFlow app API",
        "type": "p"
    },
    {
        "content": "_10id=$(curl -s <http://localhost:7860/api/v1/flows> | jq -r '.flows[0].id')_10curl -X POST \\\\_10    \"<http://localhost:7860/api/v1/run/$id?stream=false>\" \\\\_10    -H 'Content-Type: application/json'\\\\_10    -d '{_10      \"input_value\": \"Hello!\",_10      \"output_type\": \"chat\",_10      \"input_type\": \"chat\"_10    }'",
        "section": "Step 2. Access the LangFlow app API",
        "type": "code"
    },
    {
        "content": "Storage",
        "section": "Storage",
        "type": "h3"
    },
    {
        "content": "In this case, storage is not needed as our deployment is stateless.",
        "section": "Storage",
        "type": "p"
    },
    {
        "content": "Log level and LangFlow configurations",
        "section": "Log level and LangFlow configurations",
        "type": "h3"
    },
    {
        "content": "You can set the log level and other LangFlow configurations in the values.yaml file.",
        "section": "Log level and LangFlow configurations",
        "type": "p"
    },
    {
        "content": "values.yaml",
        "section": "Log level and LangFlow configurations",
        "type": "code"
    },
    {
        "content": "_10env:_10  - name: LANGFLOW_LOG_LEVEL_10    value: \"INFO\"",
        "section": "Log level and LangFlow configurations",
        "type": "code"
    },
    {
        "content": "Configure secrets and variables",
        "section": "Configure secrets and variables",
        "type": "h3"
    },
    {
        "content": "To inject secrets and LangFlow global variables, you can use the secrets and env sections in the values.yaml file.",
        "section": "Configure secrets and variables",
        "type": "p"
    },
    {
        "content": "secrets",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "env",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "Let's say your flow uses a global variable which is a secret; when you export the flow as JSON, it's recommended to not include it.\nWhen importing the flow in the LangFlow runtime, you can set the global variable using the env section in the values.yaml file.\nAssuming you have a global variable called openai_key_var, you can read it directly from a secret:",
        "section": "Configure secrets and variables",
        "type": "p"
    },
    {
        "content": "env",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "openai_key_var",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "_10env:_10  - name: openai_key_var_10    valueFrom:_10      secretKeyRef:_10        name: openai-key_10        key: openai-key",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "or directly from the values file (not recommended for secret values!):",
        "section": "Configure secrets and variables",
        "type": "p"
    },
    {
        "content": "_10env:_10  - name: openai_key_var_10    value: \"sk-....\"",
        "section": "Configure secrets and variables",
        "type": "code"
    },
    {
        "content": "Scaling",
        "section": "Scaling",
        "type": "h3"
    },
    {
        "content": "You can scale the number of replicas for the LangFlow app by changing the replicaCount value in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "replicaCount",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_10replicaCount: 3",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "To scale vertically (increase the resources for the pods), you can set the resources values in the values.yaml file.",
        "section": "Scaling",
        "type": "p"
    },
    {
        "content": "resources",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "values.yaml",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "_10resources:_10  requests:_10    memory: \"2Gi\"_10    cpu: \"1000m\"",
        "section": "Scaling",
        "type": "code"
    },
    {
        "content": "Other Examples",
        "section": "Other Examples",
        "type": "h2"
    },
    {
        "content": "Visit the LangFlow Helm Charts repository for more examples and configurations. Use the default values file as reference for all the options available.",
        "section": "Other Examples",
        "type": "p"
    },
    {
        "content": "Visit the examples directory to learn more about different deployment options.",
        "section": "Other Examples",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Other Examples",
        "type": "p"
    },
    {
        "content": "Railway",
        "section": "Railway",
        "type": "h1"
    },
    {
        "content": "Deploy on Railway",
        "section": "Deploy on Railway",
        "type": "h2"
    },
    {
        "content": "Railway is a cloud infrastructure platform that enables developers to deploy and manage applications effortlessly. It provides an intuitive interface, seamless integrations, and powerful features like auto-deploy from GitHub, managed databases, and automatic scaling.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Deploying Langflow to Railway involves a few simple steps:",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Railway platform.",
        "section": "Deploy on Railway",
        "type": "li"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Railway platform.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Deploy: Proceed to deploy your Langflow instance. Click Deploy Now to deploy the instance. Railway will handle the rest, including setting up the infrastructure, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Railway",
        "type": "li"
    },
    {
        "content": "Deploy: Proceed to deploy your Langflow instance. Click Deploy Now to deploy the instance. Railway will handle the rest, including setting up the infrastructure, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "By following these steps, your Langflow instance will be successfully deployed on Railway.",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Deploy on Railway",
        "type": "p"
    },
    {
        "content": "Render",
        "section": "Render",
        "type": "h1"
    },
    {
        "content": "Deploy on Render",
        "section": "Deploy on Render",
        "type": "h2"
    },
    {
        "content": "is a unified cloud platform designed to make deploying web applications, APIs, and static sites easy. It provides a streamlined experience with powerful features like automatic SSL, managed databases, and auto-deploy from Git, making it a popular choice for developers looking to simplify their deployment workflows.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Deploying Langflow to Render is a straightforward process that can be completed in just a few steps:",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Render platform.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "Click the Button Below: Start by clicking the deployment button provided below. This will redirect you to the Render platform.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Select the Blueprint Configuration: Once on the Render platform, you will be prompted to provide a blueprint name and to select the branch for your render.yaml file in Langflow. This configuration file includes all the necessary settings and resources to deploy Langflow in Render. The default is main.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "Select the Blueprint Configuration: Once on the Render platform, you will be prompted to provide a blueprint name and to select the branch for your render.yaml file in Langflow. This configuration file includes all the necessary settings and resources to deploy Langflow in Render. The default is main.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "render.yaml",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "main",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "The render.yaml file specifies a standard Render instance, because Langflow requires at least 2 GB of RAM to run. This may require a credit card to sign up. Review the pricing details on the Render platform to understand any costs involved before proceeding. If you need to change your plan later, from the Render dashboard, go to Settings > Instance Type.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "The render.yaml file specifies a standard Render instance, because Langflow requires at least 2 GB of RAM to run. This may require a credit card to sign up. Review the pricing details on the Render platform to understand any costs involved before proceeding. If you need to change your plan later, from the Render dashboard, go to Settings > Instance Type.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "render.yaml",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "standard",
        "section": "Deploy on Render",
        "type": "code"
    },
    {
        "content": "Click Deploy Blueprint to deploy Langflow. Render will handle the rest, including setting up the database, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Render",
        "type": "li"
    },
    {
        "content": "Click Deploy Blueprint to deploy Langflow. Render will handle the rest, including setting up the database, deploying the Langflow instance, and starting the application.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "By following these steps, your Langflow instance will be successfully deployed on Render.",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Deploy on Render",
        "type": "p"
    },
    {
        "content": "\u2757\ufe0f Common Installation Issues",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "h1"
    },
    {
        "content": "This is a list of possible issues that you may encounter when installing Langflow and how to solve them.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "_10> No\u00a0module\u00a0named\u00a0'langflow.__main__'",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "Run\u00a0python\u00a0-m langflow run\u00a0instead of\u00a0langflow run.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "python\u00a0-m langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "If that doesn't work, reinstall Langflow with\u00a0_python\u00a0-m pip install langflow\u00a0--pre\u00a0-U.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "_python\u00a0-m pip install langflow\u00a0--pre\u00a0-U",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "If that doesn't work, reinstall Langflow and its dependencies with\u00a0python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "When you try to run Langflow using the command\u00a0langflow run, you may encounter the following error:",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "_10> langflow runTraceback (most recent call last): File \".../langflow\", line 5, in <module>  from langflow.__main__ import mainModuleNotFoundError: No module named 'langflow.__main__'",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "There are two possible reasons for this error:",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "You've installed Langflow using\u00a0pip install langflow\u00a0but you already had a previous version of Langflow installed in your system. In this case, you might be running the wrong executable. To solve this issue, run the correct executable by running\u00a0python\u00a0-m langflow run\u00a0instead of\u00a0langflow run. If that doesn't work, try uninstalling and reinstalling Langflow with\u00a0python\u00a0-m pip install langflow\u00a0--pre\u00a0-U.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "pip install langflow",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "python\u00a0-m langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "langflow run",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "python\u00a0-m pip install langflow\u00a0--pre\u00a0-U",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "Some version conflicts might have occurred during the installation process. Run\u00a0python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall\u00a0to reinstall Langflow and its dependencies.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "python\u00a0-m pip install langflow\u00a0--pre\u00a0-U\u00a0--force-reinstall",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "_10> Something went wrong running migrations. Please, run\u00a0'langflow migration --fix'",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "Clear the cache by deleting the contents of the cache folder.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "This folder can be found at:",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "Linux or WSL2 on Windows:\u00a0home/<username>/.cache/langflow/\nMacOS:\u00a0/Users/<username>/Library/Caches/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "ul"
    },
    {
        "content": "Linux or WSL2 on Windows:\u00a0home/<username>/.cache/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "home/<username>/.cache/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "MacOS:\u00a0/Users/<username>/Library/Caches/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "li"
    },
    {
        "content": "/Users/<username>/Library/Caches/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "This error can occur during Langflow upgrades when the new version can't override\u00a0langflow-pre.db\u00a0in\u00a0.cache/langflow/. Clearing the cache removes this file but will also erase your settings.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "langflow-pre.db",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": ".cache/langflow/",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "code"
    },
    {
        "content": "If you wish to retain your files, back them up before clearing the folder.",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\u2757\ufe0f Common Installation Issues",
        "type": "p"
    },
    {
        "content": "\ud83d\udce6\u00a0Installation",
        "section": "\ud83d\udce6\u00a0Installation",
        "type": "h1"
    },
    {
        "content": "DataStax Langflow",
        "section": "DataStax Langflow",
        "type": "h2"
    },
    {
        "content": "The easiest way to get started with Langflow is through the DataStax Cloud Service!",
        "section": "DataStax Langflow",
        "type": "p"
    },
    {
        "content": "DataStax Langflow is a hosted version of Langflow integrated with\u00a0. Be up and running in minutes with no installation or setup required.\u00a0.",
        "section": "DataStax Langflow",
        "type": "p"
    },
    {
        "content": "Install Langflow Locally",
        "section": "Install Langflow Locally",
        "type": "h2"
    },
    {
        "content": "Langflow\u00a0requires\u00a0Python version 3.10 or greater and\u00a0\u00a0or\u00a0\u00a0to be installed on your system.",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "Install Langflow with pip:",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "_10python -m pip install langflow -U",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "Install Langflow with pipx:",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "_10pipx install langflow --python python3.10 --fetch-missing-python",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "Pipx can fetch the missing Python version for you with\u00a0--fetch-missing-python, but you can also install the Python version manually. Use\u00a0--force-reinstall\u00a0to ensure you have the latest version of Langflow and its dependencies.",
        "section": "Install Langflow Locally",
        "type": "p"
    },
    {
        "content": "--fetch-missing-python",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "--force-reinstall",
        "section": "Install Langflow Locally",
        "type": "code"
    },
    {
        "content": "Having a problem?",
        "section": "Having a problem?",
        "type": "h2"
    },
    {
        "content": "If you encounter a problem, see\u00a0.",
        "section": "Having a problem?",
        "type": "p"
    },
    {
        "content": "To get help in the Langflow CLI:",
        "section": "Having a problem?",
        "type": "p"
    },
    {
        "content": "_10python -m langflow --help",
        "section": "Having a problem?",
        "type": "code"
    },
    {
        "content": "\u26d3\ufe0f Run Langflow",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "h2"
    },
    {
        "content": "To run Langflow, enter the following command.",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "li"
    },
    {
        "content": "_10python -m langflow run",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "code"
    },
    {
        "content": "Confirm that a local Langflow instance starts by visiting\u00a0http://127.0.0.1:7860\u00a0in a Chromium-based browser.",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "li"
    },
    {
        "content": "http://127.0.0.1:7860",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "code"
    },
    {
        "content": "Continue on to the\u00a0.",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\u26d3\ufe0f Run Langflow",
        "type": "p"
    },
    {
        "content": "\u26a1\ufe0f Quickstart",
        "section": "\u26a1\ufe0f Quickstart",
        "type": "h1"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "and\u00a0\u00a0or",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "and\u00a0\u00a0or",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Basic Prompting",
        "section": "Basic Prompting",
        "type": "h2"
    },
    {
        "content": "Create the basic prompting project",
        "section": "Create the basic prompting project",
        "type": "h3"
    },
    {
        "content": "From the Langflow dashboard, click\u00a0New Project.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Basic Prompting.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Basic Prompting.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "The\u00a0Basic Prompting\u00a0flow is created.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "The\u00a0Basic Prompting\u00a0flow is created.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "This flow allows you to chat with the\u00a0OpenAI\u00a0component through the\u00a0Prompt\u00a0component.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "Examine the\u00a0Prompt\u00a0component. The\u00a0Template\u00a0field instructs the LLM to\u00a0Answer the user as if you were a pirate.\u00a0This should be interesting...",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "Answer the user as if you were a pirate.",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "To create an environment variable for the\u00a0OpenAI\u00a0component, in the\u00a0OpenAI API Key\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.\n\nIn the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.\nIn the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).\nClick\u00a0Save Variable.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "To create an environment variable for the\u00a0OpenAI\u00a0component, in the\u00a0OpenAI API Key\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "In the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "openai_api_key",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "In the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "sk-...",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "Click\u00a0Save Variable.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Run",
        "section": "Run",
        "type": "h3"
    },
    {
        "content": "Click the\u00a0Playground\u00a0button on the control panel (bottom right side of the workspace). This is where you can interact with your AI.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Type a message and press Enter. The bot should respond in a markedly piratical manner!",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Modify the prompt for a different result",
        "section": "Modify the prompt for a different result",
        "type": "h3"
    },
    {
        "content": "To modify your prompt results, in the\u00a0Prompt\u00a0template, click the\u00a0Template\u00a0field. The\u00a0Edit Prompt\u00a0window opens.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Change\u00a0Answer the user as if you were a pirate\u00a0to a different character, perhaps\u00a0Answer the user as if you were Hermione Granger.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Answer the user as if you were a pirate",
        "section": "Modify the prompt for a different result",
        "type": "code"
    },
    {
        "content": "Answer the user as if you were Hermione Granger.",
        "section": "Modify the prompt for a different result",
        "type": "code"
    },
    {
        "content": "Run the workflow again. The response will be markedly different.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Next steps",
        "section": "Next steps",
        "type": "h2"
    },
    {
        "content": "Well done! You've built your first prompt in Langflow. \ud83c\udf89",
        "section": "Next steps",
        "type": "p"
    },
    {
        "content": "By dragging Langflow components to your workspace, you can create all sorts of interesting behaviors. Here are a couple of examples:",
        "section": "Next steps",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Next steps",
        "type": "p"
    },
    {
        "content": "Chat Memory",
        "section": "Chat Memory",
        "type": "h1"
    },
    {
        "content": "Langflow allows every chat message to be stored, and a single flow can have multiple memory sessions. This enables you to create separate memories for agents to store and recall information as needed.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "In any project, as long as there are  being used, memories are always being stored by default. These are messages from a user to the AI or vice-versa.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "To see and access this history of messages, Langflow features a component called Chat Memory. It retrieves previous messages and outputs them in structured format or parsed.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "To learn the basics about memory in Langflow, check out the starter example.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Memories can be visualized and managed directly from the Playground. You can edit and remove previous messages to inspect and validate the AI\u2019s response behavior. You can remove or edit previous messages to get your models acting just right.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Modifying these memories will influence the behavior of the chatbot responses, as long as an agent uses them. Here you have the ability to remove or edit previous messages, allowing them to manipulate and explore how these changes affect model responses.",
        "section": "Chat Memory",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "h2"
    },
    {
        "content": "Chat conversations store messages categorized by a Session ID. A a single flow can host multiple session IDs, and different flows can also share the same one.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "The Chat Memory component also retrieves message histories by Session ID which users can change in the advanced settings.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "By default, if the Session ID  value is empty, it is set to match the the same value as the Flow ID.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "Flow ID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "You can also display all messages stored across every flow and session by going to\u00a0Settings\u00a0>\u00a0Messages.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Data & Message",
        "section": "Data & Message",
        "type": "h1"
    },
    {
        "content": "In Langflow, the\u00a0Data\u00a0and\u00a0Message\u00a0objects serve as structured, functional representations of data that enhance the capabilities and reliability of the platform.",
        "section": "Data & Message",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Data & Message",
        "type": "code"
    },
    {
        "content": "Message",
        "section": "Data & Message",
        "type": "code"
    },
    {
        "content": "The Data Object",
        "section": "The Data Object",
        "type": "h2"
    },
    {
        "content": "The\u00a0Data\u00a0object is a Pydantic model that serves as a container for storing and manipulating data. It carries\u00a0data\u2014a dictionary that can be accessed as attributes\u2014and uses\u00a0text_key\u00a0to specify which key in the dictionary should be considered the primary text content.",
        "section": "The Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "text_key",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Specifies the key to retrieve the primary text data.\ndata: A dictionary to store additional data.\ndefault_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "ul"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Specifies the key to retrieve the primary text data.\ndata: A dictionary to store additional data.\ndefault_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "text_key: Specifies the key to retrieve the primary text data.\ndata: A dictionary to store additional data.\ndefault_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "ul"
    },
    {
        "content": "text_key: Specifies the key to retrieve the primary text data.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "text_key",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "data: A dictionary to store additional data.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "default_value:  default value when the\u00a0text_key\u00a0is not present in the\u00a0data\u00a0dictionary.",
        "section": "The Data Object",
        "type": "li"
    },
    {
        "content": "default_value",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "text_key",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "data",
        "section": "The Data Object",
        "type": "code"
    },
    {
        "content": "Creating a Data Object",
        "section": "Creating a Data Object",
        "type": "h3"
    },
    {
        "content": "You can create a\u00a0Data\u00a0object by directly assigning key-value pairs to it. For example:",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "_10from langflow.schema import Data_10_10# Creating a Data object with specified key-value pairs_10data = Data(text=\"my_string\", bar=3, foo=\"another_string\")_10_10# Outputs:_10print(data.text)  # Outputs: \"my_string\"_10print(data.bar)   # Outputs: 3_10print(data.foo)   # Outputs: \"another_string\"",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "The\u00a0text_key\u00a0specifies which key in the\u00a0data\u00a0dictionary should be considered the primary text content. The\u00a0default_value\u00a0provides a fallback if the\u00a0text_key\u00a0is not present.",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "text_key",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "default_value",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "text_key",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "_10# Creating a Data object with a specific text_key and default_value_10data = Data(data={\"title\": \"Hello, World!\"}, text_key=\"content\", default_value=\"No content available\")_10_10# Accessing the primary text using text_key and default_value_10print(data.get_text())  # Outputs: \"No content available\" because \"content\" key is not in the data dictionary_10_10# Accessing data keys by calling the attribute directly_10print(data.title)  # Outputs: \"Hello, World!\" because \"title\" key is in the data dictionary",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "The Data object is also convenient for visualization of outputs, since the output preview has visual elements to inspect data as a table and its cells as pop ups for basic types. The idea is to create a unified way to work and visualize complex information in Langflow.",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "To receive Data objects in a component input, you can use the DataInput input type.",
        "section": "Creating a Data Object",
        "type": "p"
    },
    {
        "content": "Data",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "DataInput",
        "section": "Creating a Data Object",
        "type": "code"
    },
    {
        "content": "The Message Object",
        "section": "The Message Object",
        "type": "h2"
    },
    {
        "content": "The\u00a0Message\u00a0object extends the functionality of\u00a0Data\u00a0and includes additional attributes and methods for chat interactions.",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Data",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Key to retrieve the primary text data.\ntext: The main text content of the message.\nsender: Identifier for the sender (e.g., \"User\" or \"AI\").\nsender_name: Name of the sender.\nfiles: List of files associated with the message.\nsession_id: Identifier for the chat session.\ntimestamp: Timestamp when the message was created.\nflow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "ul"
    },
    {
        "content": "Main Attributes:\n\ntext_key: Key to retrieve the primary text data.\ntext: The main text content of the message.\nsender: Identifier for the sender (e.g., \"User\" or \"AI\").\nsender_name: Name of the sender.\nfiles: List of files associated with the message.\nsession_id: Identifier for the chat session.\ntimestamp: Timestamp when the message was created.\nflow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "text_key: Key to retrieve the primary text data.\ntext: The main text content of the message.\nsender: Identifier for the sender (e.g., \"User\" or \"AI\").\nsender_name: Name of the sender.\nfiles: List of files associated with the message.\nsession_id: Identifier for the chat session.\ntimestamp: Timestamp when the message was created.\nflow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "ul"
    },
    {
        "content": "text_key: Key to retrieve the primary text data.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "text_key",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "text: The main text content of the message.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "text",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "sender: Identifier for the sender (e.g., \"User\" or \"AI\").",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "sender",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "sender_name: Name of the sender.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "sender_name",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "files: List of files associated with the message.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "files",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "session_id: Identifier for the chat session.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "session_id",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "timestamp: Timestamp when the message was created.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "timestamp",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "flow_id: Identifier for the flow.",
        "section": "The Message Object",
        "type": "li"
    },
    {
        "content": "flow_id",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "The\u00a0Message\u00a0object can be used to send, store and manipulate chat messages within Langflow. You can create a\u00a0Message\u00a0object by directly assigning key-value pairs to it. For example:",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "_10from langflow.schema.message import Message_10_10message = Message(text=\"Hello, AI!\", sender=\"User\", sender_name=\"John Doe\")",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "To receive Message objects in a component input, you can use the MessageInput input type or MessageTextInput when the goal is to extract just the text field of the Message object.",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "MessageInput",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "MessageTextInput",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "text",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Message",
        "section": "The Message Object",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "The Message Object",
        "type": "p"
    },
    {
        "content": "\ud83d\udcda New to LLMs?",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "h1"
    },
    {
        "content": "Large Language Models, or LLMs, are part of an exciting new world in computing.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "We made Langflow for anyone to create with LLMs, and hope you'll feel comfortable installing Langflow and\u00a0.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "If you want to learn the basics of LLMs, prompt engineering, and AI models, Langflow recommends\u00a0, an open-source repository of prompt engineering content maintained by AI experts. PromptingGuide offers content for\u00a0\u00a0and\u00a0, as well as the latest\u00a0\u00a0and\u00a0\u00a0fueling AI's progress.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "For in depth readings, we recommend\u00a0, a curated list of resources for learning about LLMs and their applications.",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\ud83d\udcda New to LLMs?",
        "type": "p"
    },
    {
        "content": "\ud83d\udc4b\u00a0Welcome to Langflow",
        "section": "\ud83d\udc4b\u00a0Welcome to Langflow",
        "type": "h1"
    },
    {
        "content": "Introduction",
        "section": "Introduction",
        "type": "h2"
    },
    {
        "content": "Langflow is a new, visual framework for building multi-agent and RAG applications. It is open-source, Python-powered, fully customizable, LLM and vector store agnostic.",
        "section": "Introduction",
        "type": "p"
    },
    {
        "content": "Its intuitive interface allows for easy manipulation of AI building blocks, enabling developers to quickly prototype and turn their ideas into powerful, real-world solutions.",
        "section": "Introduction",
        "type": "p"
    },
    {
        "content": "\ud83d\ude80 First steps",
        "section": "\ud83d\ude80 First steps",
        "type": "h2"
    },
    {
        "content": "- Install and start a local Langflow server.\n\u00a0- Create a flow and run it.\n\u00a0- Learn more about the Langflow Workspace.",
        "section": "\ud83d\ude80 First steps",
        "type": "ul"
    },
    {
        "content": "- Install and start a local Langflow server.",
        "section": "\ud83d\ude80 First steps",
        "type": "li"
    },
    {
        "content": "- Create a flow and run it.",
        "section": "\ud83d\ude80 First steps",
        "type": "li"
    },
    {
        "content": "- Learn more about the Langflow Workspace.",
        "section": "\ud83d\ude80 First steps",
        "type": "li"
    },
    {
        "content": "Learn more about the exciting changes in Langflow 1.0 in .",
        "section": "\ud83d\ude80 First steps",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "\ud83d\ude80 First steps",
        "type": "p"
    },
    {
        "content": "AssemblyAI",
        "section": "AssemblyAI",
        "type": "h1"
    },
    {
        "content": "The AssemblyAI components allow you to apply powerful Speech AI models to your app for tasks like:",
        "section": "AssemblyAI",
        "type": "p"
    },
    {
        "content": "Transcribing audio and video files\nFormatting transcripts\nGenerating subtitles\nApplying LLMs to audio files",
        "section": "AssemblyAI",
        "type": "ul"
    },
    {
        "content": "Transcribing audio and video files",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "Formatting transcripts",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "Generating subtitles",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "Applying LLMs to audio files",
        "section": "AssemblyAI",
        "type": "li"
    },
    {
        "content": "More info about AssemblyAI:",
        "section": "AssemblyAI",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "You need an AssemblyAI API key. After creating a free account, you'll find the API key in your dashboard. .",
        "section": "Prerequisites",
        "type": "p"
    },
    {
        "content": "Enter the key in the AssemblyAI API Key field in all components that require the key.",
        "section": "Prerequisites",
        "type": "p"
    },
    {
        "content": "(Optional): To use LeMUR, you need to upgrade your AssemblyAI account, since this is not included in the free account.",
        "section": "Prerequisites",
        "type": "p"
    },
    {
        "content": "Components",
        "section": "Components",
        "type": "h2"
    },
    {
        "content": "AssemblyAI Start Transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "h3"
    },
    {
        "content": "This component allows you to submit an audio or video file for transcription.",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "Tip: You can freeze the path of this component to only submit the file once.",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nAudio File: The audio or video file to transcribe.\nSpeech Model (Optional): Select the class of models. Default is Best. See  for more info.\nAutomatic Language Detection (Optional): Enable automatic language detection.\nLanguage (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.\nEnable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.\nExpected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.\nAudio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.\nPunctuate (Optional): Apply punctuation. Default is true.\nFormat Text (Optional): Apply casing and text formatting. Default is true.\n\n\n\nOutput:\n\nTranscript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nAudio File: The audio or video file to transcribe.\nSpeech Model (Optional): Select the class of models. Default is Best. See  for more info.\nAutomatic Language Detection (Optional): Enable automatic language detection.\nLanguage (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.\nEnable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.\nExpected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.\nAudio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.\nPunctuate (Optional): Apply punctuation. Default is true.\nFormat Text (Optional): Apply casing and text formatting. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nAudio File: The audio or video file to transcribe.\nSpeech Model (Optional): Select the class of models. Default is Best. See  for more info.\nAutomatic Language Detection (Optional): Enable automatic language detection.\nLanguage (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.\nEnable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.\nExpected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.\nAudio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.\nPunctuate (Optional): Apply punctuation. Default is true.\nFormat Text (Optional): Apply casing and text formatting. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Audio File: The audio or video file to transcribe.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Speech Model (Optional): Select the class of models. Default is Best. See  for more info.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Automatic Language Detection (Optional): Enable automatic language detection.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Language (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee  for a list of supported language codes.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Enable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Expected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Audio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of Audio File.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Punctuate (Optional): Apply punctuation. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Format Text (Optional): Apply casing and text formatting. Default is true.",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Output:\n\nTranscript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssemblyAI Start Transcript",
        "type": "p"
    },
    {
        "content": "Transcript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "ul"
    },
    {
        "content": "Transcript ID: The id of the transcript",
        "section": "AssemblyAI Start Transcript",
        "type": "li"
    },
    {
        "content": "AssebmlyAI Poll Transcript",
        "section": "AssebmlyAI Poll Transcript",
        "type": "h3"
    },
    {
        "content": "This components allows you to poll the transcripts. It checks the status of the transcript every few seconds until the transcription is completed.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nPolling Interval (Optional): The polling interval in seconds. Default is 3.\n\n\n\nOutput:\n\nTranscription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nPolling Interval (Optional): The polling interval in seconds. Default is 3.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssebmlyAI Poll Transcript",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nPolling Interval (Optional): The polling interval in seconds. Default is 3.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Polling Interval (Optional): The polling interval in seconds. Default is 3.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Output:\n\nTranscription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssebmlyAI Poll Transcript",
        "type": "p"
    },
    {
        "content": "Transcription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "ul"
    },
    {
        "content": "Transcription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info.",
        "section": "AssebmlyAI Poll Transcript",
        "type": "li"
    },
    {
        "content": "AssebmlyAI Get Subtitles",
        "section": "AssebmlyAI Get Subtitles",
        "type": "h3"
    },
    {
        "content": "This component allows you to generate subtitles in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nSubtitle Format: The format of the captions (SRT or VTT).\nCharacter per Caption (Optional): The maximum number of characters per caption (0 for no limit).\n\n\n\nOutput:\n\nSubtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nSubtitle Format: The format of the captions (SRT or VTT).\nCharacter per Caption (Optional): The maximum number of characters per caption (0 for no limit).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssebmlyAI Get Subtitles",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nSubtitle Format: The format of the captions (SRT or VTT).\nCharacter per Caption (Optional): The maximum number of characters per caption (0 for no limit).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Transcription Result: The output of the Poll Transcript component.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Subtitle Format: The format of the captions (SRT or VTT).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Character per Caption (Optional): The maximum number of characters per caption (0 for no limit).",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Output:\n\nSubtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssebmlyAI Get Subtitles",
        "type": "p"
    },
    {
        "content": "Subtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "ul"
    },
    {
        "content": "Subtitles: A JSON response with the subtitles field containing the captions in SRT or VTT format.",
        "section": "AssebmlyAI Get Subtitles",
        "type": "li"
    },
    {
        "content": "subtitles",
        "section": "AssebmlyAI Get Subtitles",
        "type": "code"
    },
    {
        "content": "AssebmlyAI LeMUR",
        "section": "AssebmlyAI LeMUR",
        "type": "h3"
    },
    {
        "content": "This component allows you to apply Large Language Models to spoken data using the .",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "LeMUR automatically ingests the transcript as additional context, making it easy to apply LLMs to audio data. You can use it for tasks like summarizing audio, extracting insights, or asking questions.",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nInput Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.\nFinal Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.\nTemperature (Optional): The temperature to use for the model. Default is 0.0.\nMax Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.\nEndpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.\nQuestions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".\nTranscript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.\n\n\n\nOutput:\n\nLeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nInput Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.\nFinal Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.\nTemperature (Optional): The temperature to use for the model. Default is 0.0.\nMax Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.\nEndpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.\nQuestions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".\nTranscript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nTranscription Result: The output of the Poll Transcript component.\nInput Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.\nFinal Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.\nTemperature (Optional): The temperature to use for the model. Default is 0.0.\nMax Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.\nEndpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.\nQuestions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".\nTranscript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.",
        "section": "AssebmlyAI LeMUR",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Transcription Result: The output of the Poll Transcript component.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Input Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a Prompt component.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Final Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Temperature (Optional): The temperature to use for the model. Default is 0.0.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Max Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Endpoint (Optional): The LeMUR endpoint to use. Default is \"task\". For \"summary\" and \"question-answer\", no prompt input is needed. See  for more info.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Questions (Optional): Comma-separated list of your questions. Only used if Endpoint is \"question-answer\".",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Transcript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the Transcription Result is ignored.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Output:\n\nLeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssebmlyAI LeMUR",
        "type": "p"
    },
    {
        "content": "LeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "ul"
    },
    {
        "content": "LeMUR Response: The generated LLM response.",
        "section": "AssebmlyAI LeMUR",
        "type": "li"
    },
    {
        "content": "AssemblyAI List Transcripts",
        "section": "AssemblyAI List Transcripts",
        "type": "h3"
    },
    {
        "content": "This component can be used as a standalone component to list all previously generated transcripts.",
        "section": "AssemblyAI List Transcripts",
        "type": "p"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nLimit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.\nFilter (Optional): Filter by transcript status.\nCreated On (Optional): Only get transcripts created on this date (YYYY-MM-DD).\nThrottled Only (Optional): Only get throttled transcripts, overrides the status filter\n\n\n\nOutput:\n\nTranscript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "ul"
    },
    {
        "content": "Input:\n\nAssemblyAI API Key: Your API key.\nLimit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.\nFilter (Optional): Filter by transcript status.\nCreated On (Optional): Only get transcripts created on this date (YYYY-MM-DD).\nThrottled Only (Optional): Only get throttled transcripts, overrides the status filter",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Input:",
        "section": "AssemblyAI List Transcripts",
        "type": "p"
    },
    {
        "content": "AssemblyAI API Key: Your API key.\nLimit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.\nFilter (Optional): Filter by transcript status.\nCreated On (Optional): Only get transcripts created on this date (YYYY-MM-DD).\nThrottled Only (Optional): Only get throttled transcripts, overrides the status filter",
        "section": "AssemblyAI List Transcripts",
        "type": "ul"
    },
    {
        "content": "AssemblyAI API Key: Your API key.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Limit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Filter (Optional): Filter by transcript status.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Created On (Optional): Only get transcripts created on this date (YYYY-MM-DD).",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Throttled Only (Optional): Only get throttled transcripts, overrides the status filter",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Output:\n\nTranscript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Output:",
        "section": "AssemblyAI List Transcripts",
        "type": "p"
    },
    {
        "content": "Transcript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "ul"
    },
    {
        "content": "Transcript List: A list of all transcripts with info such as the transcript ID, the status, and the data.",
        "section": "AssemblyAI List Transcripts",
        "type": "li"
    },
    {
        "content": "Flow Process",
        "section": "Flow Process",
        "type": "h2"
    },
    {
        "content": "The user inputs an audio or video file.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The user can also input an LLM prompt. In this example, we want to generate a summary of the transcript.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow submits the audio file for transcription.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow checks the status of the transcript every few seconds until transcription is completed.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow parses the transcription result and outputs the transcribed text.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow also generates subtitles.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "The flow applies the LLM prompt to generate a summary.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "As a standalone component, all transcripts can be listed.",
        "section": "Flow Process",
        "type": "li"
    },
    {
        "content": "Run the Transcription and Speech AI Flow",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "h2"
    },
    {
        "content": "To run the Transcription and Speech AI Flow:",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "p"
    },
    {
        "content": "Open Langflow and create a new project.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Add the components listed above to your flow canvas, or download the (Download link) and Import the JSON file into Langflow.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Connect the components as shown in the flow diagram. Tip: Freeze the path of the Start Transcript component to only submit the file once.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Input the AssemblyAI API key in in all components that require the key (Start Transcript, Poll Transcript, Get Subtitles, LeMUR, List Transcripts).",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Select an audio or video file in the Start Transcript component.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Run the flow by clicking Play on the Parse Data component. Make sure that the specified template is {text}.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "{text}",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "code"
    },
    {
        "content": "To generate subtitles, click Play on the Get Subtitles component.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "To apply an LLM to your audio file, click Play on the LeMUR component. Note that you need an upgraded AssemblyAI account to use LeMUR.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "To list all transcripts, click Play on the List Transcript component.",
        "section": "Run the Transcription and Speech AI Flow",
        "type": "li"
    },
    {
        "content": "Customization",
        "section": "Customization",
        "type": "h2"
    },
    {
        "content": "The flow can be customized by:",
        "section": "Customization",
        "type": "p"
    },
    {
        "content": "Modifying the parameters in the Start Transcript component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Modifying the subtitle format in the Get Subtitles component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Modifying the LLM prompt for input of the LeMUR component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Modifying the LLM parameters (e.g., temperature) in the LeMUR component.",
        "section": "Customization",
        "type": "li"
    },
    {
        "content": "Troubleshooting",
        "section": "Troubleshooting",
        "type": "h2"
    },
    {
        "content": "If you encounter issues:",
        "section": "Troubleshooting",
        "type": "p"
    },
    {
        "content": "Ensure the API key is correctly set in all components that require the key.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "To use LeMUR, you need to upgrade your AssemblyAI account, since this is not included in the free account.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "Verify that all components are properly connected in the flow.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "Review the Langflow logs for any error messages.",
        "section": "Troubleshooting",
        "type": "li"
    },
    {
        "content": "For more advanced usage, refer to the . If you need more help, you can reach out to the .",
        "section": "Troubleshooting",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Troubleshooting",
        "type": "p"
    },
    {
        "content": "LangSmith",
        "section": "LangSmith",
        "type": "h1"
    },
    {
        "content": "LangSmith is a full-lifecycle DevOps service from LangChain that provides monitoring and observability. To integrate with Langflow, just add your LangChain API key as a Langflow environment variable and you are good to go!",
        "section": "LangSmith",
        "type": "p"
    },
    {
        "content": "Step-by-step Configuration",
        "section": "Step-by-step Configuration",
        "type": "h2"
    },
    {
        "content": "Obtain your LangChain API key from",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Add the following keys to Langflow .env file:",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "LANGCHAIN_API_KEY=\"your-api-key\"LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "LANGCHAIN_API_KEY=\"your-api-key\"LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "or export the environment variables in your terminal:",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "export LANGCHAIN_API_KEY=\"your-api-key\"export LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "export LANGCHAIN_API_KEY=\"your-api-key\"export LANGCHAIN_PROJECT=\"your-project-name\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Restart Langflow using\u00a0langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Run any project and check the LangSmith dashboard for monitoring and observability.",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "LangWatch",
        "section": "LangWatch",
        "type": "h1"
    },
    {
        "content": "LangWatch is an all-in-one LLMOps platform for monitoring, observability, analytics, evaluations and alerting for getting user insights and improve your LLM workflows.",
        "section": "LangWatch",
        "type": "p"
    },
    {
        "content": "To integrate with Langflow, just add your LangWatch API as a Langflow environment variable and you are good to go!",
        "section": "LangWatch",
        "type": "p"
    },
    {
        "content": "Step-by-step Configuration",
        "section": "Step-by-step Configuration",
        "type": "h2"
    },
    {
        "content": "Obtain your LangWatch API key from",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Add the following key to Langflow .env file:",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "_10LANGWATCH_API_KEY=\"your-api-key\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "or export it in your terminal:",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "_10export LANGWATCH_API_KEY=\"your-api-key\"",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Restart Langflow using langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "langflow run --env-file .env",
        "section": "Step-by-step Configuration",
        "type": "code"
    },
    {
        "content": "Run any project and check the LangWatch dashboard for monitoring and observability.",
        "section": "Step-by-step Configuration",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Step-by-step Configuration",
        "type": "p"
    },
    {
        "content": "Global Variables",
        "section": "Global Variables",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Global Variables",
        "type": "p"
    },
    {
        "content": "Global Variables are a useful feature of Langflow, allowing you to define reusable variables accessed from any Text field in your project.",
        "section": "Global Variables",
        "type": "p"
    },
    {
        "content": "TL;DR",
        "section": "Global Variables",
        "type": "p"
    },
    {
        "content": "Global Variables are reusable variables accessible from any Text field in your project.\nTo create one, click the \ud83c\udf10 button in a Text field and then + Add New Variable.\nDefine the Name, Type, and Value of the variable.\nClick Save Variable to create it.\nAll Credential Global Variables are encrypted and accessible only by you.\nSet LANGFLOW_STORE_ENVIRONMENT_VARIABLES to true in your .env file to add all variables in LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT to your user's Global Variables.",
        "section": "Global Variables",
        "type": "ul"
    },
    {
        "content": "Global Variables are reusable variables accessible from any Text field in your project.",
        "section": "Global Variables",
        "type": "li"
    },
    {
        "content": "To create one, click the \ud83c\udf10 button in a Text field and then + Add New Variable.",
        "section": "Global Variables",
        "type": "li"
    },
    {
        "content": "Define the Name, Type, and Value of the variable.",
        "section": "Global Variables",
        "type": "li"
    },
    {
        "content": "Click Save Variable to create it.",
        "section": "Global Variables",
        "type": "li"
    },
    {
        "content": "All Credential Global Variables are encrypted and accessible only by you.",
        "section": "Global Variables",
        "type": "li"
    },
    {
        "content": "Set LANGFLOW_STORE_ENVIRONMENT_VARIABLES to true in your .env file to add all variables in LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT to your user's Global Variables.",
        "section": "Global Variables",
        "type": "li"
    },
    {
        "content": "LANGFLOW_STORE_ENVIRONMENT_VARIABLES",
        "section": "Global Variables",
        "type": "code"
    },
    {
        "content": "true",
        "section": "Global Variables",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "Global Variables",
        "type": "code"
    },
    {
        "content": "LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT",
        "section": "Global Variables",
        "type": "code"
    },
    {
        "content": "Create and Add a Global Variable",
        "section": "Create and Add a Global Variable",
        "type": "h3"
    },
    {
        "content": "To create and add a global variable, click the \ud83c\udf10 button in a Text field, and then click + Add New Variable.",
        "section": "Create and Add a Global Variable",
        "type": "p"
    },
    {
        "content": "Text fields are where you write text without opening a Text area, and are identified with the \ud83c\udf10 icon.",
        "section": "Create and Add a Global Variable",
        "type": "p"
    },
    {
        "content": "For example, to create an environment variable for the OpenAI component:",
        "section": "Create and Add a Global Variable",
        "type": "p"
    },
    {
        "content": "In the OpenAI API Key text field, click the \ud83c\udf10 button, then Add New Variable.",
        "section": "Create and Add a Global Variable",
        "type": "li"
    },
    {
        "content": "Enter openai_api_key in the Variable Name field.",
        "section": "Create and Add a Global Variable",
        "type": "li"
    },
    {
        "content": "openai_api_key",
        "section": "Create and Add a Global Variable",
        "type": "code"
    },
    {
        "content": "Paste your OpenAI API Key (sk-...) in the Value field.",
        "section": "Create and Add a Global Variable",
        "type": "li"
    },
    {
        "content": "sk-...",
        "section": "Create and Add a Global Variable",
        "type": "code"
    },
    {
        "content": "Select Credential for the Type.",
        "section": "Create and Add a Global Variable",
        "type": "li"
    },
    {
        "content": "Choose OpenAI API Key in the Apply to Fields field to apply this variable to all fields named OpenAI API Key.",
        "section": "Create and Add a Global Variable",
        "type": "li"
    },
    {
        "content": "Click Save Variable.",
        "section": "Create and Add a Global Variable",
        "type": "li"
    },
    {
        "content": "You now have a openai_api_key global environment variable for your Langflow project.\nSubsequently, clicking the \ud83c\udf10 button in a Text field will display the new variable in the dropdown.",
        "section": "Create and Add a Global Variable",
        "type": "p"
    },
    {
        "content": "openai_api_key",
        "section": "Create and Add a Global Variable",
        "type": "code"
    },
    {
        "content": "You can also create global variables in Settings > Global Variables.",
        "section": "Create and Add a Global Variable",
        "type": "p"
    },
    {
        "content": "To view and manage your project's global environment variables, visit Settings > Global Variables.",
        "section": "Create and Add a Global Variable",
        "type": "p"
    },
    {
        "content": "Configure Environment Variables in your .env file",
        "section": "Configure Environment Variables in your .env file",
        "type": "h3"
    },
    {
        "content": "Setting LANGFLOW_STORE_ENVIRONMENT_VARIABLES to true in your .env file (default) adds all variables in LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT to your user's Global Variables.",
        "section": "Configure Environment Variables in your .env file",
        "type": "p"
    },
    {
        "content": "LANGFLOW_STORE_ENVIRONMENT_VARIABLES",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": "true",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": "LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": "These variables are accessible like any other Global Variable.",
        "section": "Configure Environment Variables in your .env file",
        "type": "p"
    },
    {
        "content": "To prevent this behavior, set LANGFLOW_STORE_ENVIRONMENT_VARIABLES to false in your .env file.",
        "section": "Configure Environment Variables in your .env file",
        "type": "p"
    },
    {
        "content": "LANGFLOW_STORE_ENVIRONMENT_VARIABLES",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": "false",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": ".env",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": "You can specify variables to get from the environment by listing them in LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT, as a comma-separated list (e.g., VARIABLE1, VARIABLE2).",
        "section": "Configure Environment Variables in your .env file",
        "type": "p"
    },
    {
        "content": "LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": "VARIABLE1, VARIABLE2",
        "section": "Configure Environment Variables in your .env file",
        "type": "code"
    },
    {
        "content": "The default list of variables includes the ones below and more:",
        "section": "Configure Environment Variables in your .env file",
        "type": "p"
    },
    {
        "content": "ANTHROPIC_API_KEY\nASTRA_DB_API_ENDPOINT\nASTRA_DB_APPLICATION_TOKEN\nAZURE_OPENAI_API_KEY\nAZURE_OPENAI_API_DEPLOYMENT_NAME\nAZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME\nAZURE_OPENAI_API_INSTANCE_NAME\nAZURE_OPENAI_API_VERSION\nCOHERE_API_KEY\nGOOGLE_API_KEY\nGROQ_API_KEY\nHUGGINGFACEHUB_API_TOKEN\nOPENAI_API_KEY\nPINECONE_API_KEY\nSEARCHAPI_API_KEY\nSERPAPI_API_KEY\nUPSTASH_VECTOR_REST_URL\nUPSTASH_VECTOR_REST_TOKEN\nVECTARA_CUSTOMER_ID\nVECTARA_CORPUS_ID\nVECTARA_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "ul"
    },
    {
        "content": "ANTHROPIC_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "ASTRA_DB_API_ENDPOINT",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "ASTRA_DB_APPLICATION_TOKEN",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "AZURE_OPENAI_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "AZURE_OPENAI_API_DEPLOYMENT_NAME",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "AZURE_OPENAI_API_INSTANCE_NAME",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "AZURE_OPENAI_API_VERSION",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "COHERE_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "GOOGLE_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "GROQ_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "HUGGINGFACEHUB_API_TOKEN",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "OPENAI_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "PINECONE_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "SEARCHAPI_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "SERPAPI_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "UPSTASH_VECTOR_REST_URL",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "UPSTASH_VECTOR_REST_TOKEN",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "VECTARA_CUSTOMER_ID",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "VECTARA_CORPUS_ID",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "VECTARA_API_KEY",
        "section": "Configure Environment Variables in your .env file",
        "type": "li"
    },
    {
        "content": "Precautions",
        "section": "Precautions",
        "type": "h3"
    },
    {
        "content": "Global variables are stored in the database, and their values are protected by encryption using a secret\nkey. To preserve access to your global variables and avoid losing them, you should take a few precautions:",
        "section": "Precautions",
        "type": "p"
    },
    {
        "content": "Keep your secret key safe: Even if your database is secure, it won\u2019t be of much use if you can't decrypt\nthe values. Ideally, you can set your own secret key using the LANGFLOW_SECRET_KEY environment variable. If\nyou don't provide a custom value for the secret key, one will be generated randomly and saved in the Langflow\ninstallation directory.",
        "section": "Precautions",
        "type": "li"
    },
    {
        "content": "Keep your secret key safe: Even if your database is secure, it won\u2019t be of much use if you can't decrypt\nthe values. Ideally, you can set your own secret key using the LANGFLOW_SECRET_KEY environment variable. If\nyou don't provide a custom value for the secret key, one will be generated randomly and saved in the Langflow\ninstallation directory.",
        "section": "Precautions",
        "type": "p"
    },
    {
        "content": "LANGFLOW_SECRET_KEY",
        "section": "Precautions",
        "type": "code"
    },
    {
        "content": "We use SQLite as the default database, and Langflow saves the database file in the installation directory.\nTo ensure the security of your data, it\u2019s a good practice to regularly back up this file. If needed, you can\nalso change the database location by setting the LANGFLOW_SAVE_DB_IN_CONFIG_DIR environment variable to true\nand configuring LANGFLOW_CONFIG_DIR to point to a directory of your choice. Alternatively, you can opt to use\nan external database such as PostgreSQL, in which case these configurations are no longer necessary.",
        "section": "Precautions",
        "type": "li"
    },
    {
        "content": "We use SQLite as the default database, and Langflow saves the database file in the installation directory.\nTo ensure the security of your data, it\u2019s a good practice to regularly back up this file. If needed, you can\nalso change the database location by setting the LANGFLOW_SAVE_DB_IN_CONFIG_DIR environment variable to true\nand configuring LANGFLOW_CONFIG_DIR to point to a directory of your choice. Alternatively, you can opt to use\nan external database such as PostgreSQL, in which case these configurations are no longer necessary.",
        "section": "Precautions",
        "type": "p"
    },
    {
        "content": "LANGFLOW_SAVE_DB_IN_CONFIG_DIR",
        "section": "Precautions",
        "type": "code"
    },
    {
        "content": "LANGFLOW_CONFIG_DIR",
        "section": "Precautions",
        "type": "code"
    },
    {
        "content": "For your convenience, if you\u2019re running Langflow directly on your system or in a virtual environment\nvia a pip installation, you can set these values by providing Langflow with a .env file containing these\nenvironment variables, using the following command:",
        "section": "Precautions",
        "type": "p"
    },
    {
        "content": "_10langflow run --env-file .env",
        "section": "Precautions",
        "type": "code"
    },
    {
        "content": "If you\u2019re running Langflow in a Docker container, you can set these values by providing Langflow with:",
        "section": "Precautions",
        "type": "p"
    },
    {
        "content": "_10docker run \\_10        --privileged \\_10        --user 1000:0 \\_10        -p 7860:7860 \\_10        -e LANGFLOW_SECRET_KEY=<YOUR_SECRET_KEY_VALUE> \\_10        -e LANGFLOW_SAVE_DB_IN_CONFIG_DIR=true \\_10        -e LANGFLOW_CONFIG_DIR=/app/container_path \\_10        -v $(PWD)/your_path:/app/container_path \\_10        langflowai/langflow:latest",
        "section": "Precautions",
        "type": "code"
    },
    {
        "content": "or",
        "section": "Precautions",
        "type": "p"
    },
    {
        "content": "_10docker run \\_10\t--privileged \\_10\t--user 1000:0 \\_10\t-p 7860:7860 \\_10\t--env-file .env \\_10\t-v $(PWD)/your_path:/app/container_path \\_10    langflowai/langflow:latest",
        "section": "Precautions",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Precautions",
        "type": "p"
    },
    {
        "content": "Project & General Settings",
        "section": "Project & General Settings",
        "type": "h1"
    },
    {
        "content": "This page may contain outdated information. It will be updated as soon as possible.",
        "section": "Project & General Settings",
        "type": "p"
    },
    {
        "content": "Change the Project Settings or General Settings for Langflow.",
        "section": "Project & General Settings",
        "type": "p"
    },
    {
        "content": "Project Settings",
        "section": "Project Settings",
        "type": "h2"
    },
    {
        "content": "Click Project Name > Settings to view your Project Settings.",
        "section": "Project Settings",
        "type": "p"
    },
    {
        "content": "Name - the name of your project.\nDescription - the description for your project.\nVisible on the Langflow Store.\nEndpoint name - the custom endpoint name for your project's API endpoint.\nTo use the default value, leave this field blank.",
        "section": "Project Settings",
        "type": "ul"
    },
    {
        "content": "Name - the name of your project.",
        "section": "Project Settings",
        "type": "li"
    },
    {
        "content": "Description - the description for your project.\nVisible on the Langflow Store.",
        "section": "Project Settings",
        "type": "li"
    },
    {
        "content": "Endpoint name - the custom endpoint name for your project's API endpoint.\nTo use the default value, leave this field blank.",
        "section": "Project Settings",
        "type": "li"
    },
    {
        "content": "General Settings",
        "section": "General Settings",
        "type": "h2"
    },
    {
        "content": "Select your Profile Picture > Settings to view your General Settings.",
        "section": "General Settings",
        "type": "p"
    },
    {
        "content": "Profile Picture",
        "section": "Profile Picture",
        "type": "h3"
    },
    {
        "content": "Select a profile picture.",
        "section": "Profile Picture",
        "type": "p"
    },
    {
        "content": "Store API Key",
        "section": "Store API Key",
        "type": "h3"
    },
    {
        "content": "Add your Langflow Store API key. To get a Store key, go to the .",
        "section": "Store API Key",
        "type": "p"
    },
    {
        "content": "Global Variables",
        "section": "Global Variables",
        "type": "h3"
    },
    {
        "content": "Select Add New to add a key to Langflow.",
        "section": "Global Variables",
        "type": "p"
    },
    {
        "content": "Select the trash icon to delete a key.",
        "section": "Global Variables",
        "type": "p"
    },
    {
        "content": "For more information, see Global Variables.",
        "section": "Global Variables",
        "type": "p"
    },
    {
        "content": "Langflow API",
        "section": "Langflow API",
        "type": "h3"
    },
    {
        "content": "Create a Langflow API key.",
        "section": "Langflow API",
        "type": "p"
    },
    {
        "content": "Click Add New > Create Secret Key and copy the key somewhere safe and accessible.",
        "section": "Langflow API",
        "type": "p"
    },
    {
        "content": "For more information, see Langflow API.",
        "section": "Langflow API",
        "type": "p"
    },
    {
        "content": "Shortcuts",
        "section": "Shortcuts",
        "type": "h3"
    },
    {
        "content": "A list of keyboard shortcuts for Langflow.",
        "section": "Shortcuts",
        "type": "p"
    },
    {
        "content": "Messages",
        "section": "Messages",
        "type": "h3"
    },
    {
        "content": "Inspect, edit, and remove messages in your flow for testing and debugging purposes.",
        "section": "Messages",
        "type": "p"
    },
    {
        "content": "For more information, see the Playground.",
        "section": "Messages",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Messages",
        "type": "p"
    },
    {
        "content": "Basic Prompting",
        "section": "Basic Prompting",
        "type": "h1"
    },
    {
        "content": "Prompts serve as the inputs to a large language model (LLM), acting as the interface between human instructions and computational tasks.",
        "section": "Basic Prompting",
        "type": "p"
    },
    {
        "content": "By submitting natural language requests in a prompt to an LLM, you can obtain answers, generate text, and solve problems.",
        "section": "Basic Prompting",
        "type": "p"
    },
    {
        "content": "This article demonstrates how to use Langflow's prompt tools to issue basic prompts to an LLM, and how various prompting strategies can affect your outcomes.",
        "section": "Basic Prompting",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Basic Prompting",
        "section": "Basic Prompting",
        "type": "h2"
    },
    {
        "content": "Create the basic prompting project",
        "section": "Create the basic prompting project",
        "type": "h3"
    },
    {
        "content": "From the Langflow dashboard, click\u00a0New Project.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Basic Prompting.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Basic Prompting.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "The\u00a0Basic Prompting\u00a0flow is created.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "The\u00a0Basic Prompting\u00a0flow is created.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "This flow allows you to chat with the\u00a0OpenAI\u00a0component through the\u00a0Prompt\u00a0component.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "Examine the\u00a0Prompt\u00a0component. The\u00a0Template\u00a0field instructs the LLM to\u00a0Answer the user as if you were a pirate.\u00a0This should be interesting...",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "Answer the user as if you were a pirate.",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "To create an environment variable for the\u00a0OpenAI\u00a0component, in the\u00a0OpenAI API Key\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.\n\nIn the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.\nIn the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).\nClick\u00a0Save Variable.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "To create an environment variable for the\u00a0OpenAI\u00a0component, in the\u00a0OpenAI API Key\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.",
        "section": "Create the basic prompting project",
        "type": "p"
    },
    {
        "content": "In the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "openai_api_key",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "In the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "sk-...",
        "section": "Create the basic prompting project",
        "type": "code"
    },
    {
        "content": "Click\u00a0Save Variable.",
        "section": "Create the basic prompting project",
        "type": "li"
    },
    {
        "content": "Run",
        "section": "Run",
        "type": "h3"
    },
    {
        "content": "Click the\u00a0Playground\u00a0button on the control panel (bottom right side of the workspace). This is where you can interact with your AI.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Type a message and press Enter. The bot should respond in a markedly piratical manner!",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Modify the prompt for a different result",
        "section": "Modify the prompt for a different result",
        "type": "h3"
    },
    {
        "content": "To modify your prompt results, in the\u00a0Prompt\u00a0template, click the\u00a0Template\u00a0field. The\u00a0Edit Prompt\u00a0window opens.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Change\u00a0Answer the user as if you were a pirate\u00a0to a different character, perhaps\u00a0Answer the user as if you were Hermione Granger.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Answer the user as if you were a pirate",
        "section": "Modify the prompt for a different result",
        "type": "code"
    },
    {
        "content": "Answer the user as if you were Hermione Granger.",
        "section": "Modify the prompt for a different result",
        "type": "code"
    },
    {
        "content": "Run the workflow again. The response will be markedly different.",
        "section": "Modify the prompt for a different result",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Modify the prompt for a different result",
        "type": "p"
    },
    {
        "content": "Blog Writer",
        "section": "Blog Writer",
        "type": "h1"
    },
    {
        "content": "Build a blog writer with OpenAI that uses URLs for reference content.",
        "section": "Blog Writer",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Blog Writer",
        "section": "Blog Writer",
        "type": "h2"
    },
    {
        "content": "Create the Blog Writer project",
        "section": "Create the Blog Writer project",
        "type": "h3"
    },
    {
        "content": "From the Langflow dashboard, click\u00a0New Project.",
        "section": "Create the Blog Writer project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Blog Writer.",
        "section": "Create the Blog Writer project",
        "type": "li"
    },
    {
        "content": "A workspace for the\u00a0Blog Writer is displayed.",
        "section": "Create the Blog Writer project",
        "type": "li"
    },
    {
        "content": "This flow creates a one-shot article generator with\u00a0Prompt,\u00a0OpenAI, and\u00a0Chat Output\u00a0components, augmented with reference content and instructions from the\u00a0URL\u00a0and\u00a0Instructions\u00a0components.",
        "section": "Create the Blog Writer project",
        "type": "p"
    },
    {
        "content": "The\u00a0Template\u00a0field of the Prompt looks like this:",
        "section": "Create the Blog Writer project",
        "type": "p"
    },
    {
        "content": "The\u00a0{instructions}\u00a0value is received from the\u00a0Instructions\u00a0component. One or more\u00a0{references}\u00a0 are received from a list of URLs.",
        "section": "Create the Blog Writer project",
        "type": "p"
    },
    {
        "content": "{instructions}",
        "section": "Create the Blog Writer project",
        "type": "code"
    },
    {
        "content": "{references}",
        "section": "Create the Blog Writer project",
        "type": "code"
    },
    {
        "content": "URL extracts raw text and metadata from one or more web links.\nParse Data converts the data coming from the URL component into plain text to feed a prompt.",
        "section": "Create the Blog Writer project",
        "type": "ul"
    },
    {
        "content": "URL extracts raw text and metadata from one or more web links.",
        "section": "Create the Blog Writer project",
        "type": "li"
    },
    {
        "content": "Parse Data converts the data coming from the URL component into plain text to feed a prompt.",
        "section": "Create the Blog Writer project",
        "type": "li"
    },
    {
        "content": "Run the Blog Writer",
        "section": "Run the Blog Writer",
        "type": "h3"
    },
    {
        "content": "Click the\u00a0Playground\u00a0button. Here you can chat with the AI that has access to the URL content.",
        "section": "Run the Blog Writer",
        "type": "li"
    },
    {
        "content": "Click the\u00a0Lighting Bolt\u00a0icon to run it.",
        "section": "Run the Blog Writer",
        "type": "li"
    },
    {
        "content": "To write about something different, change the values in the\u00a0URL\u00a0component and adjust the instructions on the left side bar of the Playground. Try again and see what the LLM constructs.",
        "section": "Run the Blog Writer",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Run the Blog Writer",
        "type": "p"
    },
    {
        "content": "Document QA",
        "section": "Document QA",
        "type": "h1"
    },
    {
        "content": "Build a question-and-answer chatbot with a document loaded from local memory.",
        "section": "Document QA",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Document QA",
        "section": "Document QA",
        "type": "h2"
    },
    {
        "content": "Create the Document QA project",
        "section": "Create the Document QA project",
        "type": "h3"
    },
    {
        "content": "From the Langflow dashboard, click\u00a0New Project.",
        "section": "Create the Document QA project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Document QA.",
        "section": "Create the Document QA project",
        "type": "li"
    },
    {
        "content": "The\u00a0Document QA\u00a0project is created.",
        "section": "Create the Document QA project",
        "type": "li"
    },
    {
        "content": "This flow is composed of a standard chatbot with the\u00a0Chat Input,\u00a0Prompt,\u00a0OpenAI, and\u00a0Chat Output\u00a0components, but it also incorporates a File component, which loads a file from your local machine. Parse Data is used to convert the data from File into the\u00a0Prompt\u00a0component as\u00a0{Document}. The\u00a0Prompt\u00a0component is instructed to answer questions based on the contents of\u00a0{Document}. This gives the\u00a0OpenAI\u00a0component context it would not otherwise have access to.",
        "section": "Create the Document QA project",
        "type": "p"
    },
    {
        "content": "{Document}",
        "section": "Create the Document QA project",
        "type": "code"
    },
    {
        "content": "{Document}",
        "section": "Create the Document QA project",
        "type": "code"
    },
    {
        "content": "Run the Document QA",
        "section": "Run the Document QA",
        "type": "h3"
    },
    {
        "content": "To select a document to load, in the\u00a0File\u00a0component, click the\u00a0Path\u00a0field. Select a local file, and then click\u00a0Open. The file name appears in the field.",
        "section": "Run the Document QA",
        "type": "li"
    },
    {
        "content": "Click the\u00a0Playground\u00a0button. Here you can chat with the AI that has access to your document's content.",
        "section": "Run the Document QA",
        "type": "li"
    },
    {
        "content": "Click the\u00a0Playground\u00a0button. Here you can chat with the AI that has access to your document's content.",
        "section": "Run the Document QA",
        "type": "p"
    },
    {
        "content": "Type in a question about the document content and press Enter. You should see a contextual response.",
        "section": "Run the Document QA",
        "type": "li"
    },
    {
        "content": "Type in a question about the document content and press Enter. You should see a contextual response.",
        "section": "Run the Document QA",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Run the Document QA",
        "type": "p"
    },
    {
        "content": "Memory Chatbot",
        "section": "Memory Chatbot",
        "type": "h1"
    },
    {
        "content": "This flow extends the\u00a0\u00a0flow to include a chat memory. This makes the AI remember previous user inputs.",
        "section": "Memory Chatbot",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "Memory Chatbot",
        "section": "Memory Chatbot",
        "type": "h2"
    },
    {
        "content": "Create the memory chatbot project",
        "section": "Create the memory chatbot project",
        "type": "h3"
    },
    {
        "content": "From the Langflow dashboard, click\u00a0New Project.",
        "section": "Create the memory chatbot project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Memory Chatbot.",
        "section": "Create the memory chatbot project",
        "type": "li"
    },
    {
        "content": "The\u00a0Memory Chatbot\u00a0flow is created .",
        "section": "Create the memory chatbot project",
        "type": "li"
    },
    {
        "content": "This flow uses the same components as the Basic Prompting one, but extends it with a\u00a0Chat Memory\u00a0component. This component retrieves previous messages and sends them to the\u00a0Prompt\u00a0component to fill a part of the\u00a0Template\u00a0with context.",
        "section": "Create the memory chatbot project",
        "type": "p"
    },
    {
        "content": "By clicking the template, you'll see the prompt editor like below:",
        "section": "Create the memory chatbot project",
        "type": "p"
    },
    {
        "content": "This gives the\u00a0OpenAI\u00a0component a memory of previous chat messages.",
        "section": "Create the memory chatbot project",
        "type": "p"
    },
    {
        "content": "Run",
        "section": "Run",
        "type": "h3"
    },
    {
        "content": "Open the Playground.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "Type multiple questions. In the\u00a0Memories\u00a0tab, your queries are logged in order. Up to 100 queries are stored by default. Try telling the AI your name and asking\u00a0What is my name? on a second message, or\u00a0What is the first subject I asked you about?\u00a0to validate that previous knowledge is taking effect.",
        "section": "Run",
        "type": "li"
    },
    {
        "content": "What is my name?",
        "section": "Run",
        "type": "code"
    },
    {
        "content": "What is the first subject I asked you about?",
        "section": "Run",
        "type": "code"
    },
    {
        "content": "Check and adjust advanced parameters by opening the Advanced Settings of the\u00a0Chat Memory\u00a0component.",
        "section": "Run",
        "type": "p"
    },
    {
        "content": "Session ID",
        "section": "Session ID",
        "type": "h2"
    },
    {
        "content": "SessionID\u00a0is a unique identifier in Langflow that stores conversation sessions between the AI and a user. A\u00a0SessionID\u00a0is created when a conversation is initiated, and then associated with all subsequent messages during that session.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "SessionID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "SessionID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "In the\u00a0Memory Chatbot\u00a0flow you created, the\u00a0Chat Memory\u00a0component references past interactions by\u00a0Session ID. You can demonstrate this by modifying the\u00a0Session ID\u00a0value to switch between conversation histories.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "In the\u00a0Session ID\u00a0field of the\u00a0Chat Memory\u00a0and\u00a0Chat Input\u00a0components, add a\u00a0Session ID\u00a0value like\u00a0MySessionID.",
        "section": "Session ID",
        "type": "li"
    },
    {
        "content": "MySessionID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "Now, once you send a new message the\u00a0Playground, you should have a new memory created on the\u00a0Memories\u00a0tab.",
        "section": "Session ID",
        "type": "li"
    },
    {
        "content": "Notice how your conversation is being stored in different memory sessions.",
        "section": "Session ID",
        "type": "li"
    },
    {
        "content": "Every\u00a0chat\u00a0component in Langflow comes with a\u00a0SessionID. It defaults to the flow ID. Explore how changing it affects what the AI remembers.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "SessionID",
        "section": "Session ID",
        "type": "code"
    },
    {
        "content": "Learn more about memories in the  section.",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Session ID",
        "type": "p"
    },
    {
        "content": "Vector Store RAG",
        "section": "Vector Store RAG",
        "type": "h1"
    },
    {
        "content": "Retrieval Augmented Generation, or RAG, is a pattern for training LLMs on your data and querying it.",
        "section": "Vector Store RAG",
        "type": "p"
    },
    {
        "content": "RAG is backed by a\u00a0vector store, a vector database which stores embeddings of the ingested data.",
        "section": "Vector Store RAG",
        "type": "p"
    },
    {
        "content": "This enables\u00a0vector search, a more powerful and context-aware search.",
        "section": "Vector Store RAG",
        "type": "p"
    },
    {
        "content": "We've chosen\u00a0\u00a0as the vector database for this starter project, but you can follow along with any of Langflow's vector database options.",
        "section": "Vector Store RAG",
        "type": "p"
    },
    {
        "content": "Prerequisites",
        "section": "Prerequisites",
        "type": "h2"
    },
    {
        "content": "with:\n\nApplication Token\nAPI Endpoint",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "with:\n\nApplication Token\nAPI Endpoint",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Application Token\nAPI Endpoint",
        "section": "Prerequisites",
        "type": "ul"
    },
    {
        "content": "Application Token",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "API Endpoint",
        "section": "Prerequisites",
        "type": "li"
    },
    {
        "content": "Vector Store RAG",
        "section": "Vector Store RAG",
        "type": "h2"
    },
    {
        "content": "Create the vector store RAG project",
        "section": "Create the vector store RAG project",
        "type": "h3"
    },
    {
        "content": "From the Langflow dashboard, click\u00a0New Project.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "Select\u00a0Vector Store RAG.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "The\u00a0Vector Store RAG\u00a0project is created.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "The vector store RAG flow is built of two separate flows. Ingestion and query.",
        "section": "Create the vector store RAG project",
        "type": "p"
    },
    {
        "content": "The\u00a0ingestion\u00a0part (bottom of the screen) populates the vector store with data from a local file. It ingests data from a file (File), splits it into chunks (Split Text), indexes it in Astra DB (Astra DB), and computes embeddings for the chunks using an embedding model (OpenAI Embeddings).",
        "section": "Create the vector store RAG project",
        "type": "p"
    },
    {
        "content": "Embeddings are numerical vectors that represent data meaningfully. They enable efficient similarity searches in vector stores by placing similar items close together in the vector space, enhancing search and recommendation tasks.",
        "section": "Create the vector store RAG project",
        "type": "p"
    },
    {
        "content": "This part creates a searchable index to be queried for contextual similarity.",
        "section": "Create the vector store RAG project",
        "type": "p"
    },
    {
        "content": "The\u00a0query\u00a0part (top of the screen) allows users to retrieve embedded vector store data. Components:",
        "section": "Create the vector store RAG project",
        "type": "p"
    },
    {
        "content": "Chat Input defines where to send the user input (coming from the Playground).\nOpenAI Embeddings\u00a0is the model used to generate embeddings from the user input.\nAstra DB retrieves the most relevant chunks from the Astra DB database (here, used for search, not ingestion).\nParse Data converts chunks coming from the Astra DB component into plain text to feed a prompt.\nPrompt takes in the user input and the retrieved chunks as text and builds a prompt for the model.\nOpenAI takes in the prompt to generate a response.\nChat Output\u00a0component displays the response in the Playground.",
        "section": "Create the vector store RAG project",
        "type": "ul"
    },
    {
        "content": "Chat Input defines where to send the user input (coming from the Playground).",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "OpenAI Embeddings\u00a0is the model used to generate embeddings from the user input.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "Astra DB retrieves the most relevant chunks from the Astra DB database (here, used for search, not ingestion).",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "Parse Data converts chunks coming from the Astra DB component into plain text to feed a prompt.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "Prompt takes in the user input and the retrieved chunks as text and builds a prompt for the model.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "OpenAI takes in the prompt to generate a response.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "Chat Output\u00a0component displays the response in the Playground.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "To create an environment variable for the\u00a0OpenAI\u00a0component, in the\u00a0OpenAI API Key\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.\n\nIn the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.\nIn the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).\nClick\u00a0Save Variable.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "In the\u00a0Variable Name\u00a0field, enter\u00a0openai_api_key.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "openai_api_key",
        "section": "Create the vector store RAG project",
        "type": "code"
    },
    {
        "content": "In the\u00a0Value\u00a0field, paste your OpenAI API Key (sk-...).",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "sk-...",
        "section": "Create the vector store RAG project",
        "type": "code"
    },
    {
        "content": "Click\u00a0Save Variable.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "To create environment variables for the\u00a0Astra DB\u00a0and\u00a0Astra DB Search\u00a0components:\n\nIn the\u00a0Token\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.\nIn the\u00a0Variable Name\u00a0field, enter\u00a0astra_token.\nIn the\u00a0Value\u00a0field, paste your Astra application token (AstraCS:WSnyFUhRxsrg\u2026).\nClick\u00a0Save Variable.\nRepeat the above steps for the\u00a0API Endpoint\u00a0field, pasting your Astra API Endpoint instead (https://ASTRA_DB_ID-ASTRA_DB_REGION.apps.astra.datastax.com).\nAdd the global variable to both the\u00a0Astra DB\u00a0and\u00a0Astra DB Search\u00a0components.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "In the\u00a0Token\u00a0field, click the\u00a0Globe\u00a0button, and then click\u00a0Add New Variable.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "In the\u00a0Variable Name\u00a0field, enter\u00a0astra_token.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "astra_token",
        "section": "Create the vector store RAG project",
        "type": "code"
    },
    {
        "content": "In the\u00a0Value\u00a0field, paste your Astra application token (AstraCS:WSnyFUhRxsrg\u2026).",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "AstraCS:WSnyFUhRxsrg\u2026",
        "section": "Create the vector store RAG project",
        "type": "code"
    },
    {
        "content": "Click\u00a0Save Variable.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "Repeat the above steps for the\u00a0API Endpoint\u00a0field, pasting your Astra API Endpoint instead (https://ASTRA_DB_ID-ASTRA_DB_REGION.apps.astra.datastax.com).",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "https://ASTRA_DB_ID-ASTRA_DB_REGION.apps.astra.datastax.com",
        "section": "Create the vector store RAG project",
        "type": "code"
    },
    {
        "content": "Add the global variable to both the\u00a0Astra DB\u00a0and\u00a0Astra DB Search\u00a0components.",
        "section": "Create the vector store RAG project",
        "type": "li"
    },
    {
        "content": "Run the Vector Store RAG",
        "section": "Run the Vector Store RAG",
        "type": "h3"
    },
    {
        "content": "Click the\u00a0Playground\u00a0button. Here you can chat with the AI that uses context from the database you created.",
        "section": "Run the Vector Store RAG",
        "type": "li"
    },
    {
        "content": "Type a message and press Enter. (Try something like \"What topics do you know about?\")",
        "section": "Run the Vector Store RAG",
        "type": "li"
    },
    {
        "content": "The bot will respond with a summary of the data you've embedded.",
        "section": "Run the Vector Store RAG",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Run the Vector Store RAG",
        "type": "p"
    },
    {
        "content": "1.0 - A new chapter for Langflow",
        "section": "1.0 - A new chapter for Langflow",
        "type": "h1"
    },
    {
        "content": "First things first",
        "section": "First things first",
        "type": "h2"
    },
    {
        "content": "Thank you all for being part of the Langflow community. The journey so far has been amazing, and we are thrilled to have you with us.",
        "section": "First things first",
        "type": "p"
    },
    {
        "content": "We have some exciting news to share with you. Langflow is evolving, and we want to tell you all about it!",
        "section": "First things first",
        "type": "p"
    },
    {
        "content": "What's new?",
        "section": "What's new?",
        "type": "h2"
    },
    {
        "content": "In the past year, we learned a lot from the community and our users. We saw the potential of Langflow and the need for a visual, interactive platform for building conversational AI applications (and beyond). You thought us the importance of a platform that is easy to use, but also powerful and controllable, and that made clear to us how Langflow's transparency could be improved.",
        "section": "What's new?",
        "type": "p"
    },
    {
        "content": "Below are some of the new features we included to make that happen!",
        "section": "What's new?",
        "type": "p"
    },
    {
        "content": "Same Component, Multiple Outputs",
        "section": "Same Component, Multiple Outputs",
        "type": "h3"
    },
    {
        "content": "Components can now have more than a single output, allowing for unique flexibility in creating complex flows. The game-changer is output routing \u2014 it allows for so many new capabilities it\u2019s almost silly to describe!",
        "section": "Same Component, Multiple Outputs",
        "type": "p"
    },
    {
        "content": "Branch to one or more subsequent components;",
        "section": "Same Component, Multiple Outputs",
        "type": "li"
    },
    {
        "content": "Apply logic operations like if/else and exploit decision-making;",
        "section": "Same Component, Multiple Outputs",
        "type": "li"
    },
    {
        "content": "Create classification models that choose between paths;",
        "section": "Same Component, Multiple Outputs",
        "type": "li"
    },
    {
        "content": "Enable the development of agent architectures from scratch;",
        "section": "Same Component, Multiple Outputs",
        "type": "li"
    },
    {
        "content": "Build an orchestrator that routes between agents.",
        "section": "Same Component, Multiple Outputs",
        "type": "li"
    },
    {
        "content": "Flow + Composition",
        "section": "Flow + Composition",
        "type": "h3"
    },
    {
        "content": "One key change you'll notice is that projects now require you to define\u00a0Inputs\u00a0and\u00a0Outputs. They allow you to define the structure of your conversation and how data flows through it. This change comes with a new way of visualizing your projects.",
        "section": "Flow + Composition",
        "type": "p"
    },
    {
        "content": "Before 1.0 you would connect components to ultimately build one final component that was processed behind the scenes. Now, each step of the process is defined by you, is visible on the workspace, and can be monitored and controlled.",
        "section": "Flow + Composition",
        "type": "p"
    },
    {
        "content": "This makes it so that composition is now just\u00a0another way\u00a0of building in Langflow and\u00a0data flows through your project more transparently. This means that the easy stuff is\u00a0really\u00a0easy and the complex parts are still possible!",
        "section": "Flow + Composition",
        "type": "p"
    },
    {
        "content": "Flow:\u00a0Data is processed by one component and then passed to the next component in line for immediate execution.\nComposition: Allows components to not only forward data but also share states for modular building.",
        "section": "Flow + Composition",
        "type": "ul"
    },
    {
        "content": "Flow:\u00a0Data is processed by one component and then passed to the next component in line for immediate execution.",
        "section": "Flow + Composition",
        "type": "li"
    },
    {
        "content": "Composition: Allows components to not only forward data but also share states for modular building.",
        "section": "Flow + Composition",
        "type": "li"
    },
    {
        "content": "For example, a flow can sequentially process text, and after a few steps, trigger an agent. It can access functions that wait to be called or to respond. This blend of flow and composition brings an unprecedented level of flexibility and control to data workflows in LLM-based apps and agents that use multiple models and APIs working together to achieve tasks.",
        "section": "Flow + Composition",
        "type": "p"
    },
    {
        "content": "Memory Management",
        "section": "Memory Management",
        "type": "h3"
    },
    {
        "content": "Langflow 1.0 natively allows every chat message to be stored, and a single flow can have multiple memory sessions. This enables you to create multiple \u201cmemories\u201d for agents to store and recall specific information as needed.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "You can edit and remove previous messages to inspect and validate a model\u2019s response behavior. Control, explore, and manage conversation histories to get your models acting just right.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "Component Freeze\u00a0\ud83e\udd76",
        "section": "Component Freeze\u00a0\ud83e\udd76",
        "type": "h3"
    },
    {
        "content": "Component output freezing is back in Langflow, and it\u2019s cooler than ever!",
        "section": "Component Freeze\u00a0\ud83e\udd76",
        "type": "p"
    },
    {
        "content": "Once a component runs, you can now lock its previous output state to prevent it from re-running.",
        "section": "Component Freeze\u00a0\ud83e\udd76",
        "type": "p"
    },
    {
        "content": "Avoid spending extra tokens and remove repetition when output should be constant \u2014 plus it's great for debugging and prototyping!",
        "section": "Component Freeze\u00a0\ud83e\udd76",
        "type": "p"
    },
    {
        "content": "Output Preview",
        "section": "Output Preview",
        "type": "h3"
    },
    {
        "content": "Each component now includes an output visualizer that opens a pop-up screen, allowing you to easily inspect and monitor transmissions between components. It provides instant feedback on your workflows, letting you see results as they are processed. \ud83d\udd0d",
        "section": "Output Preview",
        "type": "p"
    },
    {
        "content": "Inputs and Outputs Handling",
        "section": "Inputs and Outputs Handling",
        "type": "h3"
    },
    {
        "content": "Inputs and outputs finally make more sense to us, and hopefully to you too.",
        "section": "Inputs and Outputs Handling",
        "type": "p"
    },
    {
        "content": "We\u2019re proposing Langflow-native types to keep things consistent, but not limited to use any Python type. For instance, a Chat Input component sends out what we call a Message object (text + metadata like date, time, and sender), but maybe you want to introduce external types from your favorite Python package? Go wild. Each native type will have their own visualization modes and will evolve according to new integrations added.",
        "section": "Inputs and Outputs Handling",
        "type": "p"
    },
    {
        "content": "Custom Endpoint Name",
        "section": "Custom Endpoint Name",
        "type": "h3"
    },
    {
        "content": "Now you can pick a custom name for your endpoint used to call your flow from the API.",
        "section": "Custom Endpoint Name",
        "type": "p"
    },
    {
        "content": "Logs & Monitoring",
        "section": "Logs & Monitoring",
        "type": "h3"
    },
    {
        "content": "A new logs page has been added! Now, both component executions and message history from the chat can be inspected in an interactive table. This will make it easier to debug, inspect, and manage messages passing through components.",
        "section": "Logs & Monitoring",
        "type": "p"
    },
    {
        "content": "Folders \ud83d\udcc1",
        "section": "Folders \ud83d\udcc1",
        "type": "h3"
    },
    {
        "content": "We introduced folders on the home page to help categorize flows and components. Create, remove and edit them to keep your work organized.",
        "section": "Folders \ud83d\udcc1",
        "type": "p"
    },
    {
        "content": "Playground",
        "section": "Playground",
        "type": "h3"
    },
    {
        "content": "By having a clear definition of Inputs and Outputs, we could build the experience around that, which led us to create the Playground.",
        "section": "Playground",
        "type": "p"
    },
    {
        "content": "When building a project, testing and debugging are crucial. The Playground is an interface that changes dynamically based on the Inputs and Outputs you defined in your project.",
        "section": "Playground",
        "type": "p"
    },
    {
        "content": "For example, let's say you are building a simple RAG application. Generally, you have an Input, some references that come from a Vector Store Search, a Prompt, and the answer. Now, you could plug the output of your Prompt into a Text Output, rename that to \"Prompt Result,\" and see the output of your Prompt in the Playground. We have many planned features for the Playground, and we're excited to see how you'll explore it!",
        "section": "Playground",
        "type": "p"
    },
    {
        "content": "Multi-Modal",
        "section": "Multi-Modal",
        "type": "h3"
    },
    {
        "content": "Langflow is now\u00a0multi-modal! It can now handle images and more soon!",
        "section": "Multi-Modal",
        "type": "p"
    },
    {
        "content": "We\u2019ve also improved project organization, global variables and overall settings, added Python 3.12 compatibility, keyboard shortcuts and a lot of new and fun experimental components!",
        "section": "Multi-Modal",
        "type": "p"
    },
    {
        "content": "An Easier Start",
        "section": "An Easier Start",
        "type": "h2"
    },
    {
        "content": "The experience for first-time users is something we wanted to improve. For that we created a couple of Starter Projects. It's now much easier to start a new project, and you can choose from a list of starter projects to get you going.",
        "section": "An Easier Start",
        "type": "p"
    },
    {
        "content": "For now, we have:",
        "section": "An Easier Start",
        "type": "p"
    },
    {
        "content": "Basic Prompting (Hello, World): Learn the basics of a Prompt Component.\nVector Store RAG: Ingest data into a Vector Store and then use it to run a RAG application.\nMemory Chatbot: Create a simple chatbot that can remember things about the user.\nDocument QA: Build a simple flow that helps you get answers about a document.\nBlog Writer: Expand on the Prompt variables and be creative about what inputs you add to it.",
        "section": "An Easier Start",
        "type": "ul"
    },
    {
        "content": "Basic Prompting (Hello, World): Learn the basics of a Prompt Component.",
        "section": "An Easier Start",
        "type": "li"
    },
    {
        "content": "Vector Store RAG: Ingest data into a Vector Store and then use it to run a RAG application.",
        "section": "An Easier Start",
        "type": "li"
    },
    {
        "content": "Memory Chatbot: Create a simple chatbot that can remember things about the user.",
        "section": "An Easier Start",
        "type": "li"
    },
    {
        "content": "Document QA: Build a simple flow that helps you get answers about a document.",
        "section": "An Easier Start",
        "type": "li"
    },
    {
        "content": "Blog Writer: Expand on the Prompt variables and be creative about what inputs you add to it.",
        "section": "An Easier Start",
        "type": "li"
    },
    {
        "content": "Please let us know what other starter projects you would like to see in the future!",
        "section": "An Easier Start",
        "type": "p"
    },
    {
        "content": "What's Next?",
        "section": "What's Next?",
        "type": "h2"
    },
    {
        "content": "Langflow has gone through a big change, and we are excited to see how you use it and what you think of it. We plan to add more types of Input and Output like Image and Audio, and we also plan to add more Components to help you build more complex projects.",
        "section": "What's Next?",
        "type": "p"
    },
    {
        "content": "We are excited to see the community embracing Langflow as their number one AI builder and eagerly wait to see what new inspiring projects will come out of this release! A big thanks to everyone who's supporting or being part of this community in any way. \u2728",
        "section": "What's Next?",
        "type": "p"
    },
    {
        "content": "Sincerely,",
        "section": "What's Next?",
        "type": "p"
    },
    {
        "content": "The Langflow Team \ud83d\ude80",
        "section": "What's Next?",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "What's Next?",
        "type": "p"
    },
    {
        "content": "API",
        "section": "API",
        "type": "h1"
    },
    {
        "content": "The\u00a0API\u00a0section presents code templates for integrating your flow into external applications.",
        "section": "API",
        "type": "p"
    },
    {
        "content": "cURL",
        "section": "cURL",
        "type": "h3"
    },
    {
        "content": "The\u00a0cURL\u00a0tab displays sample code for posting a query to your flow. Modify the\u00a0input_value\u00a0to change your input message. Copy the code and run it to post a query to your flow and get the result.",
        "section": "cURL",
        "type": "p"
    },
    {
        "content": "input_value",
        "section": "cURL",
        "type": "code"
    },
    {
        "content": "Python API",
        "section": "Python API",
        "type": "h3"
    },
    {
        "content": "The\u00a0Python API\u00a0tab displays code to interact with your flow using the Python HTTP requests library.",
        "section": "Python API",
        "type": "p"
    },
    {
        "content": "Python Code",
        "section": "Python Code",
        "type": "h3"
    },
    {
        "content": "The\u00a0Python Code\u00a0tab displays code to interact with your flow's\u00a0.json\u00a0file using the Langflow runtime.",
        "section": "Python Code",
        "type": "p"
    },
    {
        "content": ".json",
        "section": "Python Code",
        "type": "code"
    },
    {
        "content": "Tweaks",
        "section": "Tweaks",
        "type": "h3"
    },
    {
        "content": "The\u00a0Tweaks\u00a0tab displays the available parameters for your flow. Modifying the parameters changes the code parameters across all windows. For example, changing the\u00a0Chat Input\u00a0component's\u00a0input_value\u00a0will change that value across all API calls.",
        "section": "Tweaks",
        "type": "p"
    },
    {
        "content": "input_value",
        "section": "Tweaks",
        "type": "code"
    },
    {
        "content": "Chat Widget",
        "section": "Chat Widget",
        "type": "h2"
    },
    {
        "content": "The\u00a0Chat Widget HTML\u00a0tab displays code that can be inserted in the\u00a0<body>\u00a0of your HTML to interact with your flow.",
        "section": "Chat Widget",
        "type": "p"
    },
    {
        "content": "<body>",
        "section": "Chat Widget",
        "type": "code"
    },
    {
        "content": "The\u00a0Langflow Chat Widget\u00a0is a powerful web component that enables communication with a Langflow project. This widget allows for a chat interface embedding, allowing the integration of Langflow into web applications effortlessly.",
        "section": "Chat Widget",
        "type": "p"
    },
    {
        "content": "You can get the HTML code embedded with the chat by clicking the Code button at the Sidebar after building a flow.",
        "section": "Chat Widget",
        "type": "p"
    },
    {
        "content": "Clicking the Chat Widget HTML tab, you'll get the code to be inserted. Read below to learn how to use it with HTML, React and Angular.",
        "section": "Chat Widget",
        "type": "p"
    },
    {
        "content": "Embed your flow into HTML",
        "section": "Embed your flow into HTML",
        "type": "h3"
    },
    {
        "content": "The Chat Widget can be embedded into any HTML page, inside a\u00a0<body>\u00a0tag, as demonstrated in the video below.",
        "section": "Embed your flow into HTML",
        "type": "p"
    },
    {
        "content": "<body>",
        "section": "Embed your flow into HTML",
        "type": "code"
    },
    {
        "content": "Embed your flow with React",
        "section": "Embed your flow with React",
        "type": "h3"
    },
    {
        "content": "To embed the Chat Widget using React, insert this\u00a0<script>\u00a0tag into the React\u00a0index.html\u00a0file, inside the\u00a0<body>tag:",
        "section": "Embed your flow with React",
        "type": "p"
    },
    {
        "content": "<script>",
        "section": "Embed your flow with React",
        "type": "code"
    },
    {
        "content": "<body>",
        "section": "Embed your flow with React",
        "type": "code"
    },
    {
        "content": "_10<script src=\"https://cdn.jsdelivr.net/gh/langflow-ai/langflow-embedded-chat@main/dist/build/static/js/bundle.min.js\"></script>",
        "section": "Embed your flow with React",
        "type": "code"
    },
    {
        "content": "Declare your Web Component and encapsulate it in a React component.",
        "section": "Embed your flow with React",
        "type": "p"
    },
    {
        "content": "_10declare global {  namespace JSX {    interface IntrinsicElements {      \"langflow-chat\": any;    }  }}export default function ChatWidget({ className }) {  return (    <div className={className}>      <langflow-chat        chat_inputs='{\"your_key\":\"value\"}'        chat_input_field=\"your_chat_key\"        flow_id=\"your_flow_id\"        host_url=\"langflow_url\"      ></langflow-chat>    </div>  );}",
        "section": "Embed your flow with React",
        "type": "code"
    },
    {
        "content": "Finally, you can place the component anywhere in your code to display the Chat Widget.",
        "section": "Embed your flow with React",
        "type": "p"
    },
    {
        "content": "Embed your flow with Angular",
        "section": "Embed your flow with Angular",
        "type": "h3"
    },
    {
        "content": "To use the chat widget in Angular, first add this\u00a0<script>\u00a0tag into the Angular\u00a0index.html\u00a0file, inside the\u00a0<body>\u00a0tag.",
        "section": "Embed your flow with Angular",
        "type": "p"
    },
    {
        "content": "<script>",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "<body>",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "_10<script src=\"https://cdn.jsdelivr.net/gh/langflow-ai/langflow-embedded-chat@main/dist/build/static/js/bundle.min.js\"></script>",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "When you use a custom web component in an Angular template, the Angular compiler might show a warning when it doesn't recognize the custom elements by default. To suppress this warning, add\u00a0CUSTOM_ELEMENTS_SCHEMA\u00a0to the module's\u00a0@NgModule.schemas.",
        "section": "Embed your flow with Angular",
        "type": "p"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "@NgModule.schemas",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "Open the module file (it typically ends with\u00a0.module.ts) where you'd add the\u00a0langflow-chat\u00a0web component.\nImport\u00a0CUSTOM_ELEMENTS_SCHEMA\u00a0at the top of the file:",
        "section": "Embed your flow with Angular",
        "type": "ul"
    },
    {
        "content": "Open the module file (it typically ends with\u00a0.module.ts) where you'd add the\u00a0langflow-chat\u00a0web component.",
        "section": "Embed your flow with Angular",
        "type": "li"
    },
    {
        "content": "langflow-chat",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "Import\u00a0CUSTOM_ELEMENTS_SCHEMA\u00a0at the top of the file:",
        "section": "Embed your flow with Angular",
        "type": "li"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";",
        "section": "Embed your flow with Angular",
        "type": "p"
    },
    {
        "content": "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "Add\u00a0CUSTOM_ELEMENTS_SCHEMA\u00a0to the 'schemas' array inside the '@NgModule' decorator:",
        "section": "Embed your flow with Angular",
        "type": "ul"
    },
    {
        "content": "Add\u00a0CUSTOM_ELEMENTS_SCHEMA\u00a0to the 'schemas' array inside the '@NgModule' decorator:",
        "section": "Embed your flow with Angular",
        "type": "li"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "_10@NgModule({  declarations: [    // ... Other components and directives ...  ],  imports: [    // ... Other imported modules ...  ],  schemas: [CUSTOM_ELEMENTS_SCHEMA], // Add the CUSTOM_ELEMENTS_SCHEMA here})export class YourModule {}",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "In your Angular project, find the component belonging to the module where\u00a0CUSTOM_ELEMENTS_SCHEMA\u00a0was added. Inside the template, add the\u00a0langflow-chat\u00a0tag to include the Chat Widget in your component's view:",
        "section": "Embed your flow with Angular",
        "type": "p"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "langflow-chat",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "_10<langflow-chat  chat_inputs='{\"your_key\":\"value\"}'  chat_input_field=\"your_chat_key\"  flow_id=\"your_flow_id\"  host_url=\"langflow_url\"></langflow-chat>",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA\u00a0is a built-in schema that allows Angular to recognize custom elements. Adding\u00a0CUSTOM_ELEMENTS_SCHEMA\u00a0tells Angular to allow custom elements in your templates, and it will suppress the warning related to unknown elements like\u00a0langflow-chat. Notice that you can only use the Chat Widget in components that are part of the module where you added\u00a0CUSTOM_ELEMENTS_SCHEMA.",
        "section": "Embed your flow with Angular",
        "type": "p"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "langflow-chat",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "CUSTOM_ELEMENTS_SCHEMA",
        "section": "Embed your flow with Angular",
        "type": "code"
    },
    {
        "content": "Chat Widget Configuration",
        "section": "Chat Widget Configuration",
        "type": "h2"
    },
    {
        "content": "Use the widget API to customize your Chat Widget:",
        "section": "Chat Widget Configuration",
        "type": "p"
    },
    {
        "content": "Props with the type JSON need to be passed as stringified JSONs, with the format {\"key\":\"value\"}.",
        "section": "Chat Widget Configuration",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Chat Widget Configuration",
        "type": "p"
    },
    {
        "content": "Logs",
        "section": "Logs",
        "type": "h1"
    },
    {
        "content": "The\u00a0Logs\u00a0page provides a detailed record of all component executions within a workspace. It is designed to help you track actions, debug issues, and understand the flow of data through various components.",
        "section": "Logs",
        "type": "p"
    },
    {
        "content": "Double click the cells on that table for a detailed view.",
        "section": "Logs",
        "type": "p"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Logs",
        "type": "p"
    },
    {
        "content": "Playground",
        "section": "Playground",
        "type": "h1"
    },
    {
        "content": "The\u00a0Playground\u00a0is a dynamic interface designed for real-time interaction with AIs, allowing users to chat, access memories and monitor inputs and outputs. Here, users can directly prototype and their models, making adjustments and observing different outcomes.",
        "section": "Playground",
        "type": "p"
    },
    {
        "content": "As long as you have an  component working, you can open it up by clicking the\u00a0Playground\u00a0button.",
        "section": "Playground",
        "type": "p"
    },
    {
        "content": "Notice how the Playground's window arrangement changes depending on what components are being used. Langflow can be used for applications that go beyond chat-based interfaces.",
        "section": "Playground",
        "type": "p"
    },
    {
        "content": "You can also open a flow's Playground without entering its workspace. From My\u00a0Collections or Langflow Store, click the\u00a0Playground\u00a0in one of the projects card.",
        "section": "Playground",
        "type": "p"
    },
    {
        "content": "Memory Management",
        "section": "Memory Management",
        "type": "h2"
    },
    {
        "content": "Click the Memories tab to open a table of previous interactions for a specific flow.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "Whenever you send a message from the Playground interface, under the\u00a0Memories tab you'll see a table of previous interactions for that session.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "Langflow allows every chat message to be stored, and a single flow can have multiple memory sessions.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "Chat conversations store messages categorized by a Session ID. A single flow can host multiple Session IDs, and different flows can share the same Session ID.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "Individual messages in chat memory can be edited or deleted. Modifying these memories will influence the behavior of the chatbot responses.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "To learn more about memories in Langflow, see\u00a0.",
        "section": "Memory Management",
        "type": "p"
    },
    {
        "content": "Use custom Session IDs for multiple user interactions",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "h2"
    },
    {
        "content": "Session ID values are used to track user interactions in a flow. They can be configured in the Advanced Settings of the Chat Input and Chat Output components.",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "p"
    },
    {
        "content": "By default, if the Session ID value is empty, it is set to the same value as the Flow ID. This means every API call will use the same Session ID, and you\u2019ll effectively have one session.",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "p"
    },
    {
        "content": "To have more than one session in a single flow, pass a specific Session ID to a flow with the session_id parameter in the URL. All the components in the flow will automatically use this session_id value.",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "p"
    },
    {
        "content": "session_id",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "code"
    },
    {
        "content": "session_id",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "code"
    },
    {
        "content": "Post a message to a flow with a specific Session ID with curl:",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "p"
    },
    {
        "content": "_10curl -X POST \\_10    \"http://127.0.0.1:7860/api/v1/run/4017e9f2-1fec-4643-bb05-165a8b50c4b3?stream=false\" \\_10    -H 'Content-Type: application/json' \\_10    -d '{\"input_value\": \"message\",_10    \"output_type\": \"chat\",_10    \"input_type\": \"chat\",_10    \"session_id\": \"YOUR_SESSION_ID\"_10}'",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "code"
    },
    {
        "content": "Check your flow\u2019s Memories tab. In addition to the messages stored for the Default Session, a new chat session is started with your new Session ID.",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "p"
    },
    {
        "content": "Chat Input and Chat Output components can also store a session_id parameter as a Tweak for specific sessions. The Playground will still display all available sessions, but the flow will use the value stored in the session_id tweak.",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "p"
    },
    {
        "content": "session_id",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "code"
    },
    {
        "content": "session_id",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "code"
    },
    {
        "content": "_10curl -X POST \\_10    \"http://127.0.0.1:7860/api/v1/run/4017e9f2-1fec-4643-bb05-165a8b50c4b3?stream=false\" \\_10    -H 'Content-Type: application/json' \\_10    -d '{\"input_value\": \"message\",_10    \"output_type\": \"chat\",_10    \"input_type\": \"chat\",_10    \"tweaks\": {_10        \"session_id\": \"YOUR_SESSION_ID\"_10    }_10}'",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "code"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Use custom Session IDs for multiple user interactions",
        "type": "p"
    },
    {
        "content": "Workspace Overview",
        "section": "Workspace Overview",
        "type": "h1"
    },
    {
        "content": "The Langflow Workspace",
        "section": "The Langflow Workspace",
        "type": "h2"
    },
    {
        "content": "The\u00a0Langflow Workspace\u00a0is where you assemble new flows and create AIs by connecting and running components.",
        "section": "The Langflow Workspace",
        "type": "p"
    },
    {
        "content": "Sidebar",
        "section": "Sidebar",
        "type": "h3"
    },
    {
        "content": "Located on the left, this the sidebar includes several collapsible sections that categorize the different types of pre-built components available in Langflow. Use the search bar to locate components by name.",
        "section": "Sidebar",
        "type": "p"
    },
    {
        "content": "Canvas",
        "section": "Canvas",
        "type": "h3"
    },
    {
        "content": "The canvas is the main area in the center where you can drag and drop components to create workflows.",
        "section": "Canvas",
        "type": "p"
    },
    {
        "content": "Use canvas controls in the bottom left side for zooming in and out, resetting the view, and locking or unlocking the canvas.",
        "section": "Canvas",
        "type": "p"
    },
    {
        "content": "Top Navigation Bar",
        "section": "Top Navigation Bar",
        "type": "h3"
    },
    {
        "content": "In the top navigation bar, the dropdown menu labeled with the project name offers several management and customization options for the current flow in the Langflow Workspace.",
        "section": "Top Navigation Bar",
        "type": "p"
    },
    {
        "content": "New: Create a new flow from scratch.\nSettings: Adjust settings specific to the current flow, such as its Name, Description, and Endpoint Name.\nLogs: View logs for the current project, including execution history, errors, and other runtime events.\nImport: Import a flow or component from a JSON file into the Workspace.\nExport: Export the current flow as a JSON file.\nUndo (\u2318Z): Revert the last action taken in the project.\nRedo (\u2318Y): Reapply a previously undone action.\nRefresh All: Refresh all components and delete cache.",
        "section": "Top Navigation Bar",
        "type": "ul"
    },
    {
        "content": "New: Create a new flow from scratch.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Settings: Adjust settings specific to the current flow, such as its Name, Description, and Endpoint Name.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Logs: View logs for the current project, including execution history, errors, and other runtime events.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Import: Import a flow or component from a JSON file into the Workspace.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Export: Export the current flow as a JSON file.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Undo (\u2318Z): Revert the last action taken in the project.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Redo (\u2318Y): Reapply a previously undone action.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Refresh All: Refresh all components and delete cache.",
        "section": "Top Navigation Bar",
        "type": "li"
    },
    {
        "content": "Toolbar",
        "section": "Toolbar",
        "type": "h3"
    },
    {
        "content": "The toolbar at the bottom-right corner that provides options for executing, accessing the API, and sharing workflows.",
        "section": "Toolbar",
        "type": "p"
    },
    {
        "content": "Playground: Button that executes the current flow in the workspace.\nAPI: Provides API access details and integration options for the current flow.\nShare: Allows users to share their AI with others.",
        "section": "Toolbar",
        "type": "ul"
    },
    {
        "content": "Playground: Button that executes the current flow in the workspace.",
        "section": "Toolbar",
        "type": "li"
    },
    {
        "content": "API: Provides API access details and integration options for the current flow.",
        "section": "Toolbar",
        "type": "li"
    },
    {
        "content": "Share: Allows users to share their AI with others.",
        "section": "Toolbar",
        "type": "li"
    },
    {
        "content": "Hi, how can I help you?",
        "section": "Toolbar",
        "type": "p"
    }
]